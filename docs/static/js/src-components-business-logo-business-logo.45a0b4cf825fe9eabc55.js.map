{"version":3,"sources":["/Users/dmatos/Documents/git/webplatform/ui-components/src/colors/colors.ts","/Users/dmatos/Documents/git/webplatform/ui-components/src/components/business-logo/BusinessLogo.tsx","/Users/dmatos/Documents/git/webplatform/ui-components/src/components/business-logo/BusinessLogo.mdx","/Users/dmatos/Documents/git/webplatform/ui-components/src/ions/icon/base/Icon.tsx","/Users/dmatos/Documents/git/webplatform/ui-components/src/ions/icon/wrapper/SvgWrapper.tsx"],"names":["dashGreen00","dashGreen04","dashGreen06","midGreen00","pink00","pink01","pink02","pink03","pink04","pink05","functionalRed02","red00","red01","red02","red03","red04","red05","grey00","grey01","grey02","grey03","grey04","grey05","grey06","black","white","validatorGreen","defaultProps","width","height","BusinessLogo","props","SvgWrapper","viewBox","d","fill","layoutProps","MDXLayout","MDXContent","components","mdxType","of","__position","__code","__scope","this","Playground","Props","style","display","flexDirection","justifyContent","isMDXComponent","getColor","propName","animated","Icon","styled","svg","attrs","version","xmlns","size","disabled","title","children","isAnimated","Array","from","find","child","type","isAnimatedSvg"],"mappings":"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","file":"static/js/src-components-business-logo-business-logo.e85ddb2f.js","sourcesContent":["/* -- DASH_GREEN -- */\nexport const dashGreen00 = '#0E353D';\nexport const dashGreen01 = '#3E5D64';\nexport const dashGreen02 = '#6E868B';\nexport const dashGreen03 = '#9FAEB1';\nexport const dashGreen04 = '#CFD7D8';\nexport const dashGreen05 = '#D9DFE0';\nexport const dashGreen06 = '#F5F7F7';\n\n/* -- DASH_DARKER_GREEN -- */\nexport const dashDarkerGreen00 = '#071A1E';\n\n/* -- MID_GREEN -- */\nexport const midGreen00 = '#0E6476';\nexport const midGreen01 = '#3E8391';\nexport const midGreen02 = '#6EA2AD';\nexport const midGreen03 = '#9FC1C8';\nexport const midGreen04 = '#CFE0E4';\nexport const midGreen05 = '#D9E6E9';\n\n/* -- PINK -- */\nexport const pink00 = '#FDB5AF';\nexport const pink01 = '#FDC4BF';\nexport const pink02 = '#FED3CF';\nexport const pink03 = '#FEE1DF';\nexport const pink04 = '#FFF0EF';\nexport const pink05 = '#FFF3F2';\n\n/* -- ORANGE -- */\nexport const orange00 = '#FE5B33';\nexport const orange01 = '#FE7C5C';\nexport const orange02 = '#FE9D85';\nexport const orange03 = '#FFBDAD';\nexport const orange04 = '#FFDED6';\nexport const orange05 = '#FFE5DE';\n\n/* -- FUNCTIONAL_RED -- */\nexport const functionalRed00 = '#4E000D';\nexport const functionalRed01 = '#8B0018';\nexport const functionalRed02 = '#FF002D';\nexport const functionalRed03 = '#FFA49F';\n\n/* -- RED -- */\nexport const red00 = '#BF0A33';\nexport const red01 = '#CC3B5C';\nexport const red02 = '#D96C85';\nexport const red03 = '#E59DAD';\nexport const red04 = '#F2CED6';\nexport const red05 = '#F5D8DE';\n\n/* -- GREY -- */\nexport const grey00 = '#615B57';\nexport const grey01 = '#999592';\nexport const grey02 = '#CCC7C2';\nexport const grey03 = '#D6D2CE';\nexport const grey04 = '#E0DDDA';\nexport const grey05 = '#EBE9E7';\nexport const grey06 = '#F5F4F3';\n\n/* -- BLACK -- */\nexport const black = '#000000';\n\n/* -- WHITE -- */\nexport const white = '#FFFFFF';\n\n/* -- VALIDATOR_GREEN -- */\nexport const validatorGreen = '#20B422';\n\n/* -- ACCESSIBLE_VALIDATOR_GREEN -- */\nexport const accessibleValidatorGreen = '#278637';\n\n/* -- ACCESSIBLE_VALIDATOR_RED -- */\nexport const accessibleValidatorRed = '#e00635';\n\n/* -- TRANSPARENT -- */\nexport const transparent = 'transparent';\n","import * as React from 'react';\nimport { SvgWrapper } from '@ions/icon/wrapper/SvgWrapper';\nimport { IconProps } from '@ions/icon/types';\n\nconst defaultProps = {\n  width: 187, //px\n  height: 63 //px\n};\n\n// This is the Dashlane Business Logo\n// For this logo the colors are in the SVG path since they cannot be changed\nexport const BusinessLogo: React.FunctionComponent<IconProps> = (\n  props: IconProps\n): JSX.Element => (\n  <SvgWrapper viewBox='0 0 187 63' {...defaultProps} {...props}>\n    <React.Fragment>\n      <path\n        d='M19.0784 49.3971C20.131 50.5428 20.7012 52.0851 20.7012 53.9358C20.7012 56.3154 19.9117 58.2102 18.3328 59.5762C16.7539 60.9422 14.6049 61.6473 11.8418 61.6473H0V33.842H11.4032C14.1224 33.842 16.3153 34.503 17.8942 35.7809C19.4731 37.0588 20.3064 38.8214 20.3064 41.0688C20.3064 42.8314 19.824 44.2855 18.903 45.3431C17.9381 46.4007 16.6662 47.1057 15.0434 47.4142C16.6223 47.5904 18.0258 48.2514 19.0784 49.3971ZM6.40333 38.4689V45.2109H9.95586C11.1839 45.2109 12.1049 44.9024 12.8067 44.3296C13.5084 43.7127 13.8593 42.9195 13.8593 41.8619C13.8593 40.8044 13.5084 39.9671 12.8505 39.3943C12.1488 38.7774 11.1839 38.513 9.95586 38.513H6.40333V38.4689ZM13.2014 55.7866C13.9031 55.1256 14.2101 54.2443 14.2101 53.0986C14.2101 52.0851 13.8593 51.2478 13.1575 50.6309C12.4558 50.014 11.5348 49.7056 10.3506 49.7056H6.35947V56.756H10.3506C11.5786 56.756 12.4996 56.4476 13.2014 55.7866Z'\n        fill='#0E6476'\n      />\n      <path\n        d='M25.833 59.7084C23.8593 57.9458 22.8506 55.4341 22.8506 52.2614V33.842H29.2101V51.8207C29.2101 53.363 29.6486 54.5968 30.4819 55.4781C31.3591 56.3594 32.4994 56.8001 33.9906 56.8001C35.4818 56.8001 36.6221 56.3594 37.4993 55.4781C38.3765 54.5968 38.7712 53.407 38.7712 51.8207V33.842H45.1745V52.2173C45.1745 55.4341 44.1658 57.9017 42.1483 59.6643C40.1308 61.4269 37.4116 62.3082 33.9468 62.3082C30.5258 62.3523 27.8066 61.471 25.833 59.7084Z'\n        fill='#0E6476'\n      />\n      <path\n        d='M50.2618 59.8405C48.3321 58.122 47.3672 55.6984 47.3672 52.5698H53.7705C53.7705 54.068 54.1652 55.2577 54.9547 56.095C55.7441 56.9322 56.8406 57.3729 58.2441 57.3729C59.4283 57.3729 60.3493 57.1085 61.0072 56.5797C61.665 56.0509 61.972 55.3018 61.972 54.3324C61.972 53.4951 61.7089 52.7901 61.2264 52.3054C60.744 51.7766 59.8668 51.2919 58.5949 50.7631L53.5951 48.8242C51.753 48.1192 50.3496 47.1497 49.3847 45.8718C48.4198 44.5939 47.9812 43.0517 47.9812 41.245C47.9812 39.6146 48.3759 38.2045 49.1654 36.9706C49.9548 35.7368 51.0952 34.7674 52.5863 34.1064C54.0775 33.4454 55.788 33.0929 57.8055 33.0929C59.823 33.0929 61.5773 33.4454 63.1124 34.1945C64.6474 34.9436 65.8316 35.9571 66.6649 37.2791C67.4982 38.6011 67.9368 40.1433 67.9368 41.906H61.5335C61.5335 40.6281 61.1826 39.6146 60.5247 38.9095C59.8668 38.2045 58.9019 37.896 57.6739 37.896C56.6652 37.896 55.8319 38.1604 55.2617 38.6451C54.6477 39.1298 54.3845 39.7908 54.3845 40.6721C54.3845 41.4212 54.6915 42.0822 55.2617 42.6551C55.8319 43.1839 56.7967 43.7567 58.2002 44.2855L62.8053 46.0922C64.6913 46.8413 66.0947 47.8548 67.0158 49.1327C67.9368 50.4106 68.3754 52.041 68.3754 53.8917C68.3754 55.6103 67.9368 57.1085 67.1035 58.4305C66.2702 59.7083 65.086 60.7218 63.5509 61.4269C62.0159 62.1319 60.2616 62.4845 58.2002 62.4845C54.8231 62.4404 52.1478 61.5591 50.2618 59.8405Z'\n        fill='#0E6476'\n      />\n      <path d='M70.437 33.842H76.8403V61.6473H70.437V33.842Z' fill='#0E6476' />\n      <path\n        d='M79.6904 33.842H86.2692L95.8742 51.8207V33.842H102.014V61.6473H95.4356L85.8306 43.6245V61.6032H79.6904V33.842Z'\n        fill='#0E6476'\n      />\n      <path\n        d='M104.866 33.842H121.795V38.9977H111.269V45.299H121.795V50.3225H111.269V56.4476H121.795V61.6032H104.866V33.842Z'\n        fill='#0E6476'\n      />\n      <path\n        d='M126.181 59.8405C124.251 58.122 123.286 55.6984 123.286 52.5698H129.689C129.689 54.068 130.084 55.2577 130.874 56.095C131.663 56.9322 132.76 57.3729 134.163 57.3729C135.347 57.3729 136.268 57.1085 136.926 56.5797C137.584 56.0509 137.891 55.3018 137.891 54.3324C137.891 53.4951 137.628 52.7901 137.145 52.3054C136.663 51.7766 135.786 51.2919 134.514 50.7631L129.514 48.8242C127.672 48.1192 126.269 47.1497 125.304 45.8718C124.339 44.5939 123.9 43.0517 123.9 41.245C123.9 39.6146 124.295 38.2045 125.084 36.9706C125.874 35.7368 127.014 34.7674 128.505 34.1064C129.996 33.4454 131.707 33.0929 133.724 33.0929C135.742 33.0929 137.496 33.4454 139.031 34.1945C140.566 34.9436 141.751 35.9571 142.584 37.2791C143.417 38.6011 143.856 40.1433 143.856 41.906H137.452C137.452 40.6281 137.102 39.6146 136.444 38.9095C135.786 38.2045 134.821 37.896 133.593 37.896C132.584 37.896 131.751 38.1604 131.181 38.6451C130.567 39.1298 130.303 39.7908 130.303 40.6721C130.303 41.4212 130.61 42.0822 131.181 42.6551C131.751 43.1839 132.716 43.7567 134.119 44.2855L138.724 46.0922C140.61 46.8413 142.014 47.8548 142.935 49.1327C143.856 50.4106 144.294 52.041 144.294 53.8917C144.294 55.6103 143.856 57.1085 143.022 58.4305C142.189 59.7083 141.005 60.7218 139.47 61.4269C137.935 62.1319 136.18 62.4845 134.119 62.4845C130.786 62.4404 128.111 61.5591 126.181 59.8405Z'\n        fill='#0E6476'\n      />\n      <path\n        d='M148.505 59.8405C146.575 58.122 145.61 55.6984 145.61 52.5698H152.013C152.013 54.068 152.408 55.2577 153.197 56.095C153.987 56.9322 155.083 57.3729 156.487 57.3729C157.671 57.3729 158.592 57.1085 159.25 56.5797C159.908 56.0509 160.215 55.3018 160.215 54.3324C160.215 53.4951 159.952 52.7901 159.469 52.3054C158.987 51.7766 158.11 51.2919 156.838 50.7631L151.838 48.8242C149.996 48.1192 148.592 47.1497 147.627 45.8718C146.662 44.5939 146.224 43.0517 146.224 41.245C146.224 39.6146 146.619 38.2045 147.408 36.9706C148.198 35.7368 149.338 34.7674 150.829 34.1064C152.32 33.4454 154.031 33.0929 156.048 33.0929C158.066 33.0929 159.82 33.4454 161.355 34.1945C162.89 34.9436 164.074 35.9571 164.908 37.2791C165.741 38.6011 166.179 40.1433 166.179 41.906H159.776C159.776 40.6281 159.425 39.6146 158.767 38.9095C158.11 38.2045 157.145 37.896 155.917 37.896C154.908 37.896 154.075 38.1604 153.504 38.6451C152.89 39.1298 152.627 39.7908 152.627 40.6721C152.627 41.4212 152.934 42.0822 153.504 42.6551C154.075 43.1839 155.039 43.7567 156.443 44.2855L161.048 46.0922C162.934 46.8413 164.337 47.8548 165.258 49.1327C166.179 50.4106 166.618 52.041 166.618 53.8917C166.618 55.6103 166.179 57.1085 165.346 58.4305C164.513 59.7083 163.329 60.7218 161.794 61.4269C160.259 62.1319 158.504 62.4845 156.443 62.4845C153.066 62.4404 150.39 61.5591 148.505 59.8405Z'\n        fill='#0E6476'\n      />\n      <path\n        d='M0.0878906 1.23387C0.0878906 1.01354 0.263324 0.793213 0.526475 0.793213H10.5262C13.377 0.793213 15.9208 1.41013 18.026 2.68802C20.0873 3.87779 21.7978 5.6404 22.9381 7.71147C24.0784 9.82661 24.6486 12.118 24.6486 14.6738C24.6486 17.2296 24.0784 19.565 22.9381 21.6802C21.7978 23.7953 20.1312 25.5579 18.026 26.7477C15.8769 27.9815 13.377 28.5984 10.5262 28.5984H0.526475C0.307183 28.5984 0.0878906 28.4222 0.0878906 28.1578V1.23387ZM9.95603 23.1784C11.7104 23.1784 13.1577 22.7818 14.3857 21.9886C15.5699 21.2395 16.5348 20.1379 17.1488 18.86C18.3768 16.172 18.3768 13.1315 17.1488 10.4435C16.5348 9.16563 15.6138 8.06399 14.3857 7.31488C13.1577 6.56577 11.6665 6.16918 9.95603 6.16918H6.9298C6.71051 6.16918 6.49122 6.34544 6.49122 6.60984V22.7818C6.49122 23.0021 6.66665 23.2225 6.9298 23.2225L9.95603 23.1784Z'\n        fill='#0E353D'\n      />\n      <path\n        d='M51.7531 26.7917C49.911 25.1172 48.9461 22.8699 48.8584 19.9616C48.8584 19.7413 49.0338 19.5209 49.2531 19.5209H54.8231C55.0424 19.5209 55.2179 19.6972 55.2617 19.9175C55.3494 21.2395 55.7442 22.2971 56.4459 23.0462C57.2354 23.8834 58.3318 24.3241 59.7353 24.3241C60.9195 24.3241 61.8405 24.0597 62.4984 23.5309C63.1562 23.0021 63.4632 22.253 63.4632 21.2836C63.4632 20.4463 63.2001 19.7413 62.7177 19.2565C62.2352 18.7278 61.358 18.243 60.0861 17.7143L55.0863 15.7754C53.2442 15.0703 51.8408 14.1009 50.8759 12.823C49.911 11.5451 49.4724 10.0028 49.4724 8.19615C49.4724 6.56573 49.8671 5.15564 50.6566 3.92181C51.446 2.68798 52.5864 1.71855 54.0775 1.05757C55.7003 0.352523 57.4546 0 59.4283 0C61.4458 0 63.2001 0.352523 64.7351 1.10163C66.2702 1.85074 67.4544 2.86425 68.2877 4.18621C69.0771 5.37597 69.4718 6.78606 69.5596 8.37241C69.5596 8.59274 69.3841 8.81307 69.1648 8.81307H63.5948C63.3755 8.81307 63.2001 8.6368 63.1562 8.41648C63.1124 7.31485 62.7615 6.4776 62.1914 5.86069C61.5335 5.15564 60.5686 4.84719 59.3406 4.84719C58.3318 4.84719 57.4985 5.11158 56.9283 5.5963C56.3143 6.08102 56.0512 6.74199 56.0512 7.6233C56.0512 8.37241 56.3582 9.07746 56.9283 9.60624C57.4985 10.135 58.4634 10.7079 59.8669 11.2367L64.472 13.0433C66.3579 13.7924 67.7614 14.806 68.6824 16.0838C69.6034 17.3617 70.042 18.9922 70.042 20.8429C70.042 22.5614 69.6034 24.0597 68.7701 25.3816C67.9368 26.6595 66.7526 27.673 65.2176 28.3781C63.6825 29.0831 61.9282 29.4356 59.8669 29.4356C56.3582 29.3916 53.6828 28.5103 51.7531 26.7917Z'\n        fill='#0E353D'\n      />\n      <path\n        d='M98.4182 0.793213H103.988C104.207 0.793213 104.427 0.969474 104.427 1.23387V22.4733C104.427 22.6937 104.602 22.914 104.865 22.914H114.295C114.514 22.914 114.734 23.0903 114.734 23.3547V28.2018C114.734 28.4222 114.558 28.6425 114.295 28.6425H98.462C98.2427 28.6425 98.0234 28.4662 98.0234 28.2018V1.23387C98.0234 1.01354 98.1989 0.793213 98.4182 0.793213Z'\n        fill='#0E353D'\n      />\n      <path\n        d='M144.47 0.793213H150.347C150.522 0.793213 150.654 0.881344 150.698 1.01354L159.382 17.2736C159.513 17.494 159.732 17.538 159.952 17.4499C160.083 17.3618 160.171 17.2296 160.171 17.0974V1.23387C160.171 1.01354 160.347 0.793213 160.61 0.793213H165.873C166.092 0.793213 166.311 0.969474 166.311 1.23387V28.2018C166.311 28.4222 166.136 28.6425 165.873 28.6425H159.996C159.82 28.6425 159.689 28.5544 159.601 28.4222L150.917 12.1621C150.829 11.9417 150.566 11.8977 150.347 11.9858C150.215 12.0739 150.127 12.2061 150.127 12.3383V28.2018C150.127 28.4222 149.952 28.6425 149.689 28.6425H144.426C144.207 28.6425 143.987 28.4662 143.987 28.2018V1.23387C144.031 1.01354 144.207 0.793213 144.47 0.793213Z'\n        fill='#0E353D'\n      />\n      <path\n        d='M169.513 0.793213H185.565C185.784 0.793213 186.004 0.969474 186.004 1.23387V5.55227C186.004 5.77259 185.828 5.99292 185.565 5.99292H175.916C175.697 5.99292 175.478 6.16918 175.478 6.43357V11.8977C175.478 12.118 175.653 12.3383 175.916 12.3383H185.565C185.784 12.3383 186.004 12.5146 186.004 12.779V16.9652C186.004 17.1855 185.828 17.4058 185.565 17.4058H175.916C175.697 17.4058 175.478 17.5821 175.478 17.8465V23.0903C175.478 23.3106 175.653 23.5309 175.916 23.5309H185.565C185.784 23.5309 186.004 23.7072 186.004 23.9716V28.2018C186.004 28.4222 185.828 28.6425 185.565 28.6425H169.513C169.294 28.6425 169.074 28.4662 169.074 28.2018V1.23387C169.118 1.01354 169.294 0.793213 169.513 0.793213Z'\n        fill='#0E353D'\n      />\n      <path\n        d='M48.5074 28.2019L39.2971 1.01354C39.2532 0.881344 39.1655 0.793213 39.034 0.793213H33.0254C32.8938 0.793213 32.7622 0.881344 32.7183 1.01354L23.5519 28.2019C23.5081 28.3781 23.5958 28.5544 23.7274 28.5984H23.8151H29.8237C29.9991 28.5984 30.1746 28.4662 30.2184 28.29L31.3587 24.1478H40.569L41.7093 28.29C41.7532 28.4662 41.9286 28.5984 42.104 28.5984H48.1126C48.2881 28.5984 48.4197 28.4662 48.4197 28.29L48.5074 28.2019ZM33.0254 18.5956L35.7446 8.90123C35.7884 8.72497 35.9639 8.63684 36.1393 8.68091C36.227 8.72497 36.3147 8.8131 36.3586 8.90123L39.0778 18.5956C39.1217 18.8159 39.034 19.0363 38.8147 19.1244H38.6831H33.4201C33.2008 19.1244 33.0254 18.9481 33.0254 18.7278V18.5956Z'\n        fill='#0E353D'\n      />\n      <path\n        d='M141.575 28.2019L132.364 1.01354C132.321 0.881344 132.189 0.793213 132.057 0.793213H126.049C125.917 0.793213 125.786 0.881344 125.742 1.01354L116.619 28.2019C116.575 28.3781 116.663 28.5544 116.795 28.5984H116.882H122.891C123.067 28.5984 123.242 28.4662 123.286 28.29L124.47 24.1478H133.68L134.821 28.29C134.864 28.4662 135.04 28.5984 135.215 28.5984H141.224C141.399 28.5984 141.531 28.4662 141.531 28.29L141.575 28.2019ZM126.049 18.5956L128.768 8.90123C128.812 8.72497 128.987 8.63684 129.163 8.68091C129.251 8.72497 129.338 8.8131 129.382 8.90123L132.101 18.5956C132.145 18.8159 132.014 19.0363 131.794 19.1244H131.663H126.4C126.18 19.1244 126.005 18.9481 126.005 18.7278L126.049 18.5956Z'\n        fill='#0E353D'\n      />\n      <path\n        d='M94.6467 0.793213H89.0767C88.8574 0.793213 88.6381 0.969474 88.6381 1.23387V11.6333C88.6381 11.8536 88.4627 12.0739 88.1995 12.0739H79.4717C79.2524 12.0739 79.0331 11.8977 79.0331 11.6333V1.23387C79.0331 1.01354 78.8577 0.793213 78.5945 0.793213H73.0245C72.8052 0.793213 72.5859 0.969474 72.5859 1.23387V28.2018C72.5859 28.4222 72.7614 28.6425 73.0245 28.6425H78.5945C78.8138 28.6425 79.0331 28.4662 79.0331 28.2018V17.9787C79.0331 17.7584 79.2086 17.538 79.4717 17.538H88.1995C88.4188 17.538 88.6381 17.7143 88.6381 17.9787V28.2018C88.6381 28.4222 88.8136 28.6425 89.0767 28.6425H94.6467C94.866 28.6425 95.0853 28.4662 95.0853 28.2018V1.23387C95.0853 1.01354 94.9099 0.793213 94.6467 0.793213Z'\n        fill='#0E353D'\n      />\n    </React.Fragment>\n  </SvgWrapper>\n);\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { BusinessLogo } from './BusinessLogo';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"business-logo\"\n    }}>{`Business Logo`}</h1>\n    <p>{`A Dashlane Business Logo component`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={BusinessLogo} mdxType=\"Props\" />\n    <Playground __position={1} __code={'<BusinessLogo />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      BusinessLogo\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }} mdxType=\"Playground\">\n  <BusinessLogo mdxType=\"BusinessLogo\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import styled from 'styled-components';\nimport { Props as IconProps } from '@ions/icon/types';\nimport { dashGreen00 } from '@colors';\n\nexport type ColorProps = 'color' | 'hoverColor' | 'activeColor';\ninterface Props extends Omit<IconProps, 'title' | 'children'> {\n  animated?: boolean;\n}\n\nconst getWidth = ({ width, size }: Props) => `${size || width || 20}px`;\nconst getHeight = ({ height, size }: Props) => `${size || height || 20}px`;\nconst getColor = (propName: ColorProps = 'color') => (props: Props): string =>\n  props.animated ? 'none' : props[propName] || props['color'] || dashGreen00;\n\nexport const Icon = styled.svg.attrs<Props>(({ viewBox }: Props) => ({\n  viewBox: viewBox || '0 0 20 20',\n  version: '1.1',\n  xmlns: 'http://www.w3.org/2000/svg'\n}))`\n  display: flex;\n  width: ${getWidth};\n  height: ${getHeight};\n  cursor: ${({ disabled }): string => (disabled ? 'not-allowed' : 'inherit')};\n  outline: none;\n  border-radius: 4px;\n  fill: ${getColor()};\n  opacity: ${({ disabled }): number => (disabled ? 0.5 : 1)};\n  transition: ${({ animated }): string =>\n    animated ? 'none' : 'all 0.1s ease-in'};\n  &:hover {\n    fill: ${getColor('hoverColor')};\n  }\n  &:active {\n    fill: ${getColor('activeColor')};\n  }\n`;\n","import * as React from 'react';\nimport { Icon } from '@ions/icon/base/Icon';\nimport { Props } from '@ions/icon/types';\n\nconst isAnimatedSvg = (children: React.ReactElement[]) =>\n  !!Array.from<React.ReactElement>(children).find(\n    child => child.type === 'animateTransform'\n  );\n\nexport const SvgWrapper: React.FunctionComponent<Props> = ({\n  title,\n  children,\n  ...props\n}: Props): JSX.Element => {\n  const isAnimated =\n    children.props && children.props.children\n      ? isAnimatedSvg(children.props.children)\n      : false;\n  return (\n    <Icon animated={isAnimated} {...props}>\n      {title ? <title>{title}</title> : null}\n      {children}\n    </Icon>\n  );\n};\n"],"sourceRoot":""}