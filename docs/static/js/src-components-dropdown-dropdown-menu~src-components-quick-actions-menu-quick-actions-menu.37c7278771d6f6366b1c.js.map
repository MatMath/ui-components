{"version":3,"sources":["/home/oclero/Development/ui-components-github/src/colors/colors.ts","/home/oclero/Development/ui-components-github/src/components/button/Button.module.scss","/home/oclero/Development/ui-components-github/src/components/button/Button.tsx","/home/oclero/Development/ui-components-github/src/ions/text/StyledText.tsx","/home/oclero/Development/ui-components-github/src/components/dropdown/DropdownElement.tsx","/home/oclero/Development/ui-components-github/src/components/dropdown/subcomponents/DropdownCard.tsx","/home/oclero/Development/ui-components-github/src/components/dropdown/helpers.ts","/home/oclero/Development/ui-components-github/src/components/dropdown/DropdownMenu.tsx","/home/oclero/Development/ui-components-github/src/ions/icon/base/Icon.tsx","/home/oclero/Development/ui-components-github/src/ions/icon/wrapper/SvgWrapper.tsx","/home/oclero/Development/ui-components-github/src/utility/cssUtils.ts","/home/oclero/Development/ui-components-github/src/utility/helpers.ts","/home/oclero/Development/ui-components-github/src/utility/positionCompute.ts"],"names":["dashGreen00","dashGreen04","dashGreen06","midGreen00","pink00","pink01","pink02","pink03","pink04","pink05","functionalRed02","red00","red01","red02","red03","red04","red05","grey00","grey01","grey02","grey03","grey04","grey05","grey06","black","white","validatorGreen","module","exports","Button","nature","size","theme","children","htmlButtonProps","className","getClassNames","styles","button","content","defaultProps","StyledText","styled","span","Wrapper","DropdownElement","props","type","onClick","elementClassName","DropdownCard","div","maxHeight","isDropdownOutOfContainer","elementDimensions","containerDimensions","placement","rect","top","totalHeight","minHeight","height","assertUnreachable","getControllerAndMenuDimensions","params","menuRef","current","left","right","bottom","width","totalWidth","dropdownStyle","getCSSComputedStyle","element","getBeforePseudoElement","elementIsBefore","isHeightAndWidthSet","getAlternativeStyle","computeElementHeight","computeElementWidth","getBoundingRect","controllerRef","getDropdownPosition","dockingSide","MenuWrapper","isReadyForDisplay","POSSIBLE_PLACEMENTS","DropdownMenu","React","setPlacement","prevIsOpen","isOpen","containerElement","containerRef","window","getContainerBoundaries","newPlacement","getElementPlacement","isElementOutOfContainerMethod","possibilities","e","console","error","ref","menuMaxHeight","menuClassName","getColor","propName","animated","Icon","svg","attrs","viewBox","version","xmlns","disabled","SvgWrapper","title","isAnimated","Array","from","find","child","isAnimatedSvg","result","classes","forEach","value","push","Object","entries","key","join","_","Error","containsNumber","test","containsChar","char","indexOf","style","returnNumber","isNaN","elementStyle","alternativeHeight","parseInt","paddingTop","paddingBottom","marginTop","marginBottom","tooltipStyle","alternativeWidth","paddingLeft","paddingRight","marginLeft","marginRight","initialStyle","innerDiv","document","createElement","values","property","toString","appendChild","getBoundingClientRect","remove","defaultRect","container","innerHeight","maxWidth","innerWidth","minWidth","containerRect","getComputedStyle","undefined","getElementDimensions","elementRef","newPossibilities","filter","possiblePlacement","firstPossiblePlacement"],"mappings":"+GAAA,gOACO,IAAMA,EAAc,U,mMACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,yGACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,yGACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,yGACpB,IAAMC,EAAc,U,mMACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,yGACpB,IAAMC,EAAc,U,mMAGM,Y,OAAA,Y,oBAAA,Y,sBAAA,U,+GAG1B,IAAMC,EAAa,U,kMACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,wGACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,wGACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,wGACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,wGACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,wGAGnB,IAAMC,EAAS,U,mKACf,IAAMC,EAAS,U,mKACf,IAAMC,EAAS,U,mKACf,IAAMC,EAAS,U,mKACf,IAAMC,EAAS,U,mKACf,IAAMC,EAAS,U,mKAGE,Y,OAAA,Y,oBAAA,Y,sBAAA,U,sGACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,sGACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,sGACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,sGACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,sGACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,sGAGO,Y,OAAA,Y,oBAAA,Y,sBAAA,U,6GACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,6GACxB,IAAMC,EAAkB,U,uMACA,Y,OAAA,Y,oBAAA,Y,sBAAA,U,6GAGxB,IAAMC,EAAQ,U,kKACd,IAAMC,EAAQ,U,kKACd,IAAMC,EAAQ,U,kKACd,IAAMC,EAAQ,U,kKACd,IAAMC,EAAQ,U,kKACd,IAAMC,EAAQ,U,kKAGd,IAAMC,EAAS,U,mKACf,IAAMC,EAAS,U,mKACf,IAAMC,EAAS,U,mKACf,IAAMC,EAAS,U,mKACf,IAAMC,EAAS,U,mKACf,IAAMC,EAAS,U,mKACf,IAAMC,EAAS,U,mKAGf,IAAMC,EAAQ,U,kKAGd,IAAMC,EAAQ,U,6LAGd,IAAMC,EAAiB,U,sMAGU,Y,OAAA,Y,oBAAA,Y,sBAAA,U,sHAGF,Y,OAAA,Y,oBAAA,Y,sBAAA,U,oHAGX,gB,OAAA,gB,oBAAA,gB,sBAAA,c,uKC1E3BC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,sBAAsB,QAAU,wBAAwB,UAAY,0BAA0B,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,qBAAqB,QAAU,0B,mRCiB3UC,EAAgC,SAAC,GAMvC,IAAD,IALJC,cAKI,MAhB8B,UAgB9B,MAJJC,YAII,MAf0B,SAe1B,MAHJC,aAGI,MAd4B,QAc5B,EAFJC,EAEI,EAFJA,SACGC,EACC,oDACJ,OACE,0CACMA,EADN,CAEEC,UAAWC,YACTC,IAAOC,OACPD,IAAOP,GACPO,IAAON,GACPM,IAAOL,MAGT,wBAAMG,UAAWE,IAAOE,SAAUN,K,kLAKxCJ,EAAOW,aAAe,CACpBV,OAjCkC,UAkClCC,KAjC8B,SAkC9BC,MAjCgC,SAoCnBH,M,sjBC5CR,IAAMY,EAAaC,IAAOC,KAAV,K,8oBCQvB,IAAMC,EAAUF,IAAOJ,OAAV,IACFtC,IAgBaE,KAIlB2C,EAAmC,SAAAC,GACvC,OACE,gBAACF,EAAD,CACEG,KAAK,SACLC,QAASF,EAAME,QACfb,UAAWW,EAAMG,kBAEjB,gBAACR,EAAD,KAAaK,EAAMb,YAKVY,M,i2BCnCf,IAAMK,EAAeR,IAAOS,IAAV,IAGI1B,IACAxB,IAIN,SAAA6C,GAAK,OAAIA,EAAMM,WAAa,MAI7BF,I,kTCJFG,EAET,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,kBAAmBC,EAAqC,EAArCA,oBAAqBC,EAAgB,EAAhBA,UAC7C,OAAQA,GACN,IAAK,MACH,OACEF,EAAkBG,KAAKC,IAAMJ,EAAkBK,YAC/CJ,EAAoBK,UAExB,IAAK,SACH,OACEN,EAAkBG,KAAKC,IACrBJ,EAAkBG,KAAKI,OACvBP,EAAkBK,YACpBJ,EAAoBH,UAExB,QAEE,OADAU,YAAkBN,IACX,I,sMAUN,IAAMO,EAAiC,SAC5CC,GAEA,IAAKA,EAAOC,QAAQC,QAClB,MAAO,CACLT,KAAM,CACJC,IAAK,EACLS,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,MAAO,EACPT,OAAQ,GAEVF,YAAa,EACbY,WAAY,GAIhB,IAAMC,EAAgBC,YAAoB,CACxCC,QAASV,EAAOC,QAAQC,QACxBS,uBAAwBX,EAAOY,kBAlBX,EAoBEC,YAAoBL,GAExC,GACAM,YAAoBN,EAAeR,EAAOC,QAAQC,SAvBhC,IAqBdL,cArBc,MAqBL,KArBK,MAqBCS,aArBD,MAqBS,KArBT,EA4BtB,MAAO,CACLX,YALkBoB,YAAqBP,EAAeX,GAMtDU,WALiBS,YAAoBR,EAAeF,GAMpDb,KALWwB,YAAgBjB,EAAOkB,cAAchB,W,4MAS7C,IAAMiB,EAAsB,SAAC,GAGX,IAFvBC,EAEsB,EAFtBA,YACA5B,EACsB,EADtBA,UAEA,MAAM,GAAN,OAAwB,QAAdA,EAAsB,SAAW,MAA3C,4CACsC,QAAdA,GAAsB,EAxEjC,EAuEb,mBAEE4B,EAFF,S,koBCxDF,IAAMC,EAAc3C,IAAOS,IAAV,IAEJ,SAAAL,GAAK,OAAKA,EAAMwC,kBAAoB,EAAI,GACjDH,GAKEI,EAAmC,CAAC,MAAO,UAE3CC,EAAgC,SAAA1C,GAAU,IAAD,EACX2C,WAAiC,MADtB,mBACtCjC,EADsC,KAC3BkC,EAD2B,KAEvCzB,EAAUwB,SAA6B,MACvCE,EAAaF,UAAa,GAoChC,OAlCAA,YAAgB,WACd,GAAI3C,EAAM8C,SAAWD,EAAWzB,UAGhCyB,EAAWzB,QAAUpB,EAAM8C,OAC3BF,EAAa,MAERzB,EAAQC,SAAYpB,EAAMoC,cAAchB,SAA7C,CAGA,IAAMZ,EAAoBS,EAA+B,CACvDE,UACAiB,cAAepC,EAAMoC,gBAGjBW,EACH/C,EAAMgD,cAAgBhD,EAAMgD,aAAa5B,SAAY6B,OAClDxC,EAAsByC,YAAuBH,GAEnD,IACE,IAAMI,EAAeC,YAAoB,CACvCC,8BAA+B9C,EAC/BG,UAAWV,EAAMU,WA9BC,SA+BlB4C,cAAeb,EACfjC,oBACAC,wBAEFmC,EAAaO,GACb,MAAOI,GACPC,QAAQC,MAAM,8CAA+CF,GAC7DX,EAtCoB,cA2CtB,gCACG5C,EAAM8C,QACL,gBAACP,EAAD,CACE7B,UAAWA,GA9CK,SA+ChBgD,IAAKvC,EACLmB,YAAatC,EAAMsC,aAAe,OAClCE,kBAAiC,OAAd9B,GAEnB,gBAAC,EAAD,CACEJ,UAAWN,EAAM2D,cACjBtE,UAAWW,EAAM4D,eAEhB5D,EAAMb,aAQJuD,M,4jCC3Ff,IAEMmB,EAAW,eAACC,EAAD,uDAAwB,QAAxB,OAAoC,SAAC9D,GAAD,OACnDA,EAAM+D,SAAW,OAAS/D,EAAM8D,IAAa9D,EAAK,OAAa,YAE3DgE,EAAOpE,IAAOqE,IAAIC,MAAa,kBAAyB,CAC5DC,QADmC,EAAGA,SAClB,YACpBC,QAAS,MACTC,MAAO,+BAHIzE,CAAH,IALO,SAAC,GAAD,IAAG4B,EAAH,EAAGA,MAAOvC,EAAV,EAAUA,KAAV,gBAA+BA,GAAQuC,GAAS,GAAhD,OACC,SAAC,GAAD,IAAGT,EAAH,EAAGA,OAAQ9B,EAAX,EAAWA,KAAX,gBAAgCA,GAAQ8B,GAAU,GAAlD,OAYN,qBAAGuD,SAAmC,cAAgB,WAGxDT,IACG,qBAAGS,SAAmC,GAAM,GACzC,qBAAGP,SACJ,OAAS,oBAEZF,EAAS,cAGTA,EAAS,gBAING,I,mMChCf,IAIMO,EAA6C,SAAC,GAIzB,IAHzBC,EAGwB,EAHxBA,MACArF,EAEwB,EAFxBA,SACGa,EACqB,oCAClByE,KACJtF,EAASa,QAASb,EAASa,MAAMb,WAVf,SAACA,GAAD,QAClBuF,MAAMC,KAAyBxF,GAAUyF,KACzC,SAAAC,GAAK,MAAmB,qBAAfA,EAAM5E,OASX6E,CAAc3F,EAASa,MAAMb,UAEnC,OACE,gBAAC,EAAD,eAAM4E,SAAUU,GAAgBzE,GAC7BwE,EAAQ,6BAAQA,GAAiB,KACjCrF,IAKQoF,M,0VCbFjF,EAAgB,WAAiD,IAC5E,IAAMyF,EAAmB,GADmD,mBAA7CC,EAA6C,yBAA7CA,EAA6C,gBAa5E,OAXAA,EAAQC,QAAQ,SAAAC,GACO,kBAAVA,EACTH,EAAOI,KAAKD,GAEZE,OAAOC,QAAQH,GAAOD,QAAQ,YAAmB,IAAD,mBAAhBK,EAAgB,WAE5CP,EAAOI,KAAKG,OAKbP,EAAOQ,KAAK,M,iQCxBd,SAASvE,EAAkBwE,GAChC,MAAM,IAAIC,MAAM,6CAFlB,gC,gtCCMA,IAAMC,EAAiB,SAACR,GAAD,MAAmB,KAAKS,KAAKT,IAC9CU,EAAe,SAACV,EAAeW,GAAhB,OACM,IAAzBX,EAAMY,QAAQD,IAEH9D,EAAsB,SAACgE,GAAgC,IAC1DhF,EAAkBgF,EAAlBhF,OAAQS,EAAUuE,EAAVvE,MAChB,SAAKT,IAAWS,KAKdkE,EAAe3E,IACf2E,EAAelE,KACdoE,EAAa7E,EAAQ,OACrB6E,EAAapE,EAAO,O,qNAIzB,IAAMwE,EAAe,SAACd,GAAD,OAAoBe,MAAMf,GAAS,EAAIA,GAE/CjD,EAAuB,SAClCiE,EACAC,GAEA,IAAMpF,EACJqF,SAASF,EAAaG,YAAc,IAAK,IACzCD,SAASF,EAAaI,eAAiB,IAAK,IAC5CF,SAASF,EAAaK,WAAa,IAAK,IACxCH,SAASF,EAAaM,cAAgB,IAAK,IAC3CJ,SAASD,GAAqBD,EAAanF,QAAU,IAAK,IAC5D,OAAOiF,EAAajF,I,sNAGf,IAAMmB,EAAsB,SACjCuE,EACAC,GAEA,IAAMlF,EACJ4E,SAASK,EAAaE,aAAe,IAAK,IAC1CP,SAASK,EAAaG,cAAgB,IAAK,IAC3CR,SAASK,EAAaI,YAAc,IAAK,IACzCT,SAASK,EAAaK,aAAe,IAAK,IAC1CV,SAASM,GAAoBD,EAAajF,OAAS,IAAK,IAE1D,OAAOwE,EAAaxE,I,qNAGf,IAAMQ,EAAsB,SACjC+E,EACAnF,GAEA,IAAKA,EACH,MAAO,CAAEb,OAAQ,IAAKS,MAAO,KAE/B,IAAIwF,EAAWC,SAASC,cAAc,OACrC9B,OAAO+B,OAAOJ,GAAgD9B,QAC7D,SAAAmC,GAEIA,GACa,WAAbA,GACa,eAAbA,IACC1B,EAAe0B,EAASC,cAEzBL,EAASjB,MAAMqB,GAAYL,EAAaK,MAI9CxF,EAAQ0F,YAAYN,GAjBjB,MAkBqBA,EAASO,wBAA3BxG,EAlBH,EAkBGA,OAAQS,EAlBX,EAkBWA,MAGd,OAFAwF,EAASQ,SAEF,CAAEzG,OAAQA,EAAOsG,WAAY7F,MAAOA,EAAM6F,a,qNAGnD,IAAMI,EAAc,CAClB7G,IAAK,EACLS,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,MAAO,EACPT,OAAQ,GAGGoB,EAAkB,SAACP,GAC9B,OAAIA,EACKA,EAAQ2F,wBAERE,G,iNAIJ,IAAMvE,EAAyB,SACpCwE,GAKA,GAAaA,IAFCzE,OAGZ,MAAO,CACL3C,UAAW2C,OAAO0E,YAClB7G,UAAW,EACX8G,SAAU3E,OAAO4E,WACjBC,SAAU,GAGd,IAAMC,EAAgB5F,EAAgBuF,GAEtC,MAAO,CACLpH,UAAWyH,EAAcnH,IAAMmH,EAAchH,OAC7CD,UAAWiH,EAAcnH,IACzBkH,SAAUC,EAAc1G,KACxBuG,SAAUG,EAAc1G,KAAO0G,EAAcvG,Q,wNAI1C,IAAMG,EAAsB,SAACT,GAIlC,OAAO+B,OAAO+E,iBACZ9G,EAAOU,QACPV,EAAOW,uBAAyB,eAAYoG,I,qNAIzC,IAAMC,EAAuB,SAAChH,GAInC,IAAKA,EAAOiH,WAAW/G,QACrB,MAAO,CACLP,YAAa,EACbY,WAAY,EACZd,KAAM8G,GAIV,IAAM/F,EAAgBC,EAAoB,CACxCC,QAASV,EAAOiH,WAAW/G,QAC3BS,uBAAwBX,EAAOY,kBAEjC,IAAKJ,EACH,MAAO,CACLb,YAAa,EACbY,WAAY,EACZd,KAAM8G,GAIV,IArBI,EAqBoB1F,EAAoBL,GAExC,GACAM,EAAoBN,EAAeR,EAAOiH,WAAW/G,SAxBrD,IAsBIL,cAtBJ,MAsBa,KAtBb,MAsBmBS,aAtBnB,MAsB2B,KAtB3B,EA6BJ,MAAO,CACLX,YALkBoB,EAAqBP,EAAeX,GAMtDU,WALiBS,EAAoBR,EAAeF,GAMpDb,KALWwB,EAAgBjB,EAAOiH,WAAW/G,W,g5BAsC1C,IAAMgC,EAAsB,SAAtBA,EACXlC,GAEA,IAAKA,EAAOR,UACV,MAAM,IAAI+E,MACR,2KAMJ,IACGvE,EAAOmC,8BAAP,KACInC,IAGL,OAAOA,EAAOR,UAGhB,IAAM0H,EAAmBlH,EAAOoC,cAAc+E,OAC5C,SAAAC,GAAiB,OAAIpH,EAAOR,YAAc4H,IAErCC,EApBM,YAoBoBH,EApBpB,MAsBb,OAAOhF,EAAoB,EAAD,GACrBlC,EADqB,CAExBR,UAAW6H,EACXjF,cAAe8E,M","file":"static/js/src-components-dropdown-dropdown-menu~src-components-quick-actions-menu-quick-actions-menu.1ee29bd6.js","sourcesContent":["/* -- DASH_GREEN -- */\nexport const dashGreen00 = '#0E353D';\nexport const dashGreen01 = '#3E5D64';\nexport const dashGreen02 = '#6E868B';\nexport const dashGreen03 = '#9FAEB1';\nexport const dashGreen04 = '#CFD7D8';\nexport const dashGreen05 = '#D9DFE0';\nexport const dashGreen06 = '#F5F7F7';\n\n/* -- DASH_DARKER_GREEN -- */\nexport const dashDarkerGreen00 = '#071A1E';\n\n/* -- MID_GREEN -- */\nexport const midGreen00 = '#0E6476';\nexport const midGreen01 = '#3E8391';\nexport const midGreen02 = '#6EA2AD';\nexport const midGreen03 = '#9FC1C8';\nexport const midGreen04 = '#CFE0E4';\nexport const midGreen05 = '#D9E6E9';\n\n/* -- PINK -- */\nexport const pink00 = '#FDB5AF';\nexport const pink01 = '#FDC4BF';\nexport const pink02 = '#FED3CF';\nexport const pink03 = '#FEE1DF';\nexport const pink04 = '#FFF0EF';\nexport const pink05 = '#FFF3F2';\n\n/* -- ORANGE -- */\nexport const orange00 = '#FE5B33';\nexport const orange01 = '#FE7C5C';\nexport const orange02 = '#FE9D85';\nexport const orange03 = '#FFBDAD';\nexport const orange04 = '#FFDED6';\nexport const orange05 = '#FFE5DE';\n\n/* -- FUNCTIONAL_RED -- */\nexport const functionalRed00 = '#4E000D';\nexport const functionalRed01 = '#8B0018';\nexport const functionalRed02 = '#FF002D';\nexport const functionalRed03 = '#FFA49F';\n\n/* -- RED -- */\nexport const red00 = '#BF0A33';\nexport const red01 = '#CC3B5C';\nexport const red02 = '#D96C85';\nexport const red03 = '#E59DAD';\nexport const red04 = '#F2CED6';\nexport const red05 = '#F5D8DE';\n\n/* -- GREY -- */\nexport const grey00 = '#615B57';\nexport const grey01 = '#999592';\nexport const grey02 = '#CCC7C2';\nexport const grey03 = '#D6D2CE';\nexport const grey04 = '#E0DDDA';\nexport const grey05 = '#EBE9E7';\nexport const grey06 = '#F5F4F3';\n\n/* -- BLACK -- */\nexport const black = '#000000';\n\n/* -- WHITE -- */\nexport const white = '#FFFFFF';\n\n/* -- VALIDATOR_GREEN -- */\nexport const validatorGreen = '#20B422';\n\n/* -- ACCESSIBLE_VALIDATOR_GREEN -- */\nexport const accessibleValidatorGreen = '#278637';\n\n/* -- ACCESSIBLE_VALIDATOR_RED -- */\nexport const accessibleValidatorRed = '#e00635';\n\n/* -- TRANSPARENT -- */\nexport const transparent = 'transparent';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3b_0l\",\"small\":\"Button_small__15AL7\",\"medium\":\"Button_medium__3Vqop\",\"large\":\"Button_large__swXE_\",\"light\":\"Button_light__1Saeg\",\"primary\":\"Button_primary__3DRyv\",\"secondary\":\"Button_secondary__3ZfDZ\",\"danger\":\"Button_danger__3GFwQ\",\"ghost\":\"Button_ghost__1AcKo\",\"dark\":\"Button_dark__1c9Xs\",\"content\":\"Button_content__3RB6Q\"};","import * as React from 'react';\nimport { getClassNames } from '@utility/cssUtils';\nimport styles from './Button.module.scss';\n\ntype ButtonNature = 'primary' | 'secondary' | 'danger' | 'ghost';\ntype ButtonSize = 'small' | 'medium' | 'large';\ntype ButtonTheme = 'light' | 'dark';\n\nconst defaultNature: ButtonNature = 'primary';\nconst defaultSize: ButtonSize = 'medium';\nconst defaultTheme: ButtonTheme = 'light';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  nature?: ButtonNature;\n  size?: ButtonSize;\n  theme?: ButtonTheme;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  nature = defaultNature,\n  size = defaultSize,\n  theme = defaultTheme,\n  children,\n  ...htmlButtonProps\n}) => {\n  return (\n    <button\n      {...htmlButtonProps}\n      className={getClassNames(\n        styles.button,\n        styles[nature],\n        styles[size],\n        styles[theme]\n      )}\n    >\n      <span className={styles.content}>{children}</span>\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  nature: defaultNature,\n  size: defaultSize,\n  theme: defaultTheme\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const StyledText = styled.span`\n  font-family: inherit;\n  font-weight: 600;\n`;\n","import * as React from 'react';\nimport { StyledText } from '@ions/text/StyledText';\nimport styled from 'styled-components';\nimport { dashGreen00, dashGreen06 } from '@colors';\n\ninterface Props {\n  onClick: (e: React.MouseEvent) => void;\n  elementClassName?: string;\n}\n\nconst Wrapper = styled.button`\n  color: ${dashGreen00};\n  line-height: 20px;\n  font-size: 16px;\n  cursor: pointer;\n  border: transparent 0px;\n  outline: none;\n  display: flex;\n  box-sizing: border-box;\n  height: 36px;\n  flex-shrink: 0;\n  padding: 8px 16px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  &:hover {\n    background-color: ${dashGreen06};\n  }\n`;\n\nconst DropdownElement: React.FC<Props> = props => {\n  return (\n    <Wrapper\n      type='button'\n      onClick={props.onClick}\n      className={props.elementClassName}\n    >\n      <StyledText>{props.children}</StyledText>\n    </Wrapper>\n  );\n};\n\nexport default DropdownElement;\n","import styled from 'styled-components';\nimport { dashGreen04, white } from '@colors';\n\ninterface Props {\n  maxHeight?: number;\n  className?: string;\n}\n\nconst DropdownCard = styled.div<Props>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${white};\n  border: 1px solid ${dashGreen04};\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  padding: 8px 0;\n  max-height: ${props => props.maxHeight || 100}px;\n  overflow-y: scroll;\n`;\n\nexport default DropdownCard;\n","import { Placement } from './types';\nimport { assertUnreachable } from '@utility/helpers';\nimport {\n  computeElementHeight,\n  computeElementWidth,\n  ElementDimensions,\n  getAlternativeStyle,\n  getBoundingRect,\n  getCSSComputedStyle,\n  IsElementOutOfContainerMethod,\n  isHeightAndWidthSet\n} from '@utility/positionCompute';\nimport { MenuWrapperProps } from './DropdownMenu';\n\nconst MARGIN = 4;\n\nexport const isDropdownOutOfContainer: IsElementOutOfContainerMethod<\n  Placement\n> = ({ elementDimensions, containerDimensions, placement }) => {\n  switch (placement) {\n    case 'top':\n      return (\n        elementDimensions.rect.top - elementDimensions.totalHeight <\n        containerDimensions.minHeight\n      );\n    case 'bottom':\n      return (\n        elementDimensions.rect.top +\n          elementDimensions.rect.height +\n          elementDimensions.totalHeight >\n        containerDimensions.maxHeight\n      );\n    default:\n      assertUnreachable(placement);\n      return true;\n  }\n};\n\ninterface GetControllerAndMenuDimensionsParams {\n  menuRef: React.RefObject<HTMLElement>;\n  controllerRef: React.RefObject<HTMLElement>;\n  elementIsBefore?: boolean;\n}\n\nexport const getControllerAndMenuDimensions = (\n  params: GetControllerAndMenuDimensionsParams\n): ElementDimensions => {\n  if (!params.menuRef.current) {\n    return {\n      rect: {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        width: 0,\n        height: 0\n      },\n      totalHeight: 0,\n      totalWidth: 0\n    };\n  }\n\n  const dropdownStyle = getCSSComputedStyle({\n    element: params.menuRef.current,\n    getBeforePseudoElement: params.elementIsBefore\n  });\n  const isStyleComputed = isHeightAndWidthSet(dropdownStyle);\n  const { height = null, width = null } = isStyleComputed\n    ? {}\n    : getAlternativeStyle(dropdownStyle, params.menuRef.current); // Extra calculations For Edge\n  const totalHeight = computeElementHeight(dropdownStyle, height);\n  const totalWidth = computeElementWidth(dropdownStyle, width);\n  const rect = getBoundingRect(params.controllerRef.current);\n\n  return {\n    totalHeight,\n    totalWidth,\n    rect\n  };\n};\n\nexport const getDropdownPosition = ({\n  dockingSide,\n  placement\n}: MenuWrapperProps) => {\n  return `${placement === 'top' ? 'bottom' : 'top'}: 100%;\n  transform: translateY(${placement === 'top' ? -1 * MARGIN : MARGIN}px);\n  ${dockingSide}: 0;`;\n};\n","import * as React from 'react';\nimport DropdownCard from './subcomponents/DropdownCard';\nimport styled from 'styled-components';\nimport { DockingSide, Placement } from './types';\nimport {\n  getControllerAndMenuDimensions,\n  getDropdownPosition,\n  isDropdownOutOfContainer\n} from './helpers';\nimport {\n  getContainerBoundaries,\n  getElementPlacement\n} from '@utility/positionCompute';\n\ninterface Props {\n  isOpen: boolean;\n  controllerRef: React.RefObject<HTMLElement>;\n  menuMaxHeight?: number;\n  dockingSide?: DockingSide;\n  placement?: Placement;\n  containerRef?: React.RefObject<HTMLElement>;\n  menuClassName?: string;\n}\nexport interface MenuWrapperProps {\n  placement: Placement;\n  dockingSide: DockingSide;\n  isReadyForDisplay: boolean;\n}\n\nconst MenuWrapper = styled.div<MenuWrapperProps>`\n  position: absolute;\n  opacity: ${props => (props.isReadyForDisplay ? 1 : 0)};\n  ${getDropdownPosition}\n  max-width: 318px;\n`;\n\nconst DEFAULT_PLACEMENT = 'bottom';\nconst POSSIBLE_PLACEMENTS: Placement[] = ['top', 'bottom'];\n\nconst DropdownMenu: React.FC<Props> = props => {\n  const [placement, setPlacement] = React.useState<Placement | null>(null);\n  const menuRef = React.useRef<HTMLDivElement>(null);\n  const prevIsOpen = React.useRef(false);\n\n  React.useEffect(() => {\n    if (props.isOpen === prevIsOpen.current) {\n      return;\n    }\n    prevIsOpen.current = props.isOpen;\n    setPlacement(null);\n\n    if (!menuRef.current || !props.controllerRef.current) {\n      return;\n    }\n    const elementDimensions = getControllerAndMenuDimensions({\n      menuRef,\n      controllerRef: props.controllerRef\n    });\n\n    const containerElement =\n      (props.containerRef && props.containerRef.current) || window;\n    const containerDimensions = getContainerBoundaries(containerElement);\n\n    try {\n      const newPlacement = getElementPlacement({\n        isElementOutOfContainerMethod: isDropdownOutOfContainer,\n        placement: props.placement || DEFAULT_PLACEMENT,\n        possibilities: POSSIBLE_PLACEMENTS,\n        elementDimensions,\n        containerDimensions\n      });\n      setPlacement(newPlacement);\n    } catch (e) {\n      console.error('Error while computing DropdownMenu position', e);\n      setPlacement(DEFAULT_PLACEMENT);\n    }\n  });\n\n  return (\n    <>\n      {props.isOpen && (\n        <MenuWrapper\n          placement={placement || DEFAULT_PLACEMENT}\n          ref={menuRef}\n          dockingSide={props.dockingSide || 'left'}\n          isReadyForDisplay={placement !== null}\n        >\n          <DropdownCard\n            maxHeight={props.menuMaxHeight}\n            className={props.menuClassName}\n          >\n            {props.children}\n          </DropdownCard>\n        </MenuWrapper>\n      )}\n    </>\n  );\n};\n\nexport default DropdownMenu;\n","import styled from 'styled-components';\nimport { Props as IconProps } from '@ions/icon/types';\n\nexport type ColorProps = 'color' | 'hoverColor' | 'activeColor';\ninterface Props extends Omit<IconProps, 'title' | 'children'> {\n  animated?: boolean;\n}\n\nconst getWidth = ({ width, size }: Props) => `${size || width || 20}px`;\nconst getHeight = ({ height, size }: Props) => `${size || height || 20}px`;\nconst getColor = (propName: ColorProps = 'color') => (props: Props): string =>\n  props.animated ? 'none' : props[propName] || props['color'] || 'inherit';\n\nconst Icon = styled.svg.attrs<Props>(({ viewBox }: Props) => ({\n  viewBox: viewBox || '0 0 20 20',\n  version: '1.1',\n  xmlns: 'http://www.w3.org/2000/svg'\n}))`\n  display: flex;\n  width: ${getWidth};\n  height: ${getHeight};\n  cursor: ${({ disabled }): string => (disabled ? 'not-allowed' : 'pointer')};\n  outline: none;\n  border-radius: 4px;\n  fill: ${getColor()};\n  opacity: ${({ disabled }): number => (disabled ? 0.5 : 1)};\n  transition: ${({ animated }): string =>\n    animated ? 'none' : 'all 0.1s ease-in'};\n  &:hover {\n    fill: ${getColor('hoverColor')};\n  }\n  &:active {\n    fill: ${getColor('activeColor')};\n  }\n`;\n\nexport default Icon;\n","import * as React from 'react';\nimport Icon from '@ions/icon/base/Icon';\nimport { Props } from '@ions/icon/types';\n\nconst isAnimatedSvg = (children: React.ReactElement[]) =>\n  !!Array.from<React.ReactElement>(children).find(\n    child => child.type === 'animateTransform'\n  );\nconst SvgWrapper: React.FunctionComponent<Props> = ({\n  title,\n  children,\n  ...props\n}: Props): JSX.Element => {\n  const isAnimated =\n    children.props && children.props.children\n      ? isAnimatedSvg(children.props.children)\n      : false;\n  return (\n    <Icon animated={isAnimated} {...props}>\n      {title ? <title>{title}</title> : null}\n      {children}\n    </Icon>\n  );\n};\n\nexport default SvgWrapper;\n","interface CssClasses {\n  [cssClass: string]: boolean | undefined | null;\n}\n\n/**\n * Generates the CSS class names, separated by a space character.\n * @param classes A CSS class (`string`), or an `Object` with CSS classes as keys,\n * and expressions evaluable to `boolean` as values.\n * If the expression is evaluated to `true`, the CSS class will be added.\n *\n * Example: `getClassNames(\"class-1\", { \"class-2\": true, \"class-3\": false});`\n */\nexport const getClassNames = (...classes: (string | CssClasses)[]): string => {\n  const result: string[] = [];\n  classes.forEach(value => {\n    if (typeof value === 'string') {\n      result.push(value);\n    } else {\n      Object.entries(value).forEach(([key, value]) => {\n        if (value) {\n          result.push(key);\n        }\n      });\n    }\n  });\n  return result.join(' ');\n};\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function assertUnreachable(_: never): never {\n  throw new Error('Unexpected value. Should have been never.');\n}\n","import { Placement as TooltipPlacement } from '@components/tooltip/types';\nimport { Placement as DropdownPlacement } from '@components/dropdown/types';\n/** Both tooltips and dropdown use the DOM to make sure\n * they are fitting in a container\n */\n\nconst containsNumber = (value: string) => /\\d/.test(value);\nconst containsChar = (value: string, char: string) =>\n  value.indexOf(char) !== -1;\n\nexport const isHeightAndWidthSet = (style: CSSStyleDeclaration) => {\n  const { height, width } = style;\n  if (!height || !width) {\n    return false;\n  }\n\n  return (\n    containsNumber(height) ||\n    containsNumber(width) ||\n    !containsChar(height, '%') ||\n    !containsChar(width, '%')\n  );\n};\n\nconst returnNumber = (value: number) => (isNaN(value) ? 0 : value);\n\nexport const computeElementHeight = (\n  elementStyle: CSSStyleDeclaration,\n  alternativeHeight: string | null\n) => {\n  const height =\n    parseInt(elementStyle.paddingTop || '0', 10) +\n    parseInt(elementStyle.paddingBottom || '0', 10) +\n    parseInt(elementStyle.marginTop || '0', 10) +\n    parseInt(elementStyle.marginBottom || '0', 10) +\n    parseInt(alternativeHeight || elementStyle.height || '0', 10);\n  return returnNumber(height);\n};\n\nexport const computeElementWidth = (\n  tooltipStyle: CSSStyleDeclaration,\n  alternativeWidth: string | null\n) => {\n  const width =\n    parseInt(tooltipStyle.paddingLeft || '0', 10) +\n    parseInt(tooltipStyle.paddingRight || '0', 10) +\n    parseInt(tooltipStyle.marginLeft || '0', 10) +\n    parseInt(tooltipStyle.marginRight || '0', 10) +\n    parseInt(alternativeWidth || tooltipStyle.width || '0', 10);\n\n  return returnNumber(width);\n};\n\nexport const getAlternativeStyle = (\n  initialStyle: CSSStyleDeclaration,\n  element: Element | null\n) => {\n  if (!element) {\n    return { height: '0', width: '0' };\n  }\n  let innerDiv = document.createElement('div');\n  (Object.values(initialStyle) as (keyof CSSStyleDeclaration)[]).forEach(\n    property => {\n      if (\n        property &&\n        property !== 'length' &&\n        property !== 'parentRule' &&\n        !containsNumber(property.toString())\n      ) {\n        innerDiv.style[property] = initialStyle[property];\n      }\n    }\n  );\n  element.appendChild(innerDiv);\n  let { height, width } = innerDiv.getBoundingClientRect();\n  innerDiv.remove();\n\n  return { height: height.toString(), width: width.toString() };\n};\n\nconst defaultRect = {\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  width: 0,\n  height: 0\n};\n\nexport const getBoundingRect = (element: Element | null): ClientRect => {\n  if (element) {\n    return element.getBoundingClientRect();\n  } else {\n    return defaultRect;\n  }\n};\n\nexport const getContainerBoundaries = (\n  container: Element | Window\n): ContainerDimensions => {\n  const isWindow = (element: Element | Window): element is Window =>\n    element === window;\n\n  if (isWindow(container)) {\n    return {\n      maxHeight: window.innerHeight,\n      minHeight: 0,\n      maxWidth: window.innerWidth,\n      minWidth: 0\n    };\n  }\n  const containerRect = getBoundingRect(container);\n\n  return {\n    maxHeight: containerRect.top + containerRect.height,\n    minHeight: containerRect.top,\n    minWidth: containerRect.left,\n    maxWidth: containerRect.left + containerRect.width\n  };\n};\n\nexport const getCSSComputedStyle = (params: {\n  element: Element;\n  getBeforePseudoElement?: boolean;\n}) => {\n  return window.getComputedStyle(\n    params.element,\n    params.getBeforePseudoElement ? ':before' : undefined\n  );\n};\n\nexport const getElementDimensions = (params: {\n  elementRef: React.RefObject<HTMLElement>;\n  elementIsBefore?: boolean;\n}) => {\n  if (!params.elementRef.current) {\n    return {\n      totalHeight: 0,\n      totalWidth: 0,\n      rect: defaultRect\n    };\n  }\n\n  const dropdownStyle = getCSSComputedStyle({\n    element: params.elementRef.current,\n    getBeforePseudoElement: params.elementIsBefore\n  });\n  if (!dropdownStyle) {\n    return {\n      totalHeight: 0,\n      totalWidth: 0,\n      rect: defaultRect\n    };\n  }\n\n  const isStyleComputed = isHeightAndWidthSet(dropdownStyle);\n  const { height = null, width = null } = isStyleComputed\n    ? {}\n    : getAlternativeStyle(dropdownStyle, params.elementRef.current); // Extra calculations For Edge\n  const totalHeight = computeElementHeight(dropdownStyle, height);\n  const totalWidth = computeElementWidth(dropdownStyle, width);\n  const rect = getBoundingRect(params.elementRef.current);\n\n  return {\n    totalHeight,\n    totalWidth,\n    rect\n  };\n};\n\nexport interface ElementDimensions {\n  rect: ClientRect;\n  totalHeight: number;\n  totalWidth: number;\n}\n\ninterface ContainerDimensions {\n  maxHeight: number;\n  maxWidth: number;\n  minHeight: number;\n  minWidth: number;\n}\n\ntype AllPlacements = TooltipPlacement | DropdownPlacement;\n\nexport type IsElementOutOfContainerMethod<T extends AllPlacements> = (params: {\n  elementDimensions: ElementDimensions;\n  containerDimensions: ContainerDimensions;\n  placement: T;\n}) => boolean;\n\ninterface ElementPlacementParams<T extends AllPlacements> {\n  isElementOutOfContainerMethod: IsElementOutOfContainerMethod<T>;\n  placement: T;\n  possibilities: T[];\n  elementDimensions: ElementDimensions;\n  containerDimensions: ContainerDimensions;\n}\n\nexport const getElementPlacement = <T extends AllPlacements>(\n  params: ElementPlacementParams<T>\n): T | null => {\n  if (!params.placement) {\n    throw new Error(\n      'Element cannot be displayed in the container Element/Window due to its incompatible size.' +\n        'Please consider reducing it or better position tooltiped' +\n        'element in the screen.'\n    );\n  }\n\n  if (\n    !params.isElementOutOfContainerMethod({\n      ...params\n    })\n  ) {\n    return params.placement;\n  }\n\n  const newPossibilities = params.possibilities.filter(\n    possiblePlacement => params.placement !== possiblePlacement\n  );\n  const [firstPossiblePlacement] = newPossibilities;\n\n  return getElementPlacement({\n    ...params,\n    placement: firstPossiblePlacement,\n    possibilities: newPossibilities\n  });\n};\n"],"sourceRoot":""}