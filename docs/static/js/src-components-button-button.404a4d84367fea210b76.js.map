{"version":3,"sources":["/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/atoms/icons/CopyPasswordIcon.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/colors/colors.ts","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/button/Button.mdx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/button/Button.module.scss","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/button/Button.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/icon/base/Icon.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/icon/wrapper/SvgWrapper.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/utility/cssUtils.ts"],"names":["CopyPasswordIcon","props","d","fillRule","clipRule","dashGreen00","dashGreen04","dashGreen06","midGreen00","pink00","pink01","pink02","pink03","pink04","pink05","functionalRed02","red00","red01","red02","red03","red04","red05","grey00","grey01","grey02","grey03","grey04","grey05","grey06","black","white","validatorGreen","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","of","Button","__position","__code","__scope","this","Playground","Props","style","display","flexDirection","justifyContent","nature","color","marginRight","backgroundColor","padding","margin","alignItems","theme","size","minHeight","disabled","isMDXComponent","module","exports","children","htmlButtonProps","className","getClassNames","styles","button","content","getColor","propName","animated","Icon","styled","svg","attrs","viewBox","version","xmlns","width","height","SvgWrapper","title","isAnimated","Array","from","find","child","type","isAnimatedSvg","result","classes","forEach","value","push","Object","entries","key","join"],"mappings":"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","file":"static/js/src-components-button-button.f8429ef5.js","sourcesContent":["import * as React from 'react';\nimport { SvgWrapper } from '@ions/icon/wrapper/SvgWrapper';\n\nexport const CopyPasswordIcon: React.FunctionComponent<\n  import('../../ions/icon/types').IconProps\n> = (props: import('../../ions/icon/types').IconProps): JSX.Element => (\n  <SvgWrapper {...props}>\n    <React.Fragment>\n      <path d='M12.25 9.75V10.75H13.25V12.25H12.25V13.25H10.75V12.25H9.75V10.75H10.75V9.75H12.25Z' />{' '}\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M6.5 17.5H16.5V5.50006H6.5V17.5ZM15 7.00006V16H8V7.00006H15Z'\n      />{' '}\n      <path d='M3.5 5.07142H5V4H7.7857V2.5H3.5V5.07142Z' />{' '}\n      <path d='M9.21427 2.5H13.5V5.07142H12V4H9.21427V2.5Z' />{' '}\n      <path d='M6.5 14.5V13H5V11.9286H3.5V14.5H6.5Z' />{' '}\n      <path d='M3.5 11.0714V5.92856H5V11.0714H3.5Z' />\n    </React.Fragment>\n  </SvgWrapper>\n);\n","/* -- DASH_GREEN -- */\nexport const dashGreen00 = '#0E353D';\nexport const dashGreen01 = '#3E5D64';\nexport const dashGreen02 = '#6E868B';\nexport const dashGreen03 = '#9FAEB1';\nexport const dashGreen04 = '#CFD7D8';\nexport const dashGreen05 = '#D9DFE0';\nexport const dashGreen06 = '#F5F7F7';\n\n/* -- DASH_DARKER_GREEN -- */\nexport const dashDarkerGreen00 = '#071A1E';\n\n/* -- MID_GREEN -- */\nexport const midGreen00 = '#0E6476';\nexport const midGreen01 = '#3E8391';\nexport const midGreen02 = '#6EA2AD';\nexport const midGreen03 = '#9FC1C8';\nexport const midGreen04 = '#CFE0E4';\nexport const midGreen05 = '#D9E6E9';\n\n/* -- PINK -- */\nexport const pink00 = '#FDB5AF';\nexport const pink01 = '#FDC4BF';\nexport const pink02 = '#FED3CF';\nexport const pink03 = '#FEE1DF';\nexport const pink04 = '#FFF0EF';\nexport const pink05 = '#FFF3F2';\n\n/* -- ORANGE -- */\nexport const orange00 = '#FE5B33';\nexport const orange01 = '#FE7C5C';\nexport const orange02 = '#FE9D85';\nexport const orange03 = '#FFBDAD';\nexport const orange04 = '#FFDED6';\nexport const orange05 = '#FFE5DE';\n\n/* -- FUNCTIONAL_RED -- */\nexport const functionalRed00 = '#4E000D';\nexport const functionalRed01 = '#8B0018';\nexport const functionalRed02 = '#FF002D';\nexport const functionalRed03 = '#FFA49F';\n\n/* -- RED -- */\nexport const red00 = '#BF0A33';\nexport const red01 = '#CC3B5C';\nexport const red02 = '#D96C85';\nexport const red03 = '#E59DAD';\nexport const red04 = '#F2CED6';\nexport const red05 = '#F5D8DE';\n\n/* -- GREY -- */\nexport const grey00 = '#615B57';\nexport const grey01 = '#999592';\nexport const grey02 = '#CCC7C2';\nexport const grey03 = '#D6D2CE';\nexport const grey04 = '#E0DDDA';\nexport const grey05 = '#EBE9E7';\nexport const grey06 = '#F5F4F3';\n\n/* -- BLACK -- */\nexport const black = '#000000';\n\n/* -- WHITE -- */\nexport const white = '#FFFFFF';\n\n/* -- VALIDATOR_GREEN -- */\nexport const validatorGreen = '#20B422';\n\n/* -- ACCESSIBLE_VALIDATOR_GREEN -- */\nexport const accessibleValidatorGreen = '#278637';\n\n/* -- ACCESSIBLE_VALIDATOR_RED -- */\nexport const accessibleValidatorRed = '#e00635';\n\n/* -- TRANSPARENT -- */\nexport const transparent = 'transparent';\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Button } from './Button';\nimport { CopyPasswordIcon } from '../../atoms/icons/CopyPasswordIcon';\nimport { white, midGreen00, dashGreen00 } from '../../colors/colors.ts';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`A Button that allows users to take actions, and make choices, with a single tap.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Remark: Since `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{` props extends the default html button props, Docz will display all props including the `}<inlineCode parentName=\"p\">{`React.ButtonHTMLAttributes`}</inlineCode>{` ones. More information on `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/doczjs/docz/issues/895\"\n        }}>{`Github issue`}</a>{`.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"nature\"\n    }}>{`Nature`}</h3>\n    <Playground __position={1} __code={'<Button nature=\\\"primary\\\">Primary</Button>\\n<Button nature=\\\"secondary\\\">Secondary</Button>\\n\\n<Button nature=\\\"danger\\\">Danger</Button>\\n\\n<Button nature=\\\"ghost\\\">Ghost</Button>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      CopyPasswordIcon,\n      white,\n      midGreen00,\n      dashGreen00\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }} mdxType=\"Playground\">\n    <Button nature='primary' mdxType=\"Button\">Primary</Button>\n      <Button nature='secondary' mdxType=\"Button\">Secondary</Button>\n\n      <Button nature='danger' mdxType=\"Button\">Danger</Button>\n\n      <Button nature='ghost' mdxType=\"Button\">Ghost</Button>\n    </Playground>\n    <h3 {...{\n      \"id\": \"possibilities\"\n    }}>{`Possibilities`}</h3>\n    <p>{`All buttons can display icons, text or mixed content.`}</p>\n    <Playground __position={2} __code={'<Button nature=\\\"primary\\\">\\n  <CopyPasswordIcon color={white} style={{ marginRight: \\'8px\\' }} />\\n  Save\\n</Button>\\n<Button nature=\\\"secondary\\\">\\n  <CopyPasswordIcon color={midGreen00} style={{ marginRight: \\'8px\\' }} />\\n  Cancel\\n</Button>\\n\\n<Button nature=\\\"danger\\\">\\n  <CopyPasswordIcon color={white} style={{ marginRight: \\'8px\\' }} />\\n  Delete\\n</Button>\\n\\n<Button nature=\\\"ghost\\\">Decline</Button>\\n\\n<Button nature=\\\"ghost\\\">\\n  <CopyPasswordIcon color={midGreen00} />\\n</Button>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      CopyPasswordIcon,\n      white,\n      midGreen00,\n      dashGreen00\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }} mdxType=\"Playground\">\n    <Button nature='primary' mdxType=\"Button\">\n      <CopyPasswordIcon color={white} style={{\n          marginRight: '8px'\n        }} mdxType=\"CopyPasswordIcon\" />\n      Save\n    </Button>\n      <Button nature='secondary' mdxType=\"Button\">\n  <CopyPasswordIcon color={midGreen00} style={{\n          marginRight: '8px'\n        }} mdxType=\"CopyPasswordIcon\" />\n  Cancel\n      </Button>\n\n      <Button nature='danger' mdxType=\"Button\">\n  <CopyPasswordIcon color={white} style={{\n          marginRight: '8px'\n        }} mdxType=\"CopyPasswordIcon\" />\n  Delete\n      </Button>\n\n      <Button nature='ghost' mdxType=\"Button\">Decline</Button>\n\n      <Button nature='ghost' mdxType=\"Button\">\n  <CopyPasswordIcon color={midGreen00} mdxType=\"CopyPasswordIcon\" />\n      </Button>\n    </Playground>\n    <h3 {...{\n      \"id\": \"theme\"\n    }}>{`Theme`}</h3>\n    <p>{`The default theme is `}<inlineCode parentName=\"p\">{`light`}</inlineCode>{` (white), but some buttons can be displayed in a `}<inlineCode parentName=\"p\">{`dark`}</inlineCode>{` theme (Dashlane's dash green, not an actual `}<em parentName=\"p\">{`dark`}</em>{` theme).`}</p>\n    <Playground __position={3} __code={'<Button nature=\\\"primary\\\" theme=\\\"dark\\\">\\n  Save\\n</Button>\\n<Button nature=\\\"secondary\\\" theme=\\\"dark\\\">\\n  Cancel\\n</Button>\\n\\n<Button nature=\\\"ghost\\\" theme=\\\"dark\\\">\\n  Decline\\n</Button>\\n\\n<Button nature=\\\"ghost\\\" size=\\\"small\\\" theme=\\\"dark\\\">\\n  <CopyPasswordIcon color={white} />\\n</Button>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      CopyPasswordIcon,\n      white,\n      midGreen00,\n      dashGreen00\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      backgroundColor: dashGreen00,\n      padding: '40px',\n      margin: '-40px',\n      alignItems: 'center'\n    }} mdxType=\"Playground\">\n    <Button nature='primary' theme='dark' mdxType=\"Button\">\n      Save\n    </Button>\n      <Button nature='secondary' theme='dark' mdxType=\"Button\">\n  Cancel\n      </Button>\n\n      <Button nature='ghost' theme='dark' mdxType=\"Button\">\n  Decline\n      </Button>\n\n      <Button nature='ghost' size='small' theme='dark' mdxType=\"Button\">\n  <CopyPasswordIcon color={white} mdxType=\"CopyPasswordIcon\" />\n      </Button>\n    </Playground>\n    <blockquote>\n      <p parentName=\"blockquote\">{`⚠️ `}<inlineCode parentName=\"p\">{`danger`}</inlineCode>{` nature is not supported in `}<inlineCode parentName=\"p\">{`dark`}</inlineCode>{` theme.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"size\"\n    }}>{`Size`}</h3>\n    <p>{`Buttons can be have different sizes `}{`[`}<inlineCode parentName=\"p\">{`small`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`medium`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`large`}</inlineCode>{`]`}{` with `}<inlineCode parentName=\"p\">{`medium`}</inlineCode>{` being the default value if none is specified.`}</p>\n    <Playground __position={4} __code={'<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    alignItems: \\'center\\',\\n    justifyContent: \\'space-between\\',\\n  }}\\n>\\n  <Button nature=\\\"primary\\\" size=\\\"small\\\">\\n    Save\\n  </Button>\\n  <Button nature=\\\"primary\\\" size=\\\"medium\\\">\\n    Save\\n  </Button>\\n  <Button nature=\\\"primary\\\" size=\\\"large\\\">\\n    Save\\n  </Button>\\n</div>\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    alignItems: \\'center\\',\\n    justifyContent: \\'space-between\\',\\n  }}\\n>\\n  <Button nature=\\\"secondary\\\" size=\\\"small\\\">\\n    Cancel\\n  </Button>\\n  <Button nature=\\\"secondary\\\" size=\\\"medium\\\">\\n    Cancel\\n  </Button>\\n  <Button nature=\\\"secondary\\\" size=\\\"large\\\">\\n    Cancel\\n  </Button>\\n</div>\\n\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    alignItems: \\'center\\',\\n    justifyContent: \\'space-between\\',\\n  }}\\n>\\n  <Button nature=\\\"danger\\\" size=\\\"small\\\">\\n    Delete\\n  </Button>\\n  <Button nature=\\\"danger\\\" size=\\\"medium\\\">\\n    Delete\\n  </Button>\\n  <Button nature=\\\"danger\\\" size=\\\"large\\\">\\n    Delete\\n  </Button>\\n</div>\\n\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    alignItems: \\'center\\',\\n    justifyContent: \\'space-between\\',\\n  }}\\n>\\n  <Button nature=\\\"ghost\\\" size=\\\"small\\\">\\n    Decline\\n  </Button>\\n  <Button nature=\\\"ghost\\\" size=\\\"medium\\\">\\n    Decline\\n  </Button>\\n  <Button nature=\\\"ghost\\\" size=\\\"large\\\">\\n    Decline\\n  </Button>\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      CopyPasswordIcon,\n      white,\n      midGreen00,\n      dashGreen00\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      minHeight: '150px'\n    }} mdxType=\"Playground\">\n    <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n      <Button nature='primary' size='small' mdxType=\"Button\">Save</Button>\n      <Button nature='primary' size='medium' mdxType=\"Button\">Save</Button>\n      <Button nature='primary' size='large' mdxType=\"Button\">Save</Button>\n    </div>\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n  <Button nature='secondary' size='small' mdxType=\"Button\">Cancel</Button>\n  <Button nature='secondary' size='medium' mdxType=\"Button\">Cancel</Button>\n  <Button nature='secondary' size='large' mdxType=\"Button\">Cancel</Button>\n      </div>\n\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n  <Button nature='danger' size='small' mdxType=\"Button\">Delete</Button>\n  <Button nature='danger' size='medium' mdxType=\"Button\">Delete</Button>\n  <Button nature='danger' size='large' mdxType=\"Button\">Delete</Button>\n      </div>\n\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n  <Button nature='ghost' size='small' mdxType=\"Button\">Decline</Button>\n  <Button nature='ghost' size='medium' mdxType=\"Button\">Decline</Button>\n  <Button nature='ghost' size='large' mdxType=\"Button\">Decline</Button>\n      </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h3>\n    <p>{`In disabled pseudo-state, buttons behave as following.`}</p>\n    <Playground __position={5} __code={'<Button nature=\\\"primary\\\" disabled>\\n  Save\\n</Button>\\n<Button nature=\\\"secondary\\\" disabled>\\n  Cancel\\n</Button>\\n\\n<Button nature=\\\"danger\\\" disabled>\\n  Delete\\n</Button>\\n\\n<Button nature=\\\"ghost\\\" size=\\\"medium\\\" disabled>\\n  Decline\\n</Button>\\n\\n<Button nature=\\\"ghost\\\" disabled>\\n  <CopyPasswordIcon color={midGreen00} />\\n</Button>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      CopyPasswordIcon,\n      white,\n      midGreen00,\n      dashGreen00\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }} mdxType=\"Playground\">\n    <Button nature='primary' disabled mdxType=\"Button\">Save</Button>\n      <Button nature='secondary' disabled mdxType=\"Button\">Cancel</Button>\n\n      <Button nature='danger' disabled mdxType=\"Button\">Delete</Button>\n\n      <Button nature='ghost' size='medium' disabled mdxType=\"Button\">Decline</Button>\n\n      <Button nature='ghost' disabled mdxType=\"Button\">\n  <CopyPasswordIcon color={midGreen00} mdxType=\"CopyPasswordIcon\" />\n      </Button>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2VkAd\",\"small\":\"Button_small__B8G3U\",\"medium\":\"Button_medium__OHCzK\",\"large\":\"Button_large__3r7Ri\",\"light\":\"Button_light__2b4Qs\",\"primary\":\"Button_primary__2gEnH\",\"secondary\":\"Button_secondary__1aA_l\",\"danger\":\"Button_danger__1d32M\",\"ghost\":\"Button_ghost__2mAVh\",\"dark\":\"Button_dark__2yAJw\",\"content\":\"Button_content__3pGl0\"};","import * as React from 'react';\nimport { getClassNames } from '@utility/cssUtils';\nimport styles from './Button.module.scss';\n\ntype ButtonNature = 'primary' | 'secondary' | 'danger' | 'ghost';\ntype ButtonSize = 'small' | 'medium' | 'large';\ntype ButtonTheme = 'light' | 'dark';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  nature?: ButtonNature;\n  size?: ButtonSize;\n  theme?: ButtonTheme;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  nature = 'primary',\n  size = 'medium',\n  theme = 'light',\n  children,\n  ...htmlButtonProps\n}) => {\n  return (\n    <button\n      {...htmlButtonProps}\n      className={getClassNames(\n        styles.button,\n        styles[nature],\n        styles[size],\n        styles[theme]\n      )}\n    >\n      {children ? <span className={styles.content}>{children}</span> : null}\n    </button>\n  );\n};\n","import styled from 'styled-components';\nimport { Props as IconProps } from '@ions/icon/types';\nimport { dashGreen00 } from '@colors';\n\nexport type ColorProps = 'color' | 'hoverColor' | 'activeColor';\ninterface Props extends Omit<IconProps, 'title' | 'children'> {\n  animated?: boolean;\n}\n\nconst getWidth = ({ width, size }: Props) => `${size || width || 20}px`;\nconst getHeight = ({ height, size }: Props) => `${size || height || 20}px`;\nconst getColor = (propName: ColorProps = 'color') => (props: Props): string =>\n  props.animated ? 'none' : props[propName] || props['color'] || dashGreen00;\n\nexport const Icon = styled.svg.attrs<Props>(({ viewBox }: Props) => ({\n  viewBox: viewBox || '0 0 20 20',\n  version: '1.1',\n  xmlns: 'http://www.w3.org/2000/svg'\n}))`\n  display: flex;\n  width: ${getWidth};\n  height: ${getHeight};\n  cursor: ${({ disabled }): string => (disabled ? 'not-allowed' : 'inherit')};\n  outline: none;\n  border-radius: 4px;\n  fill: ${getColor()};\n  opacity: ${({ disabled }): number => (disabled ? 0.5 : 1)};\n  transition: ${({ animated }): string =>\n    animated ? 'none' : 'all 0.1s ease-in'};\n  &:hover {\n    fill: ${getColor('hoverColor')};\n  }\n  &:active {\n    fill: ${getColor('activeColor')};\n  }\n`;\n","import * as React from 'react';\nimport { Icon } from '@ions/icon/base/Icon';\nimport { Props } from '@ions/icon/types';\n\nconst isAnimatedSvg = (children: React.ReactElement[]) =>\n  !!Array.from<React.ReactElement>(children).find(\n    child => child.type === 'animateTransform'\n  );\n\nexport const SvgWrapper: React.FunctionComponent<Props> = ({\n  title,\n  children,\n  ...props\n}: Props): JSX.Element => {\n  const isAnimated =\n    children.props && children.props.children\n      ? isAnimatedSvg(children.props.children)\n      : false;\n  return (\n    <Icon animated={isAnimated} {...props}>\n      {title ? <title>{title}</title> : null}\n      {children}\n    </Icon>\n  );\n};\n","interface CssClasses {\n  [cssClass: string]: boolean | undefined | null;\n}\n\n/**\n * Generates the CSS class names, separated by a space character.\n * @param classes A CSS class (`string`), or an `Object` with CSS classes as keys,\n * and expressions evaluable to `boolean` as values.\n * If the expression is evaluated to `true`, the CSS class will be added.\n *\n * Example: `getClassNames(\"class-1\", { \"class-2\": true, \"class-3\": false});`\n */\nexport const getClassNames = (...classes: (string | CssClasses)[]): string => {\n  const result: string[] = [];\n  classes.forEach(value => {\n    if (typeof value === 'string') {\n      result.push(value);\n    } else {\n      Object.entries(value).forEach(([key, value]) => {\n        if (value) {\n          result.push(key);\n        }\n      });\n    }\n  });\n  return result.join(' ');\n};\n"],"sourceRoot":""}