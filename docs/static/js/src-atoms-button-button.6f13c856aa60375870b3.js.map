{"version":3,"sources":["/Users/mlouati/Documents/work/ui-components/src/ions/button/base/BaseButton.tsx","/Users/mlouati/Documents/work/ui-components/src/ions/button/themes/ThemeWrapper.tsx","/Users/mlouati/Documents/work/ui-components/src/ions/button/themes/danger/ButtonDanger.tsx","/Users/mlouati/Documents/work/ui-components/src/ions/button/themes/secondary/ButtonSecondary.tsx","/Users/mlouati/Documents/work/ui-components/src/ions/button/themes/primary/ButtonPrimary.tsx","/Users/mlouati/Documents/work/ui-components/src/ions/button/themes/ghost/ButtonGhost.tsx","/Users/mlouati/Documents/work/ui-components/src/atoms/button/Button.tsx","/Users/mlouati/Documents/work/ui-components/src/atoms/button/Button.mdx","/Users/mlouati/Documents/work/ui-components/src/ions/icon/Icon.tsx","/Users/mlouati/Documents/work/ui-components/src/atoms/svg/base/SvgIcon.tsx","/Users/mlouati/Documents/work/ui-components/src/atoms/svg/icons/CopyPassword.tsx","/Users/mlouati/Documents/work/ui-components/src/atoms/svg/icons/Shared.tsx","/Users/mlouati/Documents/work/ui-components/src/colors/colors.ts","/Users/mlouati/Documents/work/ui-components/src/ions/text/StyledText.tsx","/Users/mlouati/Documents/work/ui-components/src/utility/helpers.ts"],"names":["getBgColorByState","state","theme","backgroundColor","transparent","getBorderByState","borderColor","baseStyle","css","textColor","white","props","customStyle","SmallButton","styled","button","MediumButton","LargeButton","StyledContent","StyledText","BaseButton","children","size","content","assertUnreachable","ThemeWrapper","colors","buttonTheme","dark","dangerColors","default","idle","functionalRed02","hover","functionalRed01","active","functionalRed00","ButtonDanger","secondaryColors","dashGreen05","dashGreen03","dashGreen00","dashGreen01","dashGreen02","ButtonSecondary","primaryColors","midGreen00","dashDarkerGreen00","midGreen03","midGreen01","ButtonPrimary","disabled","ghostStyle","ButtonGhost","Button","nature","renderButtonByType","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","of","__position","__code","__scope","this","Playground","Props","CopyPassword","Shared","style","display","flexDirection","justifyContent","color","height","margin","alignItems","minHeight","className","flexFlow","width","isMDXComponent","getSize","getColor","propName","animated","Icon","svg","attrs","viewBox","version","xmlns","SvgIcon","title","isAnimated","Array","from","find","child","type","isAnimatedSvg","fillRule","clipRule","d","pink00","pink01","pink02","pink03","pink04","pink05","red00","red01","red02","red03","red04","red05","grey00","grey01","grey02","grey03","grey04","grey05","grey06","black","validatorGreen","fontFamily","span","_","Error"],"mappings":"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","file":"static/js/src-atoms-button-button.cf22a8e8.js","sourcesContent":["import * as React from 'react';\nimport styled, {\n  css,\n  DefaultTheme,\n  FlattenInterpolation,\n  ThemedStyledProps\n} from 'styled-components';\nimport { transparent, white } from '@colors';\nimport { StyledText } from '@ions/text/StyledText';\nimport { Props } from '@atoms/button/Button';\nimport { assertUnreachable } from '@utility/helpers';\nimport { ButtonState } from '@ions/button/themes/types';\n\nexport type BaseButtonProps = Omit<Props, 'nature' | 'theme'>;\ntype Theme = {\n  [key in keyof DefaultTheme]: DefaultTheme[key];\n};\n\nexport interface BaseProps extends BaseButtonProps {\n  children?: React.ReactNode;\n  customStyle?: FlattenInterpolation<ThemedStyledProps<{}, DefaultTheme>>;\n  theme: Theme;\n}\n\nconst getBgColorByState = (state: ButtonState) => ({ theme }: BaseProps) =>\n  theme.backgroundColor[state] || transparent;\nconst getColor = ({ theme }: BaseProps) => theme.textColor || white;\nconst getBorderByState = (state: ButtonState) => ({ theme }: BaseProps) =>\n  theme.borderColor\n    ? `1px solid ${theme.borderColor[state] || transparent}`\n    : 'none';\n\nconst baseStyle = css`\n  color: ${getColor};\n  font-size: 16px;\n  line-height: 20px;\n  background-color: ${getBgColorByState('idle')};\n  cursor: pointer;\n  border: ${getBorderByState('idle')};\n  border-radius: 4px;\n  min-width: 60px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  transition: all 0.1s;\n  ${props => props.customStyle};\n\n  &:hover:not(:disabled),\n  &:focus:not(:disabled) {\n    border: ${getBorderByState('hover')};\n    background-color: ${getBgColorByState('hover')};\n  }\n  &:active:not(:disabled) {\n    border: ${getBorderByState('active')};\n    background-color: ${getBgColorByState('active')};\n  }\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    span {\n      pointer-events: none;\n    }\n  }\n`;\n\nconst SmallButton = styled.button<BaseProps>`\n  ${baseStyle}\n  padding: 8px 16px;\n  height: 32px;\n  font-size: 12px;\n  line-height: 16px;\n`;\n\nconst MediumButton = styled.button<BaseProps>`\n  ${baseStyle}\n  padding: 10px 16px;\n  height: 40px;\n`;\n\nconst LargeButton = styled.button<BaseProps>`\n  ${baseStyle}\n  padding: 14px 24px;\n  height: 48px;\n`;\n\nconst StyledContent = styled(StyledText)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BaseButton: React.FunctionComponent<BaseProps> = ({\n  children,\n  size = 'medium',\n  ...props\n}: BaseProps) => {\n  const content = <StyledContent>{children || 'Default'}</StyledContent>;\n  switch (size) {\n    case 'small':\n      return <SmallButton {...props}>{content}</SmallButton>;\n    case 'medium':\n      return <MediumButton {...props}>{content}</MediumButton>;\n    case 'large':\n      return <LargeButton {...props}>{content}</LargeButton>;\n    default:\n      return assertUnreachable(size);\n  }\n};\n\nexport default BaseButton;\n","import * as React from 'react';\nimport { BaseButton } from '@ions';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport {\n  DefaultTheme,\n  FlattenInterpolation,\n  ThemedStyledProps\n} from 'styled-components';\n\ninterface Props extends ThemeWrapperProps {\n  colors: ThemeColors;\n  customStyle?: FlattenInterpolation<ThemedStyledProps<{}, DefaultTheme>>;\n}\n\nexport const ThemeWrapper = ({\n  colors,\n  theme = 'default',\n  ...props\n}: Props) => {\n  const buttonTheme =\n    theme === 'dark' && colors.dark ? colors.dark : colors.default;\n\n  return <BaseButton theme={buttonTheme} {...props} />;\n};\n","import * as React from 'react';\nimport { functionalRed00, functionalRed01, functionalRed02 } from '@colors';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport { ThemeWrapper } from '@ions/button/themes/ThemeWrapper';\n\nconst dangerColors: ThemeColors = {\n  default: {\n    backgroundColor: {\n      idle: functionalRed02,\n      hover: functionalRed01,\n      active: functionalRed00\n    }\n  }\n};\n\nconst ButtonDanger = (props: ThemeWrapperProps) => (\n  <ThemeWrapper colors={dangerColors} {...props} />\n);\n\nexport default ButtonDanger;\n","import * as React from 'react';\nimport {\n  dashGreen00,\n  dashGreen01,\n  dashGreen02,\n  dashGreen03,\n  dashGreen05,\n  transparent\n} from '@colors';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport { ThemeWrapper } from '@ions/button/themes/ThemeWrapper';\n\nconst secondaryColors: ThemeColors = {\n  default: {\n    backgroundColor: {\n      idle: transparent,\n      hover: dashGreen05,\n      active: dashGreen03\n    },\n    textColor: dashGreen00,\n    borderColor: {\n      idle: dashGreen05,\n      hover: dashGreen05,\n      active: dashGreen03\n    }\n  },\n  dark: {\n    backgroundColor: {\n      idle: transparent,\n      hover: dashGreen01,\n      active: dashGreen02\n    },\n    borderColor: {\n      idle: dashGreen01,\n      hover: dashGreen01,\n      active: dashGreen02\n    }\n  }\n};\n\nconst ButtonSecondary = (props: ThemeWrapperProps) => (\n  <ThemeWrapper colors={secondaryColors} {...props} />\n);\n\nexport default ButtonSecondary;\n","import * as React from 'react';\nimport {\n  dashDarkerGreen00,\n  dashGreen00,\n  midGreen00,\n  midGreen01,\n  midGreen03,\n  white\n} from '@colors';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport { ThemeWrapper } from '@ions/button/themes/ThemeWrapper';\n\nconst primaryColors: ThemeColors = {\n  default: {\n    backgroundColor: {\n      idle: midGreen00,\n      hover: dashGreen00,\n      active: dashDarkerGreen00\n    }\n  },\n  dark: {\n    backgroundColor: {\n      idle: white,\n      hover: midGreen03,\n      active: midGreen01\n    },\n    textColor: dashGreen00\n  }\n};\n\nconst ButtonPrimary = (props: ThemeWrapperProps) => (\n  <ThemeWrapper colors={primaryColors} {...props} />\n);\n\nexport default ButtonPrimary;\n","import * as React from 'react';\nimport { css } from 'styled-components';\nimport { dashGreen00, dashGreen01, dashGreen05, transparent } from '@colors';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport { ThemeWrapper } from '@ions/button/themes/ThemeWrapper';\n\nconst primaryColors: ThemeColors = {\n  default: {\n    backgroundColor: {\n      idle: transparent,\n      hover: transparent,\n      active: dashGreen05\n    },\n    textColor: dashGreen00,\n    borderColor: {\n      idle: transparent,\n      hover: dashGreen05,\n      active: dashGreen05,\n      disabled: transparent\n    }\n  },\n  dark: {\n    backgroundColor: {\n      idle: transparent,\n      hover: transparent,\n      active: dashGreen01\n    },\n    borderColor: {\n      idle: transparent,\n      hover: dashGreen01,\n      active: dashGreen01,\n      disabled: transparent\n    }\n  }\n};\n\n/**\n * Ghost button special styling\n */\nconst ghostStyle = css`\n  min-width: 32px;\n  svg {\n    margin: -8px -16px;\n  }\n`;\n\nconst ButtonGhost = (props: ThemeWrapperProps) => (\n  <ThemeWrapper customStyle={ghostStyle} colors={primaryColors} {...props} />\n);\n\nexport default ButtonGhost;\n","import * as React from 'react';\nimport {\n  ButtonDanger,\n  ButtonGhost,\n  ButtonPrimary,\n  ButtonSecondary\n} from '@ions/button/themes';\nimport { assertUnreachable } from '@utility/helpers';\n\n// Downside: Docz will display all props including React.ButtonHTMLAttributes ones\n// https://github.com/doczjs/docz/issues/895\nexport interface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The button's nature\n   */\n  nature: 'danger' | 'secondary' | 'primary' | 'ghost';\n  /**\n   * Activates the button dark mode\n   */\n  theme?: 'default' | 'dark';\n  /**\n   * Disabled state of the button\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * A large style option\n   @default false\n   */\n  size?: 'small' | 'medium' | 'large';\n}\n\nconst Button: React.FunctionComponent<Props> = (\n  props: Props\n): JSX.Element | null => {\n  const renderButtonByType = ({\n    nature,\n    ...props\n  }: Props): JSX.Element | null => {\n    switch (nature) {\n      case 'danger':\n        return <ButtonDanger {...props} />;\n      case 'secondary':\n        return <ButtonSecondary {...props} />;\n      case 'primary':\n        return <ButtonPrimary {...props} />;\n      case 'ghost':\n        return <ButtonGhost {...props} />;\n      default:\n        return assertUnreachable(nature);\n    }\n  };\n\n  return renderButtonByType(props);\n};\n\nexport default Button;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport Button from './Button';\nimport CopyPassword from '../svg/icons/CopyPassword';\nimport Shared from '../svg/icons/Shared';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`A Button that allows users to take actions, and make choices, with a single tap.`}</p>\n    <h4 {...{\n      \"id\": \"downside-since-button-props-extends-the-default-html-button-props-docz-will-display-all-props-including-reactbuttonhtmlattributes-ones-\"\n    }}>{`Downside: Since Button props extends the default html button props, Docz will display all props including `}<inlineCode parentName=\"h4\">{`React.ButtonHTMLAttributes`}</inlineCode>{` ones 😭`}</h4>\n    <p>{`Bug on repo link: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/doczjs/docz/issues/895\"\n      }}>{`https://github.com/doczjs/docz/issues/895`}</a></p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"available-buttons\"\n    }}>{`Available buttons:`}</h3>\n    <Playground __position={1} __code={'<div>\\n  <Button nature=\\\"secondary\\\">Cancel</Button>\\n</div>\\n<div>\\n  <Button nature=\\\"primary\\\">Save</Button>\\n</div>\\n\\n<div>\\n  <Button nature=\\\"danger\\\">Delete</Button>\\n</div>\\n\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    justifyContent: \\'center\\',\\n  }}\\n>\\n  <Button nature=\\\"ghost\\\" size=\\\"small\\\">\\n    <CopyPassword />\\n  </Button>\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      CopyPassword,\n      Shared\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }} mdxType=\"Playground\">\n    <div>\n      <Button nature=\"secondary\" mdxType=\"Button\">Cancel</Button>\n    </div>\n      <div>\n  <Button nature=\"primary\" mdxType=\"Button\">Save</Button>\n      </div>\n\n      <div>\n    <Button nature=\"danger\" mdxType=\"Button\">Delete</Button>\n      </div>\n\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      }}>\n  <Button nature=\"ghost\" size=\"small\" mdxType=\"Button\"><CopyPassword mdxType=\"CopyPassword\" /></Button>\n      </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"all-buttons-can-display-icons-text-or-mixed-content\"\n    }}>{`All buttons can display icons, text or mixed content:`}</h3>\n    <Playground __position={2} __code={'<div>\\n  <Button nature=\\\"secondary\\\">\\n    <>\\n      <Shared /> Share\\n    </>\\n  </Button>\\n</div>\\n<div>\\n  <Button nature=\\\"danger\\\">\\n    <>\\n      <Shared color=\\\"white\\\" /> Delete\\n    </>\\n  </Button>\\n</div>\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    justifyContent: \\'center\\',\\n  }}\\n>\\n  <Button nature=\\\"ghost\\\" size=\\\"small\\\">\\n    <CopyPassword />\\n  </Button>\\n</div>\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    justifyContent: \\'center\\',\\n  }}\\n>\\n  <Button nature=\\\"ghost\\\" size=\\\"small\\\">\\n    Confirm\\n  </Button>\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      CopyPassword,\n      Shared\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }} mdxType=\"Playground\">\n  <div>\n    <Button nature='secondary' mdxType=\"Button\">\n      <>\n        <Shared mdxType=\"Shared\" /> Share\n      </>\n    </Button>\n  </div>\n  <div>\n    <Button nature='danger' mdxType=\"Button\">\n      <>\n        <Shared color='white' mdxType=\"Shared\" /> Delete\n      </>\n    </Button>\n  </div>\n  <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      }}>\n    <Button nature='ghost' size='small' mdxType=\"Button\">\n      <CopyPassword mdxType=\"CopyPassword\" />\n    </Button>\n  </div>\n  <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      }}>\n    <Button nature='ghost' size='small' mdxType=\"Button\">\n      Confirm\n    </Button>\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"the-default-theme-is-light-white-but-some-buttons-can-be-displayed-in-a-dark-theme-dashlanes-dark-green--️-danger-button-is-not-supported-in-dark-theme\"\n    }}>{`The default theme is light (white), but some buttons can be displayed in a Dark theme (Dashlane's dark green) ( ⚠️ `}<inlineCode parentName=\"h3\">{`danger`}</inlineCode>{` button is not supported in dark theme):`}</h3>\n    <Playground __position={3} __code={'<div>\\n  <Button nature=\\\"secondary\\\" theme=\\\"dark\\\">\\n    Cancel\\n  </Button>\\n</div>\\n<div>\\n  <Button nature=\\\"primary\\\" theme=\\\"dark\\\">\\n    Save\\n  </Button>\\n</div>\\n\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    justifyContent: \\'center\\',\\n  }}\\n>\\n  <Button nature=\\\"ghost\\\" size=\\\"small\\\" theme=\\\"dark\\\">\\n    <CopyPassword color=\\\"white\\\" />\\n  </Button>\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      CopyPassword,\n      Shared\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      backgroundColor: '#0E353D',\n      height: '12vw',\n      margin: '-40px',\n      alignItems: 'center'\n    }} mdxType=\"Playground\">\n    <div>\n      <Button nature=\"secondary\" theme=\"dark\" mdxType=\"Button\">Cancel</Button>\n    </div>\n      <div>\n  <Button nature=\"primary\" theme=\"dark\" mdxType=\"Button\">Save</Button>\n      </div>\n\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      }}>\n  <Button nature=\"ghost\" size=\"small\" theme=\"dark\" mdxType=\"Button\"><CopyPassword color=\"white\" mdxType=\"CopyPassword\" /></Button>\n      </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"buttons-can-be-have-different-sizes-small-medium-large-with-medium-being-the-default-value-if-none-is-specified\"\n    }}>{`Buttons can be have different sizes `}{`[`}<inlineCode parentName=\"h3\">{`small`}</inlineCode>{`, `}<inlineCode parentName=\"h3\">{`medium`}</inlineCode>{`, `}<inlineCode parentName=\"h3\">{`large`}</inlineCode>{`]`}{` with `}<inlineCode parentName=\"h3\">{`medium`}</inlineCode>{` being the default value if none is specified:`}</h3>\n    <Playground __position={4} __code={'<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    alignItems: \\'center\\',\\n    justifyContent: \\'space-between\\',\\n  }}\\n>\\n  <Button nature=\\\"secondary\\\" size=\\\"small\\\">\\n    Cancel\\n  </Button>\\n  <Button nature=\\\"secondary\\\" size=\\\"medium\\\">\\n    Cancel\\n  </Button>\\n  <Button nature=\\\"secondary\\\" size=\\\"large\\\">\\n    Cancel\\n  </Button>\\n</div>\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    alignItems: \\'center\\',\\n    justifyContent: \\'space-between\\',\\n  }}\\n>\\n  <Button nature=\\\"primary\\\" size=\\\"small\\\">\\n    Save\\n  </Button>\\n  <Button nature=\\\"primary\\\" size=\\\"medium\\\">\\n    Save\\n  </Button>\\n  <Button nature=\\\"primary\\\" size=\\\"large\\\">\\n    Save\\n  </Button>\\n</div>\\n\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    alignItems: \\'center\\',\\n    justifyContent: \\'space-between\\',\\n  }}\\n>\\n  <Button nature=\\\"danger\\\" size=\\\"small\\\">\\n    Delete\\n  </Button>\\n  <Button nature=\\\"danger\\\">Delete</Button>\\n  <Button nature=\\\"danger\\\" size=\\\"large\\\">\\n    Delete\\n  </Button>\\n</div>\\n\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    alignItems: \\'center\\',\\n    justifyContent: \\'space-between\\',\\n  }}\\n>\\n  <Button nature=\\\"ghost\\\" size=\\\"small\\\">\\n    Decline\\n  </Button>\\n  <Button nature=\\\"ghost\\\">Decline</Button>\\n  <Button nature=\\\"ghost\\\" size=\\\"large\\\">\\n    Decline\\n  </Button>\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      CopyPassword,\n      Shared\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      minHeight: '150px'\n    }} mdxType=\"Playground\">\n    <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n          <Button nature=\"secondary\" size=\"small\" mdxType=\"Button\">\n            Cancel\n          </Button>\n         <Button nature=\"secondary\" size=\"medium\" mdxType=\"Button\">\n            Cancel\n          </Button>\n         <Button nature=\"secondary\" size=\"large\" mdxType=\"Button\">\n            Cancel\n          </Button>\n    </div>\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n    <Button nature=\"primary\" size=\"small\" mdxType=\"Button\">\n        Save\n     </Button>\n    <Button nature=\"primary\" size=\"medium\" mdxType=\"Button\">\n        Save\n     </Button>\n    <Button nature=\"primary\" size=\"large\" mdxType=\"Button\">\n        Save\n     </Button>\n      </div>\n\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n    <Button nature=\"danger\" size=\"small\" mdxType=\"Button\">\n        Delete\n     </Button>\n    <Button nature=\"danger\" mdxType=\"Button\">\n        Delete\n     </Button>\n    <Button nature=\"danger\" size=\"large\" mdxType=\"Button\">\n        Delete\n     </Button>\n      </div>\n\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n    <Button nature=\"ghost\" size=\"small\" mdxType=\"Button\">\n        Decline\n     </Button>\n    <Button nature=\"ghost\" mdxType=\"Button\">\n        Decline\n     </Button>\n    <Button nature=\"ghost\" size=\"large\" mdxType=\"Button\">\n        Decline\n    </Button>\n      </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"in-disabled-mode-buttons-will-behave-as-following\"\n    }}>{`In disabled mode, buttons will behave as following:`}</h3>\n    <Playground __position={5} __code={'<div\\n  style={{\\n    display: \\'flex\\',\\n    justifyContent: \\'space-around\\',\\n    width: \\'100%\\',\\n    margin: \\'10px 0\\',\\n  }}\\n>\\n  <div>\\n    <Button nature=\\\"secondary\\\" disabled>\\n      Cancel\\n    </Button>\\n  </div>\\n  <div>\\n    <Button nature=\\\"primary\\\" disabled>\\n      Save\\n    </Button>\\n  </div>\\n\\n  <div>\\n    <Button nature=\\\"danger\\\" disabled>\\n      Delete\\n    </Button>\\n  </div>\\n\\n  <div\\n    style={{\\n      display: \\'flex\\',\\n      flexDirection: \\'column\\',\\n      justifyContent: \\'center\\',\\n    }}\\n  >\\n    <Button nature=\\\"ghost\\\" size=\\\"medium\\\" disabled>\\n      Decline\\n    </Button>\\n  </div>\\n\\n  <div\\n    style={{\\n      display: \\'flex\\',\\n      flexDirection: \\'column\\',\\n      justifyContent: \\'center\\',\\n    }}\\n  >\\n    <Button nature=\\\"ghost\\\" disabled>\\n      <CopyPassword />\\n    </Button>\\n  </div>\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      CopyPassword,\n      Shared\n    }} className=\"test\" style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      flexFlow: 'wrap'\n    }} mdxType=\"Playground\">\n    <div style={{\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: '100%',\n        margin: '10px 0'\n      }}>\n          <div>\n               <Button nature=\"secondary\" disabled mdxType=\"Button\">\n                  Cancel\n                </Button>\n          </div>\n       <div>\n          <Button nature=\"primary\" disabled mdxType=\"Button\">\n             Save\n          </Button>\n        </div>\n\n      <div>\n         <Button nature=\"danger\" disabled mdxType=\"Button\">\n            Delete\n         </Button>\n      </div>\n\n      <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center'\n        }}>\n         <Button nature=\"ghost\" size=\"medium\" disabled mdxType=\"Button\">\n             Decline\n         </Button>\n      </div>\n\n      <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center'\n        }}>\n         <Button nature=\"ghost\" disabled mdxType=\"Button\">\n             <CopyPassword mdxType=\"CopyPassword\" />\n         </Button>\n      </div>\n      </div>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import styled from 'styled-components';\nimport { Props as IconProps } from '@atoms/svg/base/SvgIcon';\n\nexport type ColorProps = 'color' | 'hoverColor' | 'activeColor';\ninterface Props extends Omit<IconProps, 'title' | 'children'> {\n  animated?: boolean;\n}\n\nconst getSize = ({ size = 20 }) => `${size}px`;\nconst getColor = (propName: ColorProps = 'color') => (props: Props): string =>\n  props.animated ? 'none' : props[propName] || props['color'] || 'inherit';\n\nconst Icon = styled.svg.attrs<Props>(({ viewBox }: Props) => ({\n  viewBox: viewBox || '0 0 20 20',\n  version: '1.1',\n  xmlns: 'http://www.w3.org/2000/svg'\n}))`\n  display: flex;\n  width: ${getSize};\n  height: ${getSize};\n  cursor: ${({ disabled }): string => (disabled ? 'not-allowed' : 'pointer')};\n  outline: none;\n  border-radius: 4px;\n  fill: ${getColor()};\n  opacity: ${({ disabled }): number => (disabled ? 0.5 : 1)};\n  transition: ${({ animated }): string =>\n    animated ? 'none' : 'all 0.1s ease-in'};\n  &:hover {\n    fill: ${getColor('hoverColor')};\n  }\n  &:active {\n    fill: ${getColor('activeColor')};\n  }\n`;\n\nexport default Icon;\n","import * as React from 'react';\nimport Icon from '@ions/icon/Icon';\n\nexport interface Props {\n  /**\n   * The svg content to display\n   */\n  children: React.ReactElement;\n  /**\n   * The icon title (displayed on svg hover)\n   */\n  title?: string;\n  /**\n   * The icon size\n   * @default 2em\n   */\n  size?: number;\n  /**\n   * A disabled state for the icon wrapper\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * The icon color\n   * @default 'inherit' (parent's fill property)\n   */\n  color?: string;\n  /**\n   * The icon color when hovered\n   * @default  'inherit' (parent's fill property)\n   */\n  hoverColor?: string;\n  /**\n   * The icon color when active\n   * @default 'inherit' (parent's fill property)\n   */\n  activeColor?: string;\n  /**\n   * Allows to redefine the coordinates of the SVG element.\n   * @default '0 0 20 20'\n   **/\n  viewBox?: string;\n}\n\nexport type IconProps = Pick<Props, Exclude<keyof Props, 'children'>>; // Using this rather than Omit<Props, 'children'> because Docz is not able to understand the Omit syntax and to parse the props\n\nconst isAnimatedSvg = (children: React.ReactElement[]) =>\n  !!Array.from<React.ReactElement>(children).find(\n    child => child.type === 'animateTransform'\n  );\nconst SvgIcon: React.FunctionComponent<Props> = ({\n  title,\n  children,\n  ...props\n}: Props): JSX.Element => {\n  const isAnimated =\n    children.props && children.props.children\n      ? isAnimatedSvg(children.props.children)\n      : false;\n  return (\n    <Icon animated={isAnimated} {...props}>\n      {title ? <title>{title}</title> : null}\n      {children}\n    </Icon>\n  );\n};\n\nexport default SvgIcon;\n","import * as React from 'react';\nimport SvgIcon from '@atoms/svg/base/SvgIcon';\n\nconst CopyPassword: React.FunctionComponent<\n  import('../base/SvgIcon').IconProps\n> = (props: import('../base/SvgIcon').IconProps): JSX.Element => (\n  <SvgIcon {...props}>\n    <React.Fragment>\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M3 2.5C3 2.22386 3.22386 2 3.5 2H5.5C5.77614 2 6 2.22386 6 2.5C6 2.77614 5.77614 3 5.5 3H4V3.5C4 3.77614 3.77614 4 3.5 4C3.22386 4 3 3.77614 3 3.5V2.5ZM7 2.5C7 2.22386 7.22386 2 7.5 2H9.5C9.77614 2 10 2.22386 10 2.5C10 2.77614 9.77614 3 9.5 3H7.5C7.22386 3 7 2.77614 7 2.5ZM11 2.5C11 2.22386 11.2239 2 11.5 2H13.5C13.7761 2 14 2.22386 14 2.5V3.5C14 3.77614 13.7761 4 13.5 4C13.2239 4 13 3.77614 13 3.5V3H11.5C11.2239 3 11 2.77614 11 2.5ZM3.5 5C3.77614 5 4 5.22386 4 5.5V7.5C4 7.77614 3.77614 8 3.5 8C3.22386 8 3 7.77614 3 7.5V5.5C3 5.22386 3.22386 5 3.5 5ZM3.5 9C3.77614 9 4 9.22386 4 9.5V11.5C4 11.7761 3.77614 12 3.5 12C3.22386 12 3 11.7761 3 11.5V9.5C3 9.22386 3.22386 9 3.5 9ZM3.5 13C3.77614 13 4 13.2239 4 13.5V14H4.5C4.77614 14 5 14.2239 5 14.5C5 14.7761 4.77614 15 4.5 15H3.5C3.22386 15 3 14.7761 3 14.5V13.5C3 13.2239 3.22386 13 3.5 13ZM6 17.5C6 17.7761 6.22386 18 6.5 18H16.5C16.7761 18 17 17.7761 17 17.5V5.5C17 5.22386 16.7761 5 16.5 5H6.5C6.22386 5 6 5.22386 6 5.5V17.5ZM11.9983 9.69124C11.9983 9.4151 11.7745 9.19124 11.4983 9.19124C11.2222 9.19124 10.9983 9.4151 10.9983 9.69124V11.0031L9.76482 10.6024C9.50219 10.517 9.22012 10.6608 9.1348 10.9234C9.04948 11.186 9.19322 11.4681 9.45585 11.5534L10.6899 11.9544L9.92073 13.0153C9.75863 13.2388 9.80846 13.5515 10.032 13.7136C10.2556 13.8756 10.5682 13.8258 10.7303 13.6023L11.4978 12.5438L12.2627 13.6017C12.4246 13.8255 12.7371 13.8757 12.9609 13.7139C13.1847 13.5521 13.2349 13.2396 13.0731 13.0158L12.306 11.9549L13.5439 11.5535C13.8066 11.4683 13.9505 11.1863 13.8653 10.9237C13.7801 10.661 13.4981 10.5171 13.2354 10.6023L11.9983 11.0035V9.69124ZM7 17H16V6H7V17Z'\n      />\n    </React.Fragment>\n  </SvgIcon>\n);\n\nexport default CopyPassword;\n","import * as React from 'react';\nimport SvgIcon from '@atoms/svg/base/SvgIcon';\n\nconst Shared: React.FunctionComponent<import('../base/SvgIcon').IconProps> = (\n  props: import('../base/SvgIcon').IconProps\n): JSX.Element => (\n  <SvgIcon {...props}>\n    <React.Fragment>\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M11.7009 4C11.3874 4 11.0858 4.05446 10.8081 4.16982C10.5531 4.27578 10.4323 4.5684 10.5383 4.8234C10.6442 5.0784 10.9369 5.19923 11.1919 5.09326C11.3341 5.03416 11.5034 5 11.7009 5C11.8973 5 12.0664 5.03402 12.2086 5.09299C12.349 5.15193 12.4698 5.23856 12.5702 5.35386C12.6717 5.47002 12.7604 5.62418 12.8243 5.8254C12.8884 6.02745 12.9272 6.27647 12.9272 6.57692V7.73061C12.8706 7.77971 12.8056 7.83708 12.7402 7.89659C12.6498 7.97885 12.5507 8.0726 12.4719 8.1574C12.4338 8.1984 12.3894 8.249 12.352 8.3023C12.3337 8.3284 12.3078 8.3681 12.2856 8.4169C12.2694 8.4525 12.2231 8.5594 12.2371 8.699C12.2368 8.6953 12.2368 8.6965 12.2368 8.7043C12.2369 8.7154 12.2371 8.7394 12.2364 8.7814C12.2357 8.8271 12.2344 8.8791 12.233 8.9355L12.2317 8.9912C12.2299 9.0662 12.2281 9.1467 12.2282 9.2152C12.2283 9.2493 12.2287 9.2848 12.2302 9.3177C12.2309 9.333 12.2322 9.3603 12.2361 9.3923C12.2687 9.9964 12.7877 10.2598 13.0816 10.3932C13.1983 10.4462 13.3068 10.491 13.4092 10.5333C13.6447 10.6306 13.8481 10.7148 14.0456 10.8542L14.054 10.8598C14.1977 10.9569 14.327 11.0563 14.4402 11.1636C14.5548 11.2722 14.6527 11.3867 14.7328 11.5122L14.7336 11.5134C14.8137 11.638 14.879 11.778 14.9255 11.9397C14.9712 12.1008 14.9988 12.2883 14.9988 12.5079V13.5C14.9988 13.7761 15.2227 14 15.4988 14C15.775 14 15.9988 13.7761 15.9988 13.5V12.5079C15.9988 12.203 15.9603 11.9228 15.8873 11.6658L15.8869 11.6644C15.8133 11.4085 15.7076 11.1794 15.5753 10.9734C15.4442 10.7682 15.2909 10.5921 15.1281 10.4378C14.965 10.2832 14.7905 10.1508 14.6179 10.034C14.3217 9.826 13.9608 9.6771 13.6993 9.5692C13.6207 9.5368 13.5511 9.5081 13.4949 9.4826C13.3477 9.4158 13.2754 9.3689 13.2407 9.3359C13.2381 9.3334 13.236 9.3313 13.2344 9.3295C13.2337 9.3105 13.232 9.2915 13.2292 9.2726C13.2286 9.2606 13.2282 9.2414 13.2282 9.2141C13.2282 9.1597 13.2296 9.0908 13.2314 9.0153L13.2326 8.964C13.234 8.9096 13.2354 8.8539 13.2362 8.805C13.2838 8.7564 13.3455 8.6979 13.4134 8.6361C13.4956 8.5612 13.5791 8.4886 13.6427 8.4341C13.6743 8.4071 13.7006 8.3849 13.7188 8.3695L13.7397 8.352L13.745 8.3476L13.7465 8.3464C13.861 8.2514 13.9272 8.1103 13.9272 7.96154V6.57692C13.9272 6.19199 13.8777 5.8387 13.7774 5.5229C13.677 5.20644 13.5255 4.92735 13.3234 4.69603C13.1201 4.46278 12.8732 4.28719 12.5943 4.17035L12.593 4.16982C12.3154 4.05449 12.0138 4 11.7009 4ZM12.2371 8.699L12.7346 8.649L12.2374 8.7019C12.2373 8.7009 12.2372 8.6999 12.2371 8.699ZM13.2297 9.2815C13.2297 9.2816 13.2296 9.2805 13.2295 9.2783L13.2297 9.2815ZM11.2054 9.983L10.3319 10.7859C10.341 10.846 10.3514 10.9122 10.3627 10.9791C10.3824 11.0951 10.4036 11.2053 10.4239 11.2889C10.4266 11.3001 10.4292 11.3101 10.4315 11.3191C10.4669 11.3449 10.5205 11.3765 10.6003 11.4125C10.7268 11.4696 10.8801 11.521 11.0674 11.581L11.1453 11.6059H11.1454C11.4782 11.7115 11.9224 11.8524 12.2598 12.1028C12.5757 12.3369 12.891 12.6327 13.1252 13.035C13.3619 13.4416 13.5 13.9304 13.5 14.5266V15.5C13.5 15.7761 13.2761 16 13 16H5C4.72386 16 4.5 15.7761 4.5 15.5V14.5266C4.5 13.9295 4.6369 13.4408 4.87276 13.0344C5.10617 12.6322 5.42098 12.3374 5.73658 12.1041C6.07227 11.8561 6.51426 11.7161 6.84642 11.6108L6.92837 11.5848C7.11554 11.5248 7.26908 11.4732 7.39607 11.4157C7.46355 11.3851 7.5128 11.3574 7.54843 11.3335L7.55052 11.3242C7.5707 11.2342 7.59483 11.1143 7.61854 10.9915C7.63283 10.9175 7.64668 10.8438 7.65906 10.7771L6.79512 9.983C6.69211 9.8883 6.63348 9.7548 6.63348 9.6149V7.57333C6.63348 6.8726 6.9976 6.16988 7.37549 5.74667C7.78012 5.2935 8.354 5 9.0003 5C9.6463 5 10.2197 5.29405 10.6245 5.74667C11.0022 6.16963 11.3671 6.87234 11.3671 7.57333V9.6149C11.3671 9.7548 11.3084 9.8883 11.2054 9.983ZM10.4468 11.3709C10.4493 11.3779 10.4507 11.3806 10.4507 11.3806C10.4507 11.3806 10.4503 11.3796 10.4496 11.3777C10.449 11.376 10.4481 11.3737 10.4468 11.3709Z'\n      />\n    </React.Fragment>\n  </SvgIcon>\n);\n\nexport default Shared;\n","/* -- DASH_GREEN -- */\nexport const dashGreen00 = '#0E353D';\nexport const dashGreen01 = '#3E5D64';\nexport const dashGreen02 = '#6E868B';\nexport const dashGreen03 = '#9FAEB1';\nexport const dashGreen04 = '#CFD7D8';\nexport const dashGreen05 = '#D9DFE0';\nexport const dashGreen06 = '#F5F7F7';\n\n/* -- DASH_DARKER_GREEN -- */\nexport const dashDarkerGreen00 = '#071A1E';\n\n/* -- MID_GREEN -- */\nexport const midGreen00 = '#0E6476';\nexport const midGreen01 = '#3E8391';\nexport const midGreen02 = '#6EA2AD';\nexport const midGreen03 = '#9FC1C8';\nexport const midGreen04 = '#CFE0E4';\nexport const midGreen05 = '#D9E6E9';\n\n/* -- PINK -- */\nexport const pink00 = '#FDB5AF';\nexport const pink01 = '#FDC4BF';\nexport const pink02 = '#FED3CF';\nexport const pink03 = '#FEE1DF';\nexport const pink04 = '#FFF0EF';\nexport const pink05 = '#FFF3F2';\n\n/* -- ORANGE -- */\nexport const orange00 = '#FE5B33';\nexport const orange01 = '#FE7C5C';\nexport const orange02 = '#FE9D85';\nexport const orange03 = '#FFBDAD';\nexport const orange04 = '#FFDED6';\nexport const orange05 = '#FFE5DE';\n\n/* -- FUNCTIONAL_RED -- */\nexport const functionalRed00 = '#4E000D';\nexport const functionalRed01 = '#8B0018';\nexport const functionalRed02 = '#FF002D';\nexport const functionalRed03 = '#FFA49F';\n\n/* -- RED -- */\nexport const red00 = '#BF0A33';\nexport const red01 = '#CC3B5C';\nexport const red02 = '#D96C85';\nexport const red03 = '#E59DAD';\nexport const red04 = '#F2CED6';\nexport const red05 = '#F5D8DE';\n\n/* -- GREY -- */\nexport const grey00 = '#615B57';\nexport const grey01 = '#999592';\nexport const grey02 = '#CCC7C2';\nexport const grey03 = '#D6D2CE';\nexport const grey04 = '#E0DDDA';\nexport const grey05 = '#EBE9E7';\nexport const grey06 = '#F5F4F3';\n\n/* -- BLACK -- */\nexport const black = '#000000';\n\n/* -- WHITE -- */\nexport const white = '#FFFFFF';\n\n/* -- VALIDATOR_GREEN -- */\nexport const validatorGreen = '#20B422';\n\n/* -- TRANSPARENT -- */\nexport const transparent = 'transparent';\n","import styled, { css } from 'styled-components';\n\nexport const fontFamily = css`\n  @import url('https://fonts.googleapis.com/css?family=Public+Sans:400,500,600&display=swap');\n  font-family: 'Public Sans', 'Helvetica Neue', Helvetica, Arial,\n    'Lucida Grande', sans-serif;\n`;\nexport const StyledText = styled.span`\n  ${fontFamily}\n  font-weight: 600;\n`;\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function assertUnreachable(_: never): never {\n  throw new Error('Unexpected value. Should have been never.');\n}\n"],"sourceRoot":""}