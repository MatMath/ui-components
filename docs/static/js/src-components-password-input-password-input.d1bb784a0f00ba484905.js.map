<<<<<<< HEAD:docs/static/js/src-components-password-input-password-input.1012f28f664e939214bb.js.map
{"version":3,"sources":["/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/atoms/icons/HideIcon.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/atoms/icons/RevealIcon.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/password-input/PasswordInput.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/password-input/PasswordInput.mdx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/password-input/PasswordInput.module.scss","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/icon/base/Icon.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/icon/wrapper/SvgWrapper.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/utility/cssUtils.ts"],"names":["HideIcon","props","fillRule","clipRule","d","RevealIcon","PasswordInput","feedbackText","feedbackType","hidePasswordTooltipText","label","onPasswordVisibilityChanged","showPasswordTooltipText","prop","React","showPassword","setShowPassword","styledClassName","styles","RevealOrHideIcon","className","root","container","type","getClassNames","input","icon","onClick","prevState","disabled","Tooltip","placement","title","hoverColor","midGreen00","feedback","layoutProps","MDXLayout","MDXContent","components","mdxType","of","__position","__code","__scope","this","Playground","Props","style","alignItems","display","flexDirection","justifyContent","height","flex","placeholder","nextState","console","log","isMDXComponent","module","exports","getColor","propName","animated","dashGreen00","Icon","styled","svg","attrs","viewBox","version","xmlns","width","size","SvgWrapper","children","isAnimated","Array","from","find","child","isAnimatedSvg","result","classes","forEach","value","push","Object","entries","key","join"],"mappings":"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","file":"static/js/src-components-password-input-password-input.5c961d69.js","sourcesContent":["import * as React from 'react';\nimport { SvgWrapper } from '@ions/icon/wrapper/SvgWrapper';\nimport { IconProps } from '@ions/icon/types';\n\nexport const HideIcon: React.FC<IconProps> = (props: IconProps) => (\n  <SvgWrapper {...props}>\n    <React.Fragment>\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M10 11.5C10.8284 11.5 11.5 10.8284 11.5 9.99998C11.5 9.17156 10.8284 8.49998 10 8.49998C9.17157 8.49998 8.5 9.17156 8.5 9.99998C8.5 10.8284 9.17157 11.5 10 11.5ZM10 13C11.6569 13 13 11.6568 13 9.99998C13 8.34313 11.6569 6.99998 10 6.99998C8.34315 6.99998 7 8.34313 7 9.99998C7 11.6568 8.34315 13 10 13Z'\n      />\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M18 9.86558C18 9.86558 16 3.86546 10 3.86546C4 3.86546 2 9.86558 2 9.86558C2 9.86558 4 15.8655 10 15.8655C16 15.8655 18 9.86558 18 9.86558ZM3.62005 9.86557C3.65718 9.94656 3.69973 10.0359 3.74789 10.1322C3.9914 10.6192 4.36904 11.2653 4.90232 11.9052C5.95964 13.174 7.57163 14.3655 10 14.3655C12.4284 14.3655 14.0404 13.174 15.0977 11.9052C15.631 11.2653 16.0086 10.6192 16.2521 10.1322C16.3003 10.0359 16.3428 9.94655 16.38 9.86556C16.3428 9.78456 16.3003 9.6952 16.2521 9.59887C16.0086 9.11183 15.6309 8.46574 15.0977 7.82579C14.0403 6.55697 12.4283 5.36546 10 5.36546C7.57166 5.36546 5.95967 6.55697 4.90234 7.82579C4.36905 8.46574 3.99141 9.11183 3.7479 9.59887C3.69973 9.6952 3.65718 9.78457 3.62005 9.86557Z'\n      />\n      <path d='M2 16.9333L16.8492 2L17.9099 3.06667L3.06066 18L2 16.9333Z' />\n    </React.Fragment>\n  </SvgWrapper>\n);\n","import * as React from 'react';\nimport { SvgWrapper } from '@ions/icon/wrapper/SvgWrapper';\nimport { IconProps } from '@ions/icon/types';\n\nexport const RevealIcon: React.FC<IconProps> = (props: IconProps) => (\n  <SvgWrapper {...props}>\n    <React.Fragment>\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M10 11.5C10.8284 11.5 11.5 10.8284 11.5 10C11.5 9.17157 10.8284 8.5 10 8.5C9.17157 8.5 8.5 9.17157 8.5 10C8.5 10.8284 9.17157 11.5 10 11.5ZM10 13C11.6569 13 13 11.6569 13 10C13 8.34315 11.6569 7 10 7C8.34315 7 7 8.34315 7 10C7 11.6569 8.34315 13 10 13Z'\n      />{' '}\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M18 10.0001C18 10.0001 16 4 10 4C4 4 2 10.0001 2 10.0001C2 10.0001 4 16 10 16C16 16 18 10.0001 18 10.0001ZM3.62005 10.0001C3.65718 10.0811 3.69973 10.1704 3.74789 10.2668C3.9914 10.7538 4.36904 11.3998 4.90232 12.0398C5.95964 13.3085 7.57163 14.5 10 14.5C12.4284 14.5 14.0404 13.3085 15.0977 12.0398C15.631 11.3998 16.0086 10.7538 16.2521 10.2668C16.3003 10.1705 16.3428 10.0811 16.38 10.0001C16.3428 9.9191 16.3003 9.82974 16.2521 9.73341C16.0086 9.24637 15.6309 8.60028 15.0977 7.96032C14.0403 6.69151 12.4283 5.5 10 5.5C7.57166 5.5 5.95967 6.69151 4.90234 7.96032C4.36905 8.60028 3.99141 9.24637 3.7479 9.73341C3.69973 9.82974 3.65718 9.9191 3.62005 10.0001Z'\n      />\n    </React.Fragment>\n  </SvgWrapper>\n);\n","import * as React from 'react';\n\nimport { getClassNames } from '@utility/cssUtils';\nimport { HideIcon, RevealIcon } from '@atoms/icons';\nimport { midGreen00 } from '@colors';\nimport { Tooltip } from '@components';\n\nimport styles from './PasswordInput.module.scss';\n\ntype PasswordInputFeedbackType = 'error' | 'warning';\n\ntype _ForbiddenProps = 'size' | 'prefix' | 'type';\n\nexport interface PasswordInputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, _ForbiddenProps> {\n  /**\n   * Some text to display under the input when triggering a feedback type\n   */\n  feedbackText?: string;\n  /**\n   * The feedback nature of the input\n   */\n  feedbackType?: PasswordInputFeedbackType;\n  /**\n   * The text that is displayed on hover on the hide icon when the\n   * password is shown\n   */\n  hidePasswordTooltipText: string;\n  /**\n   * The label used to describe the field, it's displayed on top.\n   * Note that the text will be uppercase\n   */\n  label?: string;\n  /**\n   * A function that is triggered when the visibility\n   * of the password is changed.\n   */\n  onPasswordVisibilityChanged?: (visible: boolean) => void;\n  /**\n   * The text that is displayed on hover on the reveal icon when the\n   * password is hidden\n   */\n  showPasswordTooltipText: string;\n}\n\nexport const PasswordInput = (props: PasswordInputProps): JSX.Element => {\n  const {\n    feedbackText,\n    feedbackType,\n    hidePasswordTooltipText,\n    label,\n    onPasswordVisibilityChanged,\n    showPasswordTooltipText,\n    ...prop\n  } = props;\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleShowPassword = () => {\n    if (onPasswordVisibilityChanged) {\n      onPasswordVisibilityChanged(!showPassword);\n    }\n    setShowPassword(prevState => !prevState);\n  };\n\n  const styledClassName = (feedbackType && styles[feedbackType]) || '';\n\n  const RevealOrHideIcon = showPassword ? HideIcon : RevealIcon;\n\n  return (\n    <div className={styles.root}>\n      {label && <span className={styles.label}>{label}</span>}\n      <div className={styles.container}>\n        <input\n          {...prop}\n          type={showPassword ? 'text' : 'password'}\n          className={getClassNames(styles.input, styledClassName)}\n        />\n        <button className={styles.icon} onClick={handleShowPassword}>\n          {prop.disabled ? (\n            <RevealOrHideIcon disabled={prop.disabled} />\n          ) : (\n            <Tooltip\n              placement='left'\n              title={\n                showPassword ? hidePasswordTooltipText : showPasswordTooltipText\n              }\n            >\n              <RevealOrHideIcon hoverColor={midGreen00} />\n            </Tooltip>\n          )}\n        </button>\n      </div>\n      {feedbackText && feedbackType && (\n        <span className={getClassNames(styles.feedback, styledClassName)}>\n          {feedbackText}\n        </span>\n      )}\n    </div>\n  );\n};\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { PasswordInput } from './PasswordInput';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"password-input\"\n    }}>{`Password Input`}</h1>\n    <p>{`A Password input component`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={PasswordInput} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <p>{`Examples below show usage of the Button`}</p>\n    <Playground __position={1} __code={'<PasswordInput\\n  hidePasswordTooltipText=\\\"Hide\\\"\\n  showPasswordTooltipText=\\\"Reveal\\\"\\n  label=\\\"Password\\\"\\n  placeholder=\\\"Test\\\"\\n  onPasswordVisibilityChanged={nextState => console.log(nextState)}\\n/>\\n<PasswordInput\\n  hidePasswordTooltipText=\\\"Hide\\\"\\n  showPasswordTooltipText=\\\"Reveal\\\"\\n/>\\n<PasswordInput\\n  hidePasswordTooltipText=\\\"Hide\\\"\\n  showPasswordTooltipText=\\\"Reveal\\\"\\n  disabled\\n/>\\n<PasswordInput\\n  hidePasswordTooltipText=\\\"Hide\\\"\\n  showPasswordTooltipText=\\\"Reveal\\\"\\n  feedbackType=\\\"warning\\\"\\n  feedbackText=\\\"This password contains invalid characters\\\"\\n/>\\n<PasswordInput\\n  hidePasswordTooltipText=\\\"Hide\\\"\\n  showPasswordTooltipText=\\\"Reveal\\\"\\n  feedbackType=\\\"error\\\"\\n  feedbackText=\\\"Wrong password\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      PasswordInput\n    }} style={{\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      height: 400,\n      flex: 1\n    }} mdxType=\"Playground\">\n  <PasswordInput hidePasswordTooltipText='Hide' showPasswordTooltipText='Reveal' label='Password' placeholder='Test' onPasswordVisibilityChanged={nextState => console.log(nextState)} mdxType=\"PasswordInput\" />\n  <PasswordInput hidePasswordTooltipText='Hide' showPasswordTooltipText='Reveal' mdxType=\"PasswordInput\" />\n  <PasswordInput hidePasswordTooltipText='Hide' showPasswordTooltipText='Reveal' disabled mdxType=\"PasswordInput\" />\n  <PasswordInput hidePasswordTooltipText='Hide' showPasswordTooltipText='Reveal' feedbackType='warning' feedbackText='This password contains invalid characters' mdxType=\"PasswordInput\" />\n  <PasswordInput hidePasswordTooltipText='Hide' showPasswordTooltipText='Reveal' feedbackType='error' feedbackText='Wrong password' mdxType=\"PasswordInput\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PasswordInput_root__2PU8u\",\"label\":\"PasswordInput_label__111R0\",\"feedback\":\"PasswordInput_feedback__2-7hU\",\"warning\":\"PasswordInput_warning__YZoM8\",\"error\":\"PasswordInput_error__1ENdo\",\"container\":\"PasswordInput_container__3yE8i\",\"input\":\"PasswordInput_input__3uu63\",\"icon\":\"PasswordInput_icon__15yOB\"};","import styled from 'styled-components';\nimport { Props as IconProps } from '@ions/icon/types';\nimport { dashGreen00 } from '@colors';\n\nexport type ColorProps = 'color' | 'hoverColor' | 'activeColor';\ninterface Props extends Omit<IconProps, 'title' | 'children'> {\n  animated?: boolean;\n}\n\nconst getWidth = ({ width, size }: Props) => `${size || width || 20}px`;\nconst getHeight = ({ height, size }: Props) => `${size || height || 20}px`;\nconst getColor = (propName: ColorProps = 'color') => (props: Props): string =>\n  props.animated ? 'none' : props[propName] || props['color'] || dashGreen00;\n\nexport const Icon = styled.svg.attrs<Props>(({ viewBox }: Props) => ({\n  viewBox: viewBox || '0 0 20 20',\n  version: '1.1',\n  xmlns: 'http://www.w3.org/2000/svg'\n}))`\n  display: flex;\n  width: ${getWidth};\n  height: ${getHeight};\n  cursor: ${({ disabled }): string => (disabled ? 'not-allowed' : 'inherit')};\n  outline: none;\n  border-radius: 4px;\n  fill: ${getColor()};\n  opacity: ${({ disabled }): number => (disabled ? 0.5 : 1)};\n  transition: ${({ animated }): string =>\n    animated ? 'none' : 'all 0.1s ease-in'};\n  &:hover {\n    fill: ${getColor('hoverColor')};\n  }\n  &:active {\n    fill: ${getColor('activeColor')};\n  }\n`;\n","import * as React from 'react';\nimport { Icon } from '@ions/icon/base/Icon';\nimport { Props } from '@ions/icon/types';\n\nconst isAnimatedSvg = (children: React.ReactElement[]) =>\n  !!Array.from<React.ReactElement>(children).find(\n    child => child.type === 'animateTransform'\n  );\n\nexport const SvgWrapper: React.FunctionComponent<Props> = ({\n  title,\n  children,\n  ...props\n}: Props): JSX.Element => {\n  const isAnimated =\n    children.props && children.props.children\n      ? isAnimatedSvg(children.props.children)\n      : false;\n  return (\n    <Icon animated={isAnimated} {...props}>\n      {title ? <title>{title}</title> : null}\n      {children}\n    </Icon>\n  );\n};\n","interface CssClasses {\n  [cssClass: string]: boolean | undefined | null;\n}\n\n/**\n * Generates the CSS class names, separated by a space character.\n * @param classes A CSS class (`string`), or an `Object` with CSS classes as keys,\n * and expressions evaluable to `boolean` as values.\n * If the expression is evaluated to `true`, the CSS class will be added.\n *\n * Example: `getClassNames(\"class-1\", { \"class-2\": true, \"class-3\": false});`\n */\nexport const getClassNames = (...classes: (string | CssClasses)[]): string => {\n  const result: string[] = [];\n  classes.forEach(value => {\n    if (typeof value === 'string') {\n      result.push(value);\n    } else {\n      Object.entries(value).forEach(([key, value]) => {\n        if (value) {\n          result.push(key);\n        }\n      });\n    }\n  });\n  return result.join(' ');\n};\n"],"sourceRoot":""}
=======
{"version":3,"sources":["/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/atoms/icons/HideIcon.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/atoms/icons/RevealIcon.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/password-input/PasswordInput.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/password-input/PasswordInput.mdx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/password-input/PasswordInput.module.scss","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/icon/base/Icon.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/icon/wrapper/SvgWrapper.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/utility/cssUtils.ts"],"names":["HideIcon","props","fillRule","clipRule","d","RevealIcon","PasswordInput","feedbackText","feedbackType","hidePasswordTooltipText","label","onPasswordVisibilityChanged","showPasswordTooltipText","prop","React","showPassword","setShowPassword","styledClassName","styles","RevealOrHideIcon","className","root","container","type","getClassNames","input","icon","onClick","prevState","disabled","Tooltip","placement","title","hoverColor","midGreen00","feedback","layoutProps","MDXLayout","MDXContent","components","mdxType","of","__position","__code","__scope","this","Playground","Props","style","alignItems","display","flexDirection","justifyContent","height","flex","placeholder","nextState","console","log","isMDXComponent","module","exports","getColor","propName","animated","dashGreen00","Icon","styled","svg","attrs","viewBox","version","xmlns","width","size","SvgWrapper","children","isAnimated","Array","from","find","child","isAnimatedSvg","result","classes","forEach","value","push","Object","entries","key","join"],"mappings":"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","file":"static/js/src-components-password-input-password-input.8fdd3fd3.js","sourcesContent":["import * as React from 'react';\nimport { SvgWrapper } from '@ions/icon/wrapper/SvgWrapper';\nimport { IconProps } from '@ions/icon/types';\n\nexport const HideIcon: React.FC<IconProps> = (props: IconProps) => (\n  <SvgWrapper {...props}>\n    <React.Fragment>\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M10 11.5C10.8284 11.5 11.5 10.8284 11.5 9.99998C11.5 9.17156 10.8284 8.49998 10 8.49998C9.17157 8.49998 8.5 9.17156 8.5 9.99998C8.5 10.8284 9.17157 11.5 10 11.5ZM10 13C11.6569 13 13 11.6568 13 9.99998C13 8.34313 11.6569 6.99998 10 6.99998C8.34315 6.99998 7 8.34313 7 9.99998C7 11.6568 8.34315 13 10 13Z'\n      />\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M18 9.86558C18 9.86558 16 3.86546 10 3.86546C4 3.86546 2 9.86558 2 9.86558C2 9.86558 4 15.8655 10 15.8655C16 15.8655 18 9.86558 18 9.86558ZM3.62005 9.86557C3.65718 9.94656 3.69973 10.0359 3.74789 10.1322C3.9914 10.6192 4.36904 11.2653 4.90232 11.9052C5.95964 13.174 7.57163 14.3655 10 14.3655C12.4284 14.3655 14.0404 13.174 15.0977 11.9052C15.631 11.2653 16.0086 10.6192 16.2521 10.1322C16.3003 10.0359 16.3428 9.94655 16.38 9.86556C16.3428 9.78456 16.3003 9.6952 16.2521 9.59887C16.0086 9.11183 15.6309 8.46574 15.0977 7.82579C14.0403 6.55697 12.4283 5.36546 10 5.36546C7.57166 5.36546 5.95967 6.55697 4.90234 7.82579C4.36905 8.46574 3.99141 9.11183 3.7479 9.59887C3.69973 9.6952 3.65718 9.78457 3.62005 9.86557Z'\n      />\n      <path d='M2 16.9333L16.8492 2L17.9099 3.06667L3.06066 18L2 16.9333Z' />\n    </React.Fragment>\n  </SvgWrapper>\n);\n","import * as React from 'react';\nimport { SvgWrapper } from '@ions/icon/wrapper/SvgWrapper';\nimport { IconProps } from '@ions/icon/types';\n\nexport const RevealIcon: React.FC<IconProps> = (props: IconProps) => (\n  <SvgWrapper {...props}>\n    <React.Fragment>\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M10 11.5C10.8284 11.5 11.5 10.8284 11.5 10C11.5 9.17157 10.8284 8.5 10 8.5C9.17157 8.5 8.5 9.17157 8.5 10C8.5 10.8284 9.17157 11.5 10 11.5ZM10 13C11.6569 13 13 11.6569 13 10C13 8.34315 11.6569 7 10 7C8.34315 7 7 8.34315 7 10C7 11.6569 8.34315 13 10 13Z'\n      />{' '}\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M18 10.0001C18 10.0001 16 4 10 4C4 4 2 10.0001 2 10.0001C2 10.0001 4 16 10 16C16 16 18 10.0001 18 10.0001ZM3.62005 10.0001C3.65718 10.0811 3.69973 10.1704 3.74789 10.2668C3.9914 10.7538 4.36904 11.3998 4.90232 12.0398C5.95964 13.3085 7.57163 14.5 10 14.5C12.4284 14.5 14.0404 13.3085 15.0977 12.0398C15.631 11.3998 16.0086 10.7538 16.2521 10.2668C16.3003 10.1705 16.3428 10.0811 16.38 10.0001C16.3428 9.9191 16.3003 9.82974 16.2521 9.73341C16.0086 9.24637 15.6309 8.60028 15.0977 7.96032C14.0403 6.69151 12.4283 5.5 10 5.5C7.57166 5.5 5.95967 6.69151 4.90234 7.96032C4.36905 8.60028 3.99141 9.24637 3.7479 9.73341C3.69973 9.82974 3.65718 9.9191 3.62005 10.0001Z'\n      />\n    </React.Fragment>\n  </SvgWrapper>\n);\n","import * as React from 'react';\n\nimport { getClassNames } from '@utility/cssUtils';\nimport { HideIcon, RevealIcon } from '@atoms/icons';\nimport { midGreen00 } from '@colors';\nimport { Tooltip } from '@components';\n\nimport styles from './PasswordInput.module.scss';\n\ntype PasswordInputFeedbackType = 'error' | 'warning';\n\ntype _ForbiddenProps = 'size' | 'prefix' | 'type';\n\nexport interface PasswordInputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, _ForbiddenProps> {\n  /**\n   * Some text to display under the input when triggering a feedback type\n   */\n  feedbackText?: string;\n  /**\n   * The feedback nature of the input\n   */\n  feedbackType?: PasswordInputFeedbackType;\n  /**\n   * The text that is displayed on hover on the hide icon when the\n   * password is shown\n   */\n  hidePasswordTooltipText: string;\n  /**\n   * The label used to describe the field, it's displayed on top.\n   * Note that the text will be uppercase\n   */\n  label?: string;\n  /**\n   * A function that is triggered when the visibility\n   * of the password is changed.\n   */\n  onPasswordVisibilityChanged?: (visible: boolean) => void;\n  /**\n   * The text that is displayed on hover on the reveal icon when the\n   * password is hidden\n   */\n  showPasswordTooltipText: string;\n}\n\nexport const PasswordInput = (props: PasswordInputProps): JSX.Element => {\n  const {\n    feedbackText,\n    feedbackType,\n    hidePasswordTooltipText,\n    label,\n    onPasswordVisibilityChanged,\n    showPasswordTooltipText,\n    ...prop\n  } = props;\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleShowPassword = () => {\n    if (onPasswordVisibilityChanged) {\n      onPasswordVisibilityChanged(!showPassword);\n    }\n    setShowPassword(prevState => !prevState);\n  };\n\n  const styledClassName = (feedbackType && styles[feedbackType]) || '';\n\n  const RevealOrHideIcon = showPassword ? HideIcon : RevealIcon;\n\n  return (\n    <div className={styles.root}>\n      {label && <span className={styles.label}>{label}</span>}\n      <div className={styles.container}>\n        <input\n          {...prop}\n          type={showPassword ? 'text' : 'password'}\n          className={getClassNames(styles.input, styledClassName)}\n        />\n        <button className={styles.icon} onClick={handleShowPassword}>\n          {prop.disabled ? (\n            <RevealOrHideIcon disabled={prop.disabled} />\n          ) : (\n            <Tooltip\n              placement='left'\n              title={\n                showPassword ? hidePasswordTooltipText : showPasswordTooltipText\n              }\n            >\n              <RevealOrHideIcon hoverColor={midGreen00} />\n            </Tooltip>\n          )}\n        </button>\n      </div>\n      {feedbackText && feedbackType && (\n        <span className={getClassNames(styles.feedback, styledClassName)}>\n          {feedbackText}\n        </span>\n      )}\n    </div>\n  );\n};\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { PasswordInput } from './PasswordInput';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"password-input\"\n    }}>{`Password Input`}</h1>\n    <p>{`A Password input component`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={PasswordInput} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <p>{`Examples below show usage of the Button`}</p>\n    <Playground __position={1} __code={'<PasswordInput\\n  hidePasswordTooltipText=\\\"Hide\\\"\\n  showPasswordTooltipText=\\\"Reveal\\\"\\n  label=\\\"Password\\\"\\n  placeholder=\\\"Test\\\"\\n  onPasswordVisibilityChanged={nextState => console.log(nextState)}\\n/>\\n<PasswordInput\\n  hidePasswordTooltipText=\\\"Hide\\\"\\n  showPasswordTooltipText=\\\"Reveal\\\"\\n/>\\n<PasswordInput\\n  hidePasswordTooltipText=\\\"Hide\\\"\\n  showPasswordTooltipText=\\\"Reveal\\\"\\n  disabled\\n/>\\n<PasswordInput\\n  hidePasswordTooltipText=\\\"Hide\\\"\\n  showPasswordTooltipText=\\\"Reveal\\\"\\n  feedbackType=\\\"warning\\\"\\n  feedbackText=\\\"This password contains invalid characters\\\"\\n/>\\n<PasswordInput\\n  hidePasswordTooltipText=\\\"Hide\\\"\\n  showPasswordTooltipText=\\\"Reveal\\\"\\n  feedbackType=\\\"error\\\"\\n  feedbackText=\\\"Wrong password\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      PasswordInput\n    }} style={{\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      height: 400,\n      flex: 1\n    }} mdxType=\"Playground\">\n  <PasswordInput hidePasswordTooltipText='Hide' showPasswordTooltipText='Reveal' label='Password' placeholder='Test' onPasswordVisibilityChanged={nextState => console.log(nextState)} mdxType=\"PasswordInput\" />\n  <PasswordInput hidePasswordTooltipText='Hide' showPasswordTooltipText='Reveal' mdxType=\"PasswordInput\" />\n  <PasswordInput hidePasswordTooltipText='Hide' showPasswordTooltipText='Reveal' disabled mdxType=\"PasswordInput\" />\n  <PasswordInput hidePasswordTooltipText='Hide' showPasswordTooltipText='Reveal' feedbackType='warning' feedbackText='This password contains invalid characters' mdxType=\"PasswordInput\" />\n  <PasswordInput hidePasswordTooltipText='Hide' showPasswordTooltipText='Reveal' feedbackType='error' feedbackText='Wrong password' mdxType=\"PasswordInput\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PasswordInput_root__2PU8u\",\"label\":\"PasswordInput_label__111R0\",\"feedback\":\"PasswordInput_feedback__2-7hU\",\"warning\":\"PasswordInput_warning__YZoM8\",\"error\":\"PasswordInput_error__1ENdo\",\"container\":\"PasswordInput_container__3yE8i\",\"input\":\"PasswordInput_input__3uu63\",\"icon\":\"PasswordInput_icon__15yOB\"};","import styled from 'styled-components';\nimport { Props as IconProps } from '@ions/icon/types';\nimport { dashGreen00 } from '@colors';\n\nexport type ColorProps = 'color' | 'hoverColor' | 'activeColor';\ninterface Props extends Omit<IconProps, 'title' | 'children'> {\n  animated?: boolean;\n}\n\nconst getWidth = ({ width, size }: Props) => `${size || width || 20}px`;\nconst getHeight = ({ height, size }: Props) => `${size || height || 20}px`;\nconst getColor = (propName: ColorProps = 'color') => (props: Props): string =>\n  props.animated ? 'none' : props[propName] || props['color'] || dashGreen00;\n\nexport const Icon = styled.svg.attrs<Props>(({ viewBox }: Props) => ({\n  viewBox: viewBox || '0 0 20 20',\n  version: '1.1',\n  xmlns: 'http://www.w3.org/2000/svg'\n}))`\n  display: flex;\n  width: ${getWidth};\n  height: ${getHeight};\n  cursor: ${({ disabled }): string => (disabled ? 'not-allowed' : 'inherit')};\n  outline: none;\n  border-radius: 4px;\n  fill: ${getColor()};\n  opacity: ${({ disabled }): number => (disabled ? 0.5 : 1)};\n  transition: ${({ animated }): string =>\n    animated ? 'none' : 'all 0.1s ease-in'};\n  &:hover {\n    fill: ${getColor('hoverColor')};\n  }\n  &:active {\n    fill: ${getColor('activeColor')};\n  }\n`;\n","import * as React from 'react';\nimport { Icon } from '@ions/icon/base/Icon';\nimport { Props } from '@ions/icon/types';\n\nconst isAnimatedSvg = (children: React.ReactElement[]) =>\n  !!Array.from<React.ReactElement>(children).find(\n    child => child.type === 'animateTransform'\n  );\n\nexport const SvgWrapper: React.FunctionComponent<Props> = ({\n  title,\n  children,\n  ...props\n}: Props): JSX.Element => {\n  const isAnimated =\n    children.props && children.props.children\n      ? isAnimatedSvg(children.props.children)\n      : false;\n  return (\n    <Icon animated={isAnimated} {...props}>\n      {title ? <title>{title}</title> : null}\n      {children}\n    </Icon>\n  );\n};\n","interface CssClasses {\n  [cssClass: string]: boolean | undefined | null;\n}\n\n/**\n * Generates the CSS class names, separated by a space character.\n * @param classes A CSS class (`string`), or an `Object` with CSS classes as keys,\n * and expressions evaluable to `boolean` as values.\n * If the expression is evaluated to `true`, the CSS class will be added.\n *\n * Example: `getClassNames(\"class-1\", { \"class-2\": true, \"class-3\": false});`\n */\nexport const getClassNames = (...classes: (string | CssClasses)[]): string => {\n  const result: string[] = [];\n  classes.forEach(value => {\n    if (typeof value === 'string') {\n      result.push(value);\n    } else {\n      Object.entries(value).forEach(([key, value]) => {\n        if (value) {\n          result.push(key);\n        }\n      });\n    }\n  });\n  return result.join(' ');\n};\n"],"sourceRoot":""}
>>>>>>> ad1926d... docs: update docz documentation:docs/static/js/src-components-password-input-password-input.d1bb784a0f00ba484905.js.map
