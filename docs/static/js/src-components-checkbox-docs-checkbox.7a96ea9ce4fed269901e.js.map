{"version":3,"sources":["/Users/pducolin/repos/ui-components/src/components/Checkbox/Checkbox.tsx","/Users/pducolin/repos/ui-components/src/components/Checkbox/docs/CheckboxDemo.tsx","/Users/pducolin/repos/ui-components/src/components/Checkbox/docs/Checkbox.mdx","/Users/pducolin/repos/ui-components/src/utility/cssUtils.ts"],"names":["CheckboxContainer","className","children","getClassNames","HiddenCheckbox","checked","props","type","StyledCheckbox","disabled","Checkmark","width","height","viewBox","fill","xmlns","d","stroke-linecap","stroke-linejoin","Checkbox","CheckboxDemo","useState","setChecked","onChange","e","currentTarget","layoutProps","MDXLayout","MDXContent","components","mdxType","of","__position","__code","__scope","this","Playground","Props","style","display","flexDirection","justifyContent","isMDXComponent","result","classes","forEach","value","push","Object","entries","key","join"],"mappings":"6sBAOA,IAAMA,EAAoB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,SACtC,OACE,2BAAOD,UAAWE,YAAc,oBAAqBF,GAAa,KAC/DC,IAKDE,EAAiB,SAAC,GAAiD,EAA/CC,QAAgD,IAA5BC,EAA2B,2BACvE,OAAO,yCAAOL,UAAU,iBAAiBM,KAAK,YAAeD,KAGzDE,EAAiB,SAAC,GAIF,IAAD,IAHnBH,eAGmB,aAFnBI,gBAEmB,SADnBP,EACmB,EADnBA,SAEA,OACE,yBACED,UAAWE,YAAc,iBAAkB,CACzCE,QAASA,EACTI,SAAUA,KAGXP,IAKDQ,EAAY,WAChB,OACE,yBACET,UAAU,YACVU,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,0BACEd,UAAU,mBACVe,EAAE,+BACFC,iBAAe,QACfC,kBAAgB,YAMXC,EAAW,SAAC,GAAD,IACtBlB,EADsB,EACtBA,UACAI,EAFsB,EAEtBA,QACAI,EAHsB,EAGtBA,SACGH,EAJmB,yDAMtB,kBAAC,EAAD,CAAmBL,UAAWA,GAC5B,kBAAC,EAAD,eAAgBI,QAASA,GAAaC,IACtC,kBAAC,EAAD,CAAgBD,QAASA,EAASI,SAAUA,GAC1C,kBAAC,EAAD,S,0TC9DOW,EAAe,WAAO,IAAD,EACFC,oBAAS,GADP,mBACzBhB,EADyB,KAChBiB,EADgB,KAEhC,OACE,kBAAC,EAAD,CAAUjB,QAASA,EAASkB,SAAU,SAAAC,GAAC,OAAIF,EAAWE,EAAEC,cAAcpB,a,mQCG1E,IAKMqB,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGvB,EACF,8BACD,OAAO,YAACqB,EAAD,iBAAeD,EAAiBpB,EAAhC,CAAuCuB,WAAYA,EAAYC,QAAQ,cAE5E,iBAAQ,CACN,GAAM,YADR,YAGA,6CACA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIZ,EAAUW,QAAQ,UAC7B,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,eADR,eAGA,kEACA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,eAAgBC,QAAS,CAC1D5B,MAAO6B,KAAOA,KAAK7B,MAAQA,EAC3B8B,eACAC,UACAlB,WACAC,gBACCkB,MAAO,CACRC,QAAS,OACTC,cAAe,MACfC,eAAgB,gBACfX,QAAQ,cACb,YAAC,EAAD,CAAUA,QAAQ,cAEhB,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,mBAAoBC,QAAS,CAC9D5B,MAAO6B,KAAOA,KAAK7B,MAAQA,EAC3B8B,eACAC,UACAlB,WACAC,gBACCkB,MAAO,CACRC,QAAS,OACTC,cAAe,MACfC,eAAgB,gBACfX,QAAQ,cACb,YAAC,EAAD,CAAcA,QAAQ,mB,+LAMxBF,EAAWc,gBAAiB,G,mMCzDfvC,EAAgB,WAAiD,IAC5E,IAAMwC,EAAmB,GADmD,mBAA7CC,EAA6C,yBAA7CA,EAA6C,gBAa5E,OAXAA,EAAQC,QAAQ,SAAAC,GACO,kBAAVA,EACTH,EAAOI,KAAKD,GAEZE,OAAOC,QAAQH,GAAOD,QAAQ,YAAmB,IAAD,mBAAhBK,EAAgB,WAE5CP,EAAOI,KAAKG,OAKbP,EAAOQ,KAAK,M","file":"static/js/src-components-checkbox-docs-checkbox.d8b59ef1.js","sourcesContent":["import React from 'react';\nimport { getClassNames } from '../../utility/cssUtils';\nimport './Checkbox.css';\n\nexport interface CheckboxProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst CheckboxContainer = ({ className, children }: CheckboxProps) => {\n  return (\n    <label className={getClassNames('checkboxContainer', className || '')}>\n      {children}\n    </label>\n  );\n};\n\nconst HiddenCheckbox = ({ checked = false, ...props }: CheckboxProps) => {\n  return <input className='hiddenCheckBox' type='checkbox' {...props} />;\n};\n\nconst StyledCheckbox = ({\n  checked = false,\n  disabled = false,\n  children\n}: CheckboxProps) => {\n  return (\n    <div\n      className={getClassNames('styledCheckbox', {\n        checked: checked,\n        disabled: disabled\n      })}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst Checkmark = () => {\n  return (\n    <svg\n      className='checkmark'\n      width='20'\n      height='20'\n      viewBox='0 0 20 20'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n    >\n      <path\n        className='checkmark__check'\n        d='M5.5 10L8.45928 13L14.4796 7'\n        stroke-linecap='round'\n        stroke-linejoin='round'\n      />\n    </svg>\n  );\n};\n\nexport const Checkbox = ({\n  className,\n  checked,\n  disabled,\n  ...props\n}: CheckboxProps) => (\n  <CheckboxContainer className={className}>\n    <HiddenCheckbox checked={checked} {...props} />\n    <StyledCheckbox checked={checked} disabled={disabled}>\n      <Checkmark />\n    </StyledCheckbox>\n  </CheckboxContainer>\n);\n","import React, { useState } from \"react\";\nimport { Checkbox } from \"../Checkbox\";\n\nexport const CheckboxDemo = () => {\n  const [checked, setChecked] = useState(false);\n  return (\n    <Checkbox checked={checked} onChange={e => setChecked(e.currentTarget.checked)} />\n  );\n};","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Checkbox } from '../Checkbox';\nimport {CheckboxDemo} from './CheckboxDemo'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <p>{`A checkbox component`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <p>{`Examples below show usage of the Checkbox`}</p>\n    <Playground __position={1} __code={'<Checkbox />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Checkbox,\n      CheckboxDemo\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }} mdxType=\"Playground\">\n  <Checkbox mdxType=\"Checkbox\" />\n    </Playground>\n    <Playground __position={2} __code={'<CheckboxDemo />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Checkbox,\n      CheckboxDemo\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }} mdxType=\"Playground\">\n  <CheckboxDemo mdxType=\"CheckboxDemo\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","interface CssClasses {\n  [cssClass: string]: boolean | undefined | null;\n}\n\n/**\n * Generates the CSS class names, separated by a space character.\n * @param classes A CSS class (`string`), or an `Object` with CSS classes as keys,\n * and expressions evaluable to `boolean` as values.\n * If the expression is evaluated to `true`, the CSS class will be added.\n *\n * Example: `getClassNames(\"class-1\", { \"class-2\": true, \"class-3\": false});`\n */\nexport const getClassNames = (...classes: (string | CssClasses)[]): string => {\n  const result: string[] = [];\n  classes.forEach(value => {\n    if (typeof value === 'string') {\n      result.push(value);\n    } else {\n      Object.entries(value).forEach(([key, value]) => {\n        if (value) {\n          result.push(key);\n        }\n      });\n    }\n  });\n  return result.join(' ');\n};\n"],"sourceRoot":""}