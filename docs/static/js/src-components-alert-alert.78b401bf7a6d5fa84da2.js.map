{"version":3,"sources":["/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/button/base/BaseButton.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/button/themes/ThemeWrapper.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/button/themes/danger/ButtonDanger.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/button/themes/secondary/ButtonSecondary.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/button/themes/primary/ButtonPrimary.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/button/themes/ghost/ButtonGhost.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/atoms/button/Button.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/atoms/icons/CheckCircleIcon.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/atoms/icons/CloseIcon.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/atoms/icons/CrossCircleIcon.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/colors/colors.ts","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/alert/types.ts","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/alert/Alert.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/alert/Alert.mdx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/components/alert/Alert.module.scss","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/icon/base/Icon.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/icon/wrapper/SvgWrapper.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/ions/text/StyledText.tsx","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/utility/cssUtils.ts","/Users/mamiot/Documents/Repositories/dashlane/ui-components/src/utility/helpers.ts"],"names":["getBgColorByState","state","theme","backgroundColor","transparent","getBorderByState","borderColor","baseStyle","css","textColor","white","props","customStyle","SmallButton","styled","button","MediumButton","LargeButton","StyledContent","StyledText","BaseButton","children","size","content","assertUnreachable","ThemeWrapper","colors","buttonTheme","dark","dangerColors","default","idle","functionalRed02","hover","functionalRed01","active","functionalRed00","ButtonDanger","secondaryColors","dashGreen05","dashGreen03","dashGreen00","dashGreen01","dashGreen02","ButtonSecondary","primaryColors","midGreen00","dashDarkerGreen00","midGreen03","midGreen01","ButtonPrimary","ghostStyle","ButtonGhost","Button","nature","renderButtonByType","CheckCircleIcon","fillRule","clipRule","d","CloseIcon","CrossCircleIcon","dashGreen04","dashGreen06","pink00","pink01","pink02","pink03","pink04","pink05","red00","red01","red02","red03","red04","red05","grey00","grey01","grey02","grey03","grey04","grey05","grey06","black","validatorGreen","AlertSeverity","Alert","severity","SUCCESS","showIcon","showCloseIcon","React","close","setClose","className","getClassNames","styles","root","icon","ERROR","color","getIconBySeverity","renderIcon","description","closeIcon","onClick","layoutProps","MDXLayout","MDXContent","components","mdxType","of","__position","__code","__scope","this","Playground","Props","style","display","flexDirection","justifyContent","marginBottom","isMDXComponent","module","exports","getColor","propName","animated","Icon","svg","attrs","viewBox","version","xmlns","width","height","disabled","SvgWrapper","title","isAnimated","Array","from","find","child","type","isAnimatedSvg","span","result","classes","forEach","value","push","Object","entries","key","join","_","Error"],"mappings":"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","file":"static/js/src-components-alert-alert.2b3e1bb4.js","sourcesContent":["import * as React from 'react';\nimport styled, {\n  css,\n  DefaultTheme,\n  FlattenInterpolation,\n  ThemedStyledProps\n} from 'styled-components';\nimport { transparent, white } from '@colors';\nimport { StyledText } from '@ions/text/StyledText';\nimport { Props } from '@atoms/button/Button';\nimport { assertUnreachable } from '@utility/helpers';\nimport { ButtonState } from '@ions/button/themes/types';\n\nexport type BaseButtonProps = Omit<Props, 'nature' | 'theme'>;\ntype Theme = {\n  [key in keyof DefaultTheme]: DefaultTheme[key];\n};\n\nexport interface BaseProps extends BaseButtonProps {\n  children?: React.ReactNode;\n  customStyle?: FlattenInterpolation<ThemedStyledProps<{}, DefaultTheme>>;\n  theme: Theme;\n}\n\nconst getBgColorByState = (state: ButtonState) => ({ theme }: BaseProps) =>\n  theme.backgroundColor[state] || transparent;\nconst getColor = ({ theme }: BaseProps) => theme.textColor || white;\nconst getBorderByState = (state: ButtonState) => ({ theme }: BaseProps) =>\n  theme.borderColor\n    ? `1px solid ${theme.borderColor[state] || transparent}`\n    : 'none';\n\nconst baseStyle = css`\n  color: ${getColor};\n  font-size: 16px;\n  line-height: 20px;\n  background-color: ${getBgColorByState('idle')};\n  cursor: pointer;\n  border: ${getBorderByState('idle')};\n  border-radius: 4px;\n  min-width: 60px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  transition: all 0.1s;\n  ${props => props.customStyle};\n\n  &:hover:not(:disabled),\n  &:focus:not(:disabled) {\n    border: ${getBorderByState('hover')};\n    background-color: ${getBgColorByState('hover')};\n  }\n  &:active:not(:disabled) {\n    border: ${getBorderByState('active')};\n    background-color: ${getBgColorByState('active')};\n  }\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    span {\n      pointer-events: none;\n    }\n  }\n`;\n\nconst SmallButton = styled.button<BaseProps>`\n  ${baseStyle}\n  padding: 8px 16px;\n  height: 32px;\n  font-size: 12px;\n  line-height: 16px;\n`;\n\nconst MediumButton = styled.button<BaseProps>`\n  ${baseStyle}\n  padding: 10px 16px;\n  height: 40px;\n`;\n\nconst LargeButton = styled.button<BaseProps>`\n  ${baseStyle}\n  padding: 14px 24px;\n  height: 48px;\n`;\n\nconst StyledContent = styled(StyledText)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BaseButton: React.FunctionComponent<BaseProps> = ({\n  children,\n  size = 'medium',\n  ...props\n}: BaseProps) => {\n  const content = <StyledContent>{children || 'Default'}</StyledContent>;\n  switch (size) {\n    case 'small':\n      return <SmallButton {...props}>{content}</SmallButton>;\n    case 'medium':\n      return <MediumButton {...props}>{content}</MediumButton>;\n    case 'large':\n      return <LargeButton {...props}>{content}</LargeButton>;\n    default:\n      return assertUnreachable(size);\n  }\n};\n\nexport default BaseButton;\n","import * as React from 'react';\nimport { BaseButton } from '@ions';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport {\n  DefaultTheme,\n  FlattenInterpolation,\n  ThemedStyledProps\n} from 'styled-components';\n\ninterface Props extends ThemeWrapperProps {\n  colors: ThemeColors;\n  customStyle?: FlattenInterpolation<ThemedStyledProps<{}, DefaultTheme>>;\n}\n\nexport const ThemeWrapper = ({\n  colors,\n  theme = 'default',\n  ...props\n}: Props) => {\n  const buttonTheme =\n    theme === 'dark' && colors.dark ? colors.dark : colors.default;\n\n  return <BaseButton theme={buttonTheme} {...props} />;\n};\n","import * as React from 'react';\nimport { functionalRed00, functionalRed01, functionalRed02 } from '@colors';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport { ThemeWrapper } from '@ions/button/themes/ThemeWrapper';\n\nconst dangerColors: ThemeColors = {\n  default: {\n    backgroundColor: {\n      idle: functionalRed02,\n      hover: functionalRed01,\n      active: functionalRed00\n    }\n  }\n};\n\nconst ButtonDanger = (props: ThemeWrapperProps) => (\n  <ThemeWrapper colors={dangerColors} {...props} />\n);\n\nexport default ButtonDanger;\n","import * as React from 'react';\nimport {\n  dashGreen00,\n  dashGreen01,\n  dashGreen02,\n  dashGreen03,\n  dashGreen05,\n  transparent\n} from '@colors';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport { ThemeWrapper } from '@ions/button/themes/ThemeWrapper';\n\nconst secondaryColors: ThemeColors = {\n  default: {\n    backgroundColor: {\n      idle: transparent,\n      hover: dashGreen05,\n      active: dashGreen03\n    },\n    textColor: dashGreen00,\n    borderColor: {\n      idle: dashGreen05,\n      hover: dashGreen05,\n      active: dashGreen03\n    }\n  },\n  dark: {\n    backgroundColor: {\n      idle: transparent,\n      hover: dashGreen01,\n      active: dashGreen02\n    },\n    borderColor: {\n      idle: dashGreen01,\n      hover: dashGreen01,\n      active: dashGreen02\n    }\n  }\n};\n\nconst ButtonSecondary = (props: ThemeWrapperProps) => (\n  <ThemeWrapper colors={secondaryColors} {...props} />\n);\n\nexport default ButtonSecondary;\n","import * as React from 'react';\nimport {\n  dashDarkerGreen00,\n  dashGreen00,\n  midGreen00,\n  midGreen01,\n  midGreen03,\n  white\n} from '@colors';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport { ThemeWrapper } from '@ions/button/themes/ThemeWrapper';\n\nconst primaryColors: ThemeColors = {\n  default: {\n    backgroundColor: {\n      idle: midGreen00,\n      hover: dashGreen00,\n      active: dashDarkerGreen00\n    }\n  },\n  dark: {\n    backgroundColor: {\n      idle: white,\n      hover: midGreen03,\n      active: midGreen01\n    },\n    textColor: dashGreen00\n  }\n};\n\nconst ButtonPrimary = (props: ThemeWrapperProps) => (\n  <ThemeWrapper colors={primaryColors} {...props} />\n);\n\nexport default ButtonPrimary;\n","import * as React from 'react';\nimport { css } from 'styled-components';\nimport { dashGreen00, dashGreen01, dashGreen05, transparent } from '@colors';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport { ThemeWrapper } from '@ions/button/themes/ThemeWrapper';\n\nconst primaryColors: ThemeColors = {\n  default: {\n    backgroundColor: {\n      idle: transparent,\n      hover: transparent,\n      active: dashGreen05\n    },\n    textColor: dashGreen00,\n    borderColor: {\n      idle: transparent,\n      hover: dashGreen05,\n      active: dashGreen05\n    }\n  },\n  dark: {\n    backgroundColor: {\n      idle: transparent,\n      hover: transparent,\n      active: dashGreen01\n    },\n    borderColor: {\n      idle: transparent,\n      hover: dashGreen01,\n      active: dashGreen01\n    }\n  }\n};\n\n/**\n * Ghost button special styling\n */\nconst ghostStyle = css`\n  min-width: 32px;\n  svg {\n    margin: -8px -16px;\n  }\n`;\n\nconst ButtonGhost = (props: ThemeWrapperProps) => (\n  <ThemeWrapper customStyle={ghostStyle} colors={primaryColors} {...props} />\n);\n\nexport default ButtonGhost;\n","import * as React from 'react';\nimport {\n  ButtonDanger,\n  ButtonGhost,\n  ButtonPrimary,\n  ButtonSecondary\n} from '@ions/button/themes';\nimport { assertUnreachable } from '@utility/helpers';\n\n// Downside: Docz will display all props including React.ButtonHTMLAttributes ones\n// https://github.com/doczjs/docz/issues/895\nexport interface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The button's nature\n   */\n  nature: 'danger' | 'secondary' | 'primary' | 'ghost';\n  /**\n   * Activates the button dark mode\n   */\n  theme?: 'default' | 'dark';\n  /**\n   * Disabled state of the button\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * A large style option\n   @default false\n   */\n  size?: 'small' | 'medium' | 'large';\n}\n\nconst Button: React.FunctionComponent<Props> = (props): JSX.Element | null => {\n  const renderButtonByType = ({\n    nature,\n    ...props\n  }: Props): JSX.Element | null => {\n    switch (nature) {\n      case 'danger':\n        return <ButtonDanger {...props} />;\n      case 'secondary':\n        return <ButtonSecondary {...props} />;\n      case 'primary':\n        return <ButtonPrimary {...props} />;\n      case 'ghost':\n        return <ButtonGhost {...props} />;\n      default:\n        return assertUnreachable(nature);\n    }\n  };\n\n  return renderButtonByType(props);\n};\n\nexport default Button;\n","import * as React from 'react';\nimport SvgWrapper from '@ions/icon/wrapper/SvgWrapper';\n\nconst CheckCircleIcon: React.FunctionComponent<\n  import('../../ions/icon/types').IconProps\n> = (props: import('../../ions/icon/types').IconProps): JSX.Element => (\n  <SvgWrapper {...props}>\n    <React.Fragment>\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M9.23989 10.7168L12.1705 7.68797L13.2485 8.73101L9.22458 12.8898L6.97226 10.4954L8.06485 9.46763L9.23989 10.7168Z'\n      />\n      <path d='M13.8347 15.2489C12.7597 16.0356 11.4341 16.5 10 16.5C6.41015 16.5 3.5 13.5899 3.5 10C3.5 6.41015 6.41015 3.5 10 3.5C13.5899 3.5 16.5 6.41015 16.5 10C16.5 11.4341 16.0356 12.7597 15.2489 13.8347L16.3199 14.9056C17.3729 13.551 18 11.8487 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18C11.8487 18 13.551 17.3729 14.9056 16.3199L13.8347 15.2489Z' />\n    </React.Fragment>\n  </SvgWrapper>\n);\n\nexport default CheckCircleIcon;\n","import * as React from 'react';\nimport SvgWrapper from '@ions/icon/wrapper/SvgWrapper';\n\nconst CloseIcon: React.FunctionComponent<\n  import('../../ions/icon/types').IconProps\n> = (props: import('../../ions/icon/types').IconProps): JSX.Element => (\n  <SvgWrapper {...props}>\n    <React.Fragment>\n      <path d='M8.97561 10L3 15.9756L4.02439 17L10 11.0244L15.9756 17L17 15.9756L11.0244 10L17 4.02439L15.9756 3L10 8.97562L4.02439 3.00001L3 4.0244L8.97561 10Z' />\n    </React.Fragment>\n  </SvgWrapper>\n);\n\nexport default CloseIcon;\n","import * as React from 'react';\nimport SvgWrapper from '@ions/icon/wrapper/SvgWrapper';\n\nconst CrossCircleIcon: React.FunctionComponent<\n  import('../../ions/icon/types').IconProps\n> = (props: import('../../ions/icon/types').IconProps): JSX.Element => (\n  <SvgWrapper {...props}>\n    <React.Fragment>\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M12.6637 8.39704L8.39703 12.6637L7.33637 11.603L11.603 7.33638L12.6637 8.39704Z'\n      />\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M11.603 12.6637L7.3363 8.39704L8.39696 7.33638L12.6636 11.603L11.603 12.6637Z'\n      />\n      <path d='M15.262 13.8167C16.0407 12.745 16.5 11.4261 16.5 10C16.5 6.41015 13.5899 3.5 10 3.5C6.41015 3.5 3.5 6.41015 3.5 10C3.5 13.5899 6.41015 16.5 10 16.5C11.4421 16.5 12.7745 16.0304 13.8526 15.2357L14.9231 16.3062C13.5656 17.3675 11.8567 18 10 18C5.58172 18 2 14.4183 2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10C18 11.8407 17.3783 13.5363 16.3334 14.8881L15.262 13.8167Z' />\n    </React.Fragment>\n  </SvgWrapper>\n);\n\nexport default CrossCircleIcon;\n","/* -- DASH_GREEN -- */\nexport const dashGreen00 = '#0E353D';\nexport const dashGreen01 = '#3E5D64';\nexport const dashGreen02 = '#6E868B';\nexport const dashGreen03 = '#9FAEB1';\nexport const dashGreen04 = '#CFD7D8';\nexport const dashGreen05 = '#D9DFE0';\nexport const dashGreen06 = '#F5F7F7';\n\n/* -- DASH_DARKER_GREEN -- */\nexport const dashDarkerGreen00 = '#071A1E';\n\n/* -- MID_GREEN -- */\nexport const midGreen00 = '#0E6476';\nexport const midGreen01 = '#3E8391';\nexport const midGreen02 = '#6EA2AD';\nexport const midGreen03 = '#9FC1C8';\nexport const midGreen04 = '#CFE0E4';\nexport const midGreen05 = '#D9E6E9';\n\n/* -- PINK -- */\nexport const pink00 = '#FDB5AF';\nexport const pink01 = '#FDC4BF';\nexport const pink02 = '#FED3CF';\nexport const pink03 = '#FEE1DF';\nexport const pink04 = '#FFF0EF';\nexport const pink05 = '#FFF3F2';\n\n/* -- ORANGE -- */\nexport const orange00 = '#FE5B33';\nexport const orange01 = '#FE7C5C';\nexport const orange02 = '#FE9D85';\nexport const orange03 = '#FFBDAD';\nexport const orange04 = '#FFDED6';\nexport const orange05 = '#FFE5DE';\n\n/* -- FUNCTIONAL_RED -- */\nexport const functionalRed00 = '#4E000D';\nexport const functionalRed01 = '#8B0018';\nexport const functionalRed02 = '#FF002D';\nexport const functionalRed03 = '#FFA49F';\n\n/* -- RED -- */\nexport const red00 = '#BF0A33';\nexport const red01 = '#CC3B5C';\nexport const red02 = '#D96C85';\nexport const red03 = '#E59DAD';\nexport const red04 = '#F2CED6';\nexport const red05 = '#F5D8DE';\n\n/* -- GREY -- */\nexport const grey00 = '#615B57';\nexport const grey01 = '#999592';\nexport const grey02 = '#CCC7C2';\nexport const grey03 = '#D6D2CE';\nexport const grey04 = '#E0DDDA';\nexport const grey05 = '#EBE9E7';\nexport const grey06 = '#F5F4F3';\n\n/* -- BLACK -- */\nexport const black = '#000000';\n\n/* -- WHITE -- */\nexport const white = '#FFFFFF';\n\n/* -- VALIDATOR_GREEN -- */\nexport const validatorGreen = '#20B422';\n\n/* -- ACCESSIBLE_VALIDATOR_GREEN -- */\nexport const accessibleValidatorGreen = '#278637';\n\n/* -- ACCESSIBLE_VALIDATOR_RED -- */\nexport const accessibleValidatorRed = '#e00635';\n\n/* -- TRANSPARENT -- */\nexport const transparent = 'transparent';\n","export enum AlertSeverity {\n  SUCCESS = 'success',\n  ERROR = 'error'\n}\n","import * as React from 'react';\nimport { getClassNames } from '@utility/cssUtils';\nimport { Button, CheckCircleIcon, CloseIcon, CrossCircleIcon } from '@atoms';\nimport { AlertSeverity } from './types';\nimport styles from './Alert.module.scss';\n\nexport interface AlertProps {\n  severity?: AlertSeverity;\n  showIcon?: boolean;\n  showCloseIcon?: boolean;\n  children: string;\n}\n\nexport const Alert = ({\n  severity = AlertSeverity.SUCCESS,\n  showIcon = true,\n  showCloseIcon = false,\n  children\n}: AlertProps) => {\n  const [close, setClose] = React.useState(false);\n\n  if (!children || close) {\n    return null;\n  }\n\n  const getIconBySeverity = (severity: AlertSeverity) => {\n    switch (severity) {\n      case AlertSeverity.ERROR:\n        return <CrossCircleIcon size={30} color='white' />;\n      case AlertSeverity.SUCCESS:\n      default:\n        return <CheckCircleIcon size={30} color='white' />;\n    }\n  };\n\n  const renderIcon = (severity: AlertSeverity) => {\n    const icon = getIconBySeverity(severity);\n    return <div className={styles.icon}>{icon}</div>;\n  };\n\n  return (\n    <div className={getClassNames(styles.root, styles[severity])}>\n      <div className={styles.content}>\n        {showIcon && renderIcon(severity)}\n        <p className={styles.description}>{children}</p>\n      </div>\n      {showCloseIcon && (\n        <Button\n          nature='ghost'\n          size='small'\n          className={styles.closeIcon}\n          onClick={() => setClose(true)}\n        >\n          <CloseIcon size={20} color='white' />\n        </Button>\n      )}\n    </div>\n  );\n};\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Alert } from './Alert';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"alert\"\n    }}>{`Alert`}</h1>\n    <p>{`An alert component`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Alert} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <p>{`Examples below show usage of the Alert`}</p>\n    <Playground __position={1} __code={'<div style={{ marginBottom: \\'10px\\' }}>\\n  <Alert severity=\\\"success\\\">This is a success message!</Alert>\\n</div>\\n<div style={{ marginBottom: \\'10px\\' }}>\\n  <Alert severity=\\\"success\\\" showCloseIcon={true}>\\n    This is a success message!\\n  </Alert>\\n</div>\\n<div style={{ marginBottom: \\'10px\\' }}>\\n  <Alert severity=\\\"success\\\" showIcon={false}>\\n    This is a success message!\\n  </Alert>\\n</div>\\n<div style={{ marginBottom: \\'10px\\' }}>\\n  <Alert severity=\\\"error\\\" showCloseIcon={true}>\\n    Something went wrong.\\n  </Alert>\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Alert\n    }} style={{\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start'\n    }} mdxType=\"Playground\">\n  <div style={{\n        marginBottom: '10px'\n      }}>\n    <Alert severity=\"success\" mdxType=\"Alert\">This is a success message!</Alert>\n  </div>\n      <div style={{\n        marginBottom: '10px'\n      }}>\n  <Alert severity='success' showCloseIcon={true} mdxType=\"Alert\">\n    This is a success message!\n  </Alert>\n      </div>\n      <div style={{\n        marginBottom: '10px'\n      }}>\n  <Alert severity='success' showIcon={false} mdxType=\"Alert\">\n    This is a success message!\n  </Alert>\n      </div>\n      <div style={{\n        marginBottom: '10px'\n      }}>\n  <Alert severity='error' showCloseIcon={true} mdxType=\"Alert\">\n    Something went wrong.\n  </Alert>\n      </div>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Alert_root__3o0--\",\"success\":\"Alert_success__1hYNP\",\"error\":\"Alert_error__yQKXd\",\"content\":\"Alert_content__JFTDa\",\"description\":\"Alert_description__2NUwN\",\"icon\":\"Alert_icon__WvyQH\",\"closeIcon\":\"Alert_closeIcon__b5VDa\"};","import styled from 'styled-components';\nimport { Props as IconProps } from '@ions/icon/types';\n\nexport type ColorProps = 'color' | 'hoverColor' | 'activeColor';\ninterface Props extends Omit<IconProps, 'title' | 'children'> {\n  animated?: boolean;\n}\n\nconst getWidth = ({ width, size }: Props) => `${size || width || 20}px`;\nconst getHeight = ({ height, size }: Props) => `${size || height || 20}px`;\nconst getColor = (propName: ColorProps = 'color') => (props: Props): string =>\n  props.animated ? 'none' : props[propName] || props['color'] || 'inherit';\n\nconst Icon = styled.svg.attrs<Props>(({ viewBox }: Props) => ({\n  viewBox: viewBox || '0 0 20 20',\n  version: '1.1',\n  xmlns: 'http://www.w3.org/2000/svg'\n}))`\n  display: flex;\n  width: ${getWidth};\n  height: ${getHeight};\n  cursor: ${({ disabled }): string => (disabled ? 'not-allowed' : 'pointer')};\n  outline: none;\n  border-radius: 4px;\n  fill: ${getColor()};\n  opacity: ${({ disabled }): number => (disabled ? 0.5 : 1)};\n  transition: ${({ animated }): string =>\n    animated ? 'none' : 'all 0.1s ease-in'};\n  &:hover {\n    fill: ${getColor('hoverColor')};\n  }\n  &:active {\n    fill: ${getColor('activeColor')};\n  }\n`;\n\nexport default Icon;\n","import * as React from 'react';\nimport Icon from '@ions/icon/base/Icon';\nimport { Props } from '@ions/icon/types';\n\nconst isAnimatedSvg = (children: React.ReactElement[]) =>\n  !!Array.from<React.ReactElement>(children).find(\n    child => child.type === 'animateTransform'\n  );\nconst SvgWrapper: React.FunctionComponent<Props> = ({\n  title,\n  children,\n  ...props\n}: Props): JSX.Element => {\n  const isAnimated =\n    children.props && children.props.children\n      ? isAnimatedSvg(children.props.children)\n      : false;\n  return (\n    <Icon animated={isAnimated} {...props}>\n      {title ? <title>{title}</title> : null}\n      {children}\n    </Icon>\n  );\n};\n\nexport default SvgWrapper;\n","import styled from 'styled-components';\n\nexport const StyledText = styled.span`\n  font-family: inherit;\n  font-weight: 600;\n`;\n","interface CssClasses {\n  [cssClass: string]: boolean | undefined | null;\n}\n\n/**\n * Generates the CSS class names, separated by a space character.\n * @param classes A CSS class (`string`), or an `Object` with CSS classes as keys,\n * and expressions evaluable to `boolean` as values.\n * If the expression is evaluated to `true`, the CSS class will be added.\n *\n * Example: `getClassNames(\"class-1\", { \"class-2\": true, \"class-3\": false});`\n */\nexport const getClassNames = (...classes: (string | CssClasses)[]): string => {\n  const result: string[] = [];\n  classes.forEach(value => {\n    if (typeof value === 'string') {\n      result.push(value);\n    } else {\n      Object.entries(value).forEach(([key, value]) => {\n        if (value) {\n          result.push(key);\n        }\n      });\n    }\n  });\n  return result.join(' ');\n};\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function assertUnreachable(_: never): never {\n  throw new Error('Unexpected value. Should have been never.');\n}\n"],"sourceRoot":""}