{"version":3,"sources":["/Users/mlouati/Documents/work/ui-components/src/ions/link/base/BaseLink.tsx","/Users/mlouati/Documents/work/ui-components/src/ions/link/ThemedLink.tsx","/Users/mlouati/Documents/work/ui-components/src/atoms/link/Link.tsx","/Users/mlouati/Documents/work/ui-components/src/atoms/link/Link.mdx","/Users/mlouati/Documents/work/ui-components/src/colors/colors.ts","/Users/mlouati/Documents/work/ui-components/src/ions/theme/ThemeWrapper.tsx","/Users/mlouati/Documents/work/ui-components/src/utility/helpers.ts"],"names":["getColorByState","state","theme","textColor","dashGreen00","RegularLink","styled","a","props","customStyle","disabled","SmallLink","BaseLink","size","assertUnreachable","primaryColors","default","idle","midGreen00","hover","active","dashDarkerGreen00","dark","white","midGreen02","ThemedLink","ThemeWrapper","Link","layoutProps","MDXLayout","MDXContent","components","mdxType","of","__position","__code","__scope","this","Playground","Props","style","display","flexDirection","justifyContent","backgroundColor","height","margin","alignItems","isMDXComponent","dashGreen01","dashGreen02","dashGreen03","dashGreen05","midGreen01","midGreen03","pink00","pink01","pink02","pink03","pink04","pink05","functionalRed00","functionalRed01","functionalRed02","red00","red01","red02","red03","red04","red05","grey00","grey01","grey02","grey03","grey04","grey05","grey06","black","validatorGreen","transparent","Component","colors","selectedTheme","_","Error"],"mappings":"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","file":"static/js/src-atoms-link-link.0fd433fc.js","sourcesContent":["import styled, {\n  DefaultTheme,\n  FlattenInterpolation,\n  ThemedStyledProps\n} from 'styled-components';\nimport * as React from 'react';\nimport { Props as LinkProps } from '@atoms/link/Link';\nimport { dashGreen00 } from '@colors';\nimport { State as LinkState, Theme } from '@ions/theme/types';\nimport { assertUnreachable } from '@utility/helpers';\n\nexport interface BaseProps extends Omit<LinkProps, 'theme'> {\n  theme: Theme;\n  customStyle?: FlattenInterpolation<ThemedStyledProps<{}, DefaultTheme>>;\n}\n\nconst getColorByState = (state: LinkState = 'idle') => ({ theme }: BaseProps) =>\n  (typeof theme.textColor === 'object' && theme.textColor[state]) ||\n  dashGreen00;\n\nconst RegularLink = styled.a`\n  color: ${getColorByState()};\n  cursor: pointer;\n  font-size: 16px;\n  line-height: 20px;\n  position: relative;\n  outline: none;\n  transition: all 0.1s;\n  text-decoration: underline;\n  ${(props: BaseProps) => props.customStyle};\n  &:hover,\n  &:focus {\n    color: ${getColorByState('hover')};\n  }\n  &:active {\n    color: ${getColorByState('active')};\n  }\n  ${(props: BaseProps) =>\n    props.disabled &&\n    `\n      opacity: 0.6;\n      pointer-events: none;\n    `}\n`;\n\nconst SmallLink = styled(RegularLink)`\n  font-size: 12px;\n  line-height: 16px;\n`;\n\nconst BaseLink: React.FunctionComponent<BaseProps> = ({\n  size = 'medium',\n  ...props\n}: BaseProps) => {\n  switch (size) {\n    case 'small':\n      return <SmallLink {...props} />;\n    case 'medium':\n    case 'large':\n      return <RegularLink {...props} />;\n    default:\n      return assertUnreachable(size);\n  }\n};\n\nexport default BaseLink;\n","import * as React from 'react';\nimport {\n  dashDarkerGreen00,\n  dashGreen00,\n  midGreen00,\n  midGreen02,\n  white\n} from '@colors';\nimport { LinkThemeConfig } from '@ions/link/types';\nimport { Props as LinkProps } from '@atoms/link/Link';\nimport { ThemeWrapper } from '@ions/theme/ThemeWrapper';\nimport { ThemeColors } from '@ions/theme/types';\nimport BaseLink from '@ions/link/base/BaseLink';\n\nconst primaryColors: ThemeColors<LinkThemeConfig> = {\n  default: {\n    textColor: {\n      idle: midGreen00,\n      hover: dashGreen00,\n      active: dashDarkerGreen00\n    }\n  },\n  dark: {\n    textColor: {\n      idle: white,\n      hover: midGreen02,\n      active: midGreen00\n    }\n  }\n};\n\nconst ThemedLink = ThemeWrapper<LinkProps, LinkThemeConfig>(\n  BaseLink,\n  primaryColors\n);\n\nexport default ThemedLink;\n","import * as React from 'react';\nimport ThemedLink from '@ions/link/ThemedLink';\n\nexport interface Props extends React.AnchorHTMLAttributes<HTMLAnchorElement> {\n  /**\n   * Defines a theme for a link\n   * @default default\n   */\n  theme?: 'default' | 'dark';\n  /**\n   * Disabled state of the link\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * The link size\n   @default medium\n   */\n  size?: 'small' | 'medium' | 'large';\n}\n\nconst Link: React.FunctionComponent<Props> = (props: Props): JSX.Element => (\n  <ThemedLink {...props} />\n);\n\nexport default Link;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport Link from './Link';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"link\"\n    }}>{`Link`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Link} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"possible-link-config\"\n    }}>{`Possible link config:`}</h3>\n    <Playground __position={1} __code={'<Link>Need help?</Link>\\n<Link disabled>Need help?</Link>\\n<Link size=\\\"small\\\">Need help?</Link>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Link\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }} mdxType=\"Playground\">\n  <Link mdxType=\"Link\">Need help?</Link>\n  <Link disabled mdxType=\"Link\">Need help?</Link>\n  <Link size='small' mdxType=\"Link\">Need help?</Link>\n    </Playground>\n    <h3 {...{\n      \"id\": \"the-default-theme-is-light-white-but-a-link-can-also-be-displayed-in-a-dark-theme-dashlanes-dark-green\"\n    }}>{`The default theme is light (white), but a link can also be displayed in a Dark theme (Dashlane's dark green):`}</h3>\n    <Playground __position={2} __code={'<Link theme=\\\"dark\\\">Need help?</Link>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Link\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      backgroundColor: '#0E353D',\n      height: '12vw',\n      margin: '-40px',\n      alignItems: 'center'\n    }} mdxType=\"Playground\">\n  <Link theme='dark' mdxType=\"Link\">Need help?</Link>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","/* -- DASH_GREEN -- */\nexport const dashGreen00 = '#0E353D';\nexport const dashGreen01 = '#3E5D64';\nexport const dashGreen02 = '#6E868B';\nexport const dashGreen03 = '#9FAEB1';\nexport const dashGreen04 = '#CFD7D8';\nexport const dashGreen05 = '#D9DFE0';\nexport const dashGreen06 = '#F5F7F7';\n\n/* -- DASH_DARKER_GREEN -- */\nexport const dashDarkerGreen00 = '#071A1E';\n\n/* -- MID_GREEN -- */\nexport const midGreen00 = '#0E6476';\nexport const midGreen01 = '#3E8391';\nexport const midGreen02 = '#6EA2AD';\nexport const midGreen03 = '#9FC1C8';\nexport const midGreen04 = '#CFE0E4';\nexport const midGreen05 = '#D9E6E9';\n\n/* -- PINK -- */\nexport const pink00 = '#FDB5AF';\nexport const pink01 = '#FDC4BF';\nexport const pink02 = '#FED3CF';\nexport const pink03 = '#FEE1DF';\nexport const pink04 = '#FFF0EF';\nexport const pink05 = '#FFF3F2';\n\n/* -- ORANGE -- */\nexport const orange00 = '#FE5B33';\nexport const orange01 = '#FE7C5C';\nexport const orange02 = '#FE9D85';\nexport const orange03 = '#FFBDAD';\nexport const orange04 = '#FFDED6';\nexport const orange05 = '#FFE5DE';\n\n/* -- FUNCTIONAL_RED -- */\nexport const functionalRed00 = '#4E000D';\nexport const functionalRed01 = '#8B0018';\nexport const functionalRed02 = '#FF002D';\nexport const functionalRed03 = '#FFA49F';\n\n/* -- RED -- */\nexport const red00 = '#BF0A33';\nexport const red01 = '#CC3B5C';\nexport const red02 = '#D96C85';\nexport const red03 = '#E59DAD';\nexport const red04 = '#F2CED6';\nexport const red05 = '#F5D8DE';\n\n/* -- GREY -- */\nexport const grey00 = '#615B57';\nexport const grey01 = '#999592';\nexport const grey02 = '#CCC7C2';\nexport const grey03 = '#D6D2CE';\nexport const grey04 = '#E0DDDA';\nexport const grey05 = '#EBE9E7';\nexport const grey06 = '#F5F4F3';\n\n/* -- BLACK -- */\nexport const black = '#000000';\n\n/* -- WHITE -- */\nexport const white = '#FFFFFF';\n\n/* -- VALIDATOR_GREEN -- */\nexport const validatorGreen = '#20B422';\n\n/* -- TRANSPARENT -- */\nexport const transparent = 'transparent';\n","import * as React from 'react';\nimport { Theme, ThemeColors } from '@ions/theme/types';\nimport {\n  DefaultTheme,\n  FlattenInterpolation,\n  ThemedStyledProps\n} from 'styled-components';\n\nexport function ThemeWrapper<L extends { theme?: 'default' | 'dark' }, K>(\n  Component: React.ComponentType<\n    Omit<Partial<L>, 'theme'> & {\n      theme: Theme;\n      customStyle?: FlattenInterpolation<ThemedStyledProps<{}, DefaultTheme>>;\n    }\n  >,\n  colors: ThemeColors<K>,\n  customStyle = {}\n) {\n  return function wrapWithTheme({ theme = 'default', ...props }: Partial<L>) {\n    const selectedTheme =\n      theme === 'dark' && colors.dark ? colors.dark : colors.default;\n\n    return (\n      <Component theme={selectedTheme} {...props} customStyle={customStyle} />\n    );\n  };\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function assertUnreachable(_: never): never {\n  throw new Error('Unexpected value. Should have been never.');\n}\n"],"sourceRoot":""}