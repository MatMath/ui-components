{"version":3,"sources":["webpack:///../src/components/checkbox/Checkbox.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Checkbox","parentName","__position","__code","__scope","Playground","Props","CheckboxDemo","style","display","flexDirection","justifyContent","readOnly","defaultChecked","checked","disabled","isMDXComponent"],"mappings":"ygBASO,IAAMA,EAAe,Q,sNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,YADR,YAGA,6CACA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAUF,QAAQ,UAC7B,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,eADR,eAGA,gDAA+B,0BAAYG,WAAW,KAAvB,YAA/B,6EACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8IAA+IC,SAAO,GACvLP,QACAH,kBACAW,eACAC,UACAN,aACAO,kBANuL,gBAOvLb,IAPuL,EAQvLH,eARuL,GAStLiB,MAAO,CACRC,QAAS,OACTC,cAAe,MACfC,eAAgB,gBACfb,QAAQ,cACb,YAAC,IAAD,CAAUc,UAAQ,EAACd,QAAQ,aAC3B,YAAC,IAAD,CAAUe,gBAAc,EAACC,SAAO,EAACF,UAAQ,EAACd,QAAQ,aAClD,YAAC,IAAD,CAAUiB,UAAQ,EAACH,UAAQ,EAACd,QAAQ,aACpC,YAAC,IAAD,CAAUiB,UAAQ,EAACD,SAAO,EAACF,UAAQ,EAACd,QAAQ,cAE1C,+DAA8C,0BAAYG,WAAW,KAAvB,YAA9C,KACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mBAAoBC,SAAO,GAC5DP,QACAH,kBACAW,eACAC,UACAN,aACAO,kBAN4D,gBAO5Db,IAP4D,EAQ5DH,eAR4D,GAS3DiB,MAAO,CACRC,QAAS,OACTC,cAAe,MACfC,eAAgB,gBACfb,QAAQ,cACb,YAAC,IAAD,CAAcA,QAAQ,mB,6MAMxBH,EAAWqB,gBAAiB","file":"component---src-components-checkbox-checkbox-mdx-82c3e5841742a0956459.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/sashah/WebProduct/ui-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Checkbox } from './Checkbox';\nimport { CheckboxDemo } from './CheckboxDemo';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <p>{`A checkbox component`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <p>{`Examples below show the `}<inlineCode parentName=\"p\">{`Checkbox`}</inlineCode>{` in its checked and unchecked states, both in enabled and disabled modes:`}</p>\n    <Playground __position={1} __code={'<Checkbox readOnly />\\n<Checkbox defaultChecked checked readOnly />\\n<Checkbox disabled readOnly />\\n<Checkbox disabled checked readOnly />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox,\n      CheckboxDemo,\n      DefaultLayout,\n      _frontmatter\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }} mdxType=\"Playground\">\n  <Checkbox readOnly mdxType=\"Checkbox\" />\n  <Checkbox defaultChecked checked readOnly mdxType=\"Checkbox\" />\n  <Checkbox disabled readOnly mdxType=\"Checkbox\" />\n  <Checkbox disabled checked readOnly mdxType=\"Checkbox\" />\n    </Playground>\n    <p>{`The example below shows an interactive `}<inlineCode parentName=\"p\">{`Checkbox`}</inlineCode>{`.`}</p>\n    <Playground __position={2} __code={'<CheckboxDemo />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox,\n      CheckboxDemo,\n      DefaultLayout,\n      _frontmatter\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }} mdxType=\"Playground\">\n  <CheckboxDemo mdxType=\"CheckboxDemo\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}