{"version":3,"sources":["webpack:///../src/utility/cssUtils.ts","webpack:///../src/atoms/icons/CopyPasswordIcon.tsx","webpack:///../src/ions/icon/base/Icon.tsx","webpack:///../src/ions/icon/wrapper/SvgWrapper.tsx","webpack:///../src/components/button/Button.tsx","webpack:///../src/components/button/Button.module.scss","webpack:///../src/components/button/Button.mdx"],"names":["getClassNames","result","classes","forEach","value","push","Object","entries","key","join","CopyPasswordIcon","props","d","fillRule","clipRule","getColor","propName","animated","dashGreen00","Icon","styled","svg","attrs","viewBox","version","xmlns","width","size","height","disabled","SvgWrapper","title","children","isAnimated","Array","from","find","child","type","isAnimatedSvg","Button","nature","theme","htmlButtonProps","className","styles","button","content","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","of","__position","__code","__scope","Playground","Props","white","midGreen00","preview","color","style","marginRight","parentName","backgroundColor","minHeight","display","flexDirection","alignItems","justifyContent","isMDXComponent"],"mappings":"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","file":"component---src-components-button-button-mdx-2f7e939297a4c8941b6f.js","sourcesContent":["interface CssClasses {\n  [cssClass: string]: boolean | undefined | null;\n}\n\n/**\n * Generates the CSS class names, separated by a space character.\n * @param classes A CSS class (`string`), or an `Object` with CSS classes as keys,\n * and expressions evaluable to `boolean` as values.\n * If the expression is evaluated to `true`, the CSS class will be added.\n *\n * Example: `getClassNames(\"class-1\", { \"class-2\": true, \"class-3\": false});`\n */\nexport const getClassNames = (...classes: (string | CssClasses)[]): string => {\n  const result: string[] = [];\n  classes.forEach(value => {\n    if (value) {\n      if (typeof value === 'string') {\n        result.push(value);\n      } else {\n        Object.entries(value).forEach(([key, value]) => {\n          if (value) {\n            result.push(key);\n          }\n        });\n      }\n    }\n  });\n  return result.join(' ');\n};\n","import * as React from 'react';\nimport { SvgWrapper } from '@ions/icon/wrapper/SvgWrapper';\nimport { IconProps } from '@ions/icon/types';\n\nexport const CopyPasswordIcon: React.FC<IconProps> = (props: IconProps) => (\n  <SvgWrapper {...props}>\n    <React.Fragment>\n      <path d='M12.25 9.75V10.75H13.25V12.25H12.25V13.25H10.75V12.25H9.75V10.75H10.75V9.75H12.25Z' />{' '}\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M6.5 17.5H16.5V5.50006H6.5V17.5ZM15 7.00006V16H8V7.00006H15Z'\n      />{' '}\n      <path d='M3.5 5.07142H5V4H7.7857V2.5H3.5V5.07142Z' />{' '}\n      <path d='M9.21427 2.5H13.5V5.07142H12V4H9.21427V2.5Z' />{' '}\n      <path d='M6.5 14.5V13H5V11.9286H3.5V14.5H6.5Z' />{' '}\n      <path d='M3.5 11.0714V5.92856H5V11.0714H3.5Z' />\n    </React.Fragment>\n  </SvgWrapper>\n);\n","import styled from 'styled-components';\nimport { Props as IconProps } from '@ions/icon/types';\nimport { dashGreen00 } from '@colors';\n\nexport type ColorProps = 'color' | 'hoverColor' | 'activeColor';\ninterface Props extends Omit<IconProps, 'title' | 'children'> {\n  animated?: boolean;\n}\n\nconst getWidth = ({ width, size }: Props) => `${size || width || 20}px`;\nconst getHeight = ({ height, size }: Props) => `${size || height || 20}px`;\nconst getColor = (propName: ColorProps = 'color') => (props: Props): string =>\n  props.animated ? 'none' : props[propName] || props['color'] || dashGreen00;\n\nexport const Icon = styled.svg.attrs<Props>(({ viewBox }: Props) => ({\n  viewBox: viewBox || '0 0 20 20',\n  version: '1.1',\n  xmlns: 'http://www.w3.org/2000/svg'\n}))`\n  display: flex;\n  width: ${getWidth};\n  height: ${getHeight};\n  cursor: ${({ disabled }): string => (disabled ? 'not-allowed' : 'inherit')};\n  outline: none;\n  border-radius: 4px;\n  fill: ${getColor()};\n  opacity: ${({ disabled }): number => (disabled ? 0.5 : 1)};\n  transition: ${({ animated }): string =>\n    animated ? 'none' : 'all 0.1s ease-in'};\n  &:hover {\n    fill: ${getColor('hoverColor')};\n  }\n  &:active {\n    fill: ${getColor('activeColor')};\n  }\n`;\n","import * as React from 'react';\nimport { Icon } from '@ions/icon/base/Icon';\nimport { Props } from '@ions/icon/types';\n\nconst isAnimatedSvg = (children: React.ReactElement[]) =>\n  !!Array.from<React.ReactElement>(children).find(\n    child => child.type === 'animateTransform'\n  );\n\nexport const SvgWrapper: React.FunctionComponent<Props> = ({\n  title,\n  children,\n  ...props\n}: Props): JSX.Element => {\n  const isAnimated =\n    children.props && children.props.children\n      ? isAnimatedSvg(children.props.children)\n      : false;\n  return (\n    <Icon animated={isAnimated} {...props}>\n      {title ? <title>{title}</title> : null}\n      {children}\n    </Icon>\n  );\n};\n","import * as React from 'react';\nimport { getClassNames } from '@utility/cssUtils';\nimport styles from './Button.module.scss';\n\ntype ButtonNature = 'primary' | 'secondary' | 'danger' | 'ghost';\ntype ButtonSize = 'small' | 'medium' | 'large';\ntype ButtonTheme = 'light' | 'dark';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  nature?: ButtonNature;\n  size?: ButtonSize;\n  theme?: ButtonTheme;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  nature = 'primary',\n  size = 'medium',\n  theme = 'light',\n  children,\n  ...htmlButtonProps\n}) => {\n  return (\n    <button\n      {...htmlButtonProps}\n      className={getClassNames(\n        styles.button,\n        styles[nature],\n        styles[size],\n        styles[theme]\n      )}\n    >\n      {children ? <span className={styles.content}>{children}</span> : null}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button-module--button--3_mlL\",\"small\":\"Button-module--small--3iAdo\",\"medium\":\"Button-module--medium--zuKCu\",\"large\":\"Button-module--large--2PHKV\",\"light\":\"Button-module--light--1PI8o\",\"primary\":\"Button-module--primary--1fSDS\",\"secondary\":\"Button-module--secondary--2aogy\",\"danger\":\"Button-module--danger--up85X\",\"ghost\":\"Button-module--ghost--3kL3_\",\"dark\":\"Button-module--dark--Ytoiu\",\"content\":\"Button-module--content--18tRJ\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/alexandre/Documents/Programmation/ui-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Button } from './Button';\nimport { CopyPasswordIcon } from '../../atoms/icons/CopyPasswordIcon';\nimport { white, midGreen00, dashGreen00 } from '../../colors/colors.ts';\nimport '../../utility/playgroundStyles.css';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`A Button that allows users to take actions, and make choices, with a single tap.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"nature\"\n    }}>{`Nature`}</h3>\n    <Playground __position={1} __code={'<Button nature=\\\"primary\\\">Primary</Button>\\n<Button nature=\\\"secondary\\\">Secondary</Button>\\n<Button nature=\\\"danger\\\">Danger</Button>\\n<Button nature=\\\"ghost\\\">Ghost</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      CopyPasswordIcon,\n      white,\n      midGreen00,\n      dashGreen00,\n      DefaultLayout,\n      _frontmatter\n    }} className={{\n      preview: 'playground-base'\n    }} mdxType=\"Playground\">\n      <Button nature='primary' mdxType=\"Button\">Primary</Button>\n      <Button nature='secondary' mdxType=\"Button\">Secondary</Button>\n      <Button nature='danger' mdxType=\"Button\">Danger</Button>\n      <Button nature='ghost' mdxType=\"Button\">Ghost</Button>\n    </Playground>\n    <h3 {...{\n      \"id\": \"possibilities\"\n    }}>{`Possibilities`}</h3>\n    <p>{`All buttons can display icons, text or mixed content.`}</p>\n    <Playground __position={2} __code={'<Button nature=\\\"primary\\\">\\n  <CopyPasswordIcon color={white} style={{ marginRight: \\'8px\\' }} />\\n  Save\\n</Button>\\n<Button nature=\\\"secondary\\\">\\n  <CopyPasswordIcon color={midGreen00} style={{ marginRight: \\'8px\\' }} />\\n  Cancel\\n</Button>\\n\\n<Button nature=\\\"danger\\\">\\n  <CopyPasswordIcon color={white} style={{ marginRight: \\'8px\\' }} />\\n  Delete\\n</Button>\\n\\n<Button nature=\\\"ghost\\\">Decline</Button>\\n\\n<Button nature=\\\"ghost\\\">\\n  <CopyPasswordIcon color={midGreen00} />\\n</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      CopyPasswordIcon,\n      white,\n      midGreen00,\n      dashGreen00,\n      DefaultLayout,\n      _frontmatter\n    }} className={{\n      preview: 'playground-base'\n    }} mdxType=\"Playground\">\n    <Button nature='primary' mdxType=\"Button\">\n      <CopyPasswordIcon color={white} style={{\n          marginRight: '8px'\n        }} mdxType=\"CopyPasswordIcon\" />\n      Save\n    </Button>\n      <Button nature='secondary' mdxType=\"Button\">\n  <CopyPasswordIcon color={midGreen00} style={{\n          marginRight: '8px'\n        }} mdxType=\"CopyPasswordIcon\" />\n  Cancel\n      </Button>\n\n      <Button nature='danger' mdxType=\"Button\">\n  <CopyPasswordIcon color={white} style={{\n          marginRight: '8px'\n        }} mdxType=\"CopyPasswordIcon\" />\n  Delete\n      </Button>\n\n      <Button nature='ghost' mdxType=\"Button\">Decline</Button>\n\n      <Button nature='ghost' mdxType=\"Button\">\n  <CopyPasswordIcon color={midGreen00} mdxType=\"CopyPasswordIcon\" />\n      </Button>\n    </Playground>\n    <h3 {...{\n      \"id\": \"theme\"\n    }}>{`Theme`}</h3>\n    <p>{`The default theme is `}<inlineCode parentName=\"p\">{`light`}</inlineCode>{` (white), but some buttons can be displayed in a `}<inlineCode parentName=\"p\">{`dark`}</inlineCode>{` theme (Dashlane's dash green, not an actual `}<em parentName=\"p\">{`dark`}</em>{` theme).`}</p>\n    <Playground __position={3} __code={'<Button nature=\\\"primary\\\" theme=\\\"dark\\\">\\n  Save\\n</Button>\\n<Button nature=\\\"secondary\\\" theme=\\\"dark\\\">\\n  Cancel\\n</Button>\\n\\n<Button nature=\\\"ghost\\\" theme=\\\"dark\\\">\\n  Decline\\n</Button>\\n\\n<Button nature=\\\"ghost\\\" size=\\\"small\\\" theme=\\\"dark\\\">\\n  <CopyPasswordIcon color={white} />\\n</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      CopyPasswordIcon,\n      white,\n      midGreen00,\n      dashGreen00,\n      DefaultLayout,\n      _frontmatter\n    }} className={{\n      preview: 'playground-base'\n    }} style={{\n      preview: {\n        backgroundColor: dashGreen00\n      }\n    }} mdxType=\"Playground\">\n    <Button nature='primary' theme='dark' mdxType=\"Button\">\n      Save\n    </Button>\n      <Button nature='secondary' theme='dark' mdxType=\"Button\">\n  Cancel\n      </Button>\n\n      <Button nature='ghost' theme='dark' mdxType=\"Button\">\n  Decline\n      </Button>\n\n      <Button nature='ghost' size='small' theme='dark' mdxType=\"Button\">\n  <CopyPasswordIcon color={white} mdxType=\"CopyPasswordIcon\" />\n      </Button>\n    </Playground>\n    <blockquote>\n      <p parentName=\"blockquote\">{`⚠️ `}<inlineCode parentName=\"p\">{`danger`}</inlineCode>{` nature is not supported in `}<inlineCode parentName=\"p\">{`dark`}</inlineCode>{` theme.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"size\"\n    }}>{`Size`}</h3>\n    <p>{`Buttons can be have different sizes `}{`[`}<inlineCode parentName=\"p\">{`small`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`medium`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`large`}</inlineCode>{`]`}{` with `}<inlineCode parentName=\"p\">{`medium`}</inlineCode>{` being the default value if none is specified.`}</p>\n    <Playground __position={4} __code={'<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    alignItems: \\'center\\',\\n    justifyContent: \\'space-between\\',\\n  }}\\n>\\n  <Button nature=\\\"primary\\\" size=\\\"small\\\">\\n    Save\\n  </Button>\\n  <Button nature=\\\"primary\\\" size=\\\"medium\\\">\\n    Save\\n  </Button>\\n  <Button nature=\\\"primary\\\" size=\\\"large\\\">\\n    Save\\n  </Button>\\n</div>\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    alignItems: \\'center\\',\\n    justifyContent: \\'space-between\\',\\n  }}\\n>\\n  <Button nature=\\\"secondary\\\" size=\\\"small\\\">\\n    Cancel\\n  </Button>\\n  <Button nature=\\\"secondary\\\" size=\\\"medium\\\">\\n    Cancel\\n  </Button>\\n  <Button nature=\\\"secondary\\\" size=\\\"large\\\">\\n    Cancel\\n  </Button>\\n</div>\\n\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    alignItems: \\'center\\',\\n    justifyContent: \\'space-between\\',\\n  }}\\n>\\n  <Button nature=\\\"danger\\\" size=\\\"small\\\">\\n    Delete\\n  </Button>\\n  <Button nature=\\\"danger\\\" size=\\\"medium\\\">\\n    Delete\\n  </Button>\\n  <Button nature=\\\"danger\\\" size=\\\"large\\\">\\n    Delete\\n  </Button>\\n</div>\\n\\n<div\\n  style={{\\n    display: \\'flex\\',\\n    flexDirection: \\'column\\',\\n    alignItems: \\'center\\',\\n    justifyContent: \\'space-between\\',\\n  }}\\n>\\n  <Button nature=\\\"ghost\\\" size=\\\"small\\\">\\n    Decline\\n  </Button>\\n  <Button nature=\\\"ghost\\\" size=\\\"medium\\\">\\n    Decline\\n  </Button>\\n  <Button nature=\\\"ghost\\\" size=\\\"large\\\">\\n    Decline\\n  </Button>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      CopyPasswordIcon,\n      white,\n      midGreen00,\n      dashGreen00,\n      DefaultLayout,\n      _frontmatter\n    }} className={{\n      preview: 'playground-base'\n    }} style={{\n      preview: {\n        minHeight: '150px'\n      }\n    }} mdxType=\"Playground\">\n    <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n      <Button nature='primary' size='small' mdxType=\"Button\">Save</Button>\n      <Button nature='primary' size='medium' mdxType=\"Button\">Save</Button>\n      <Button nature='primary' size='large' mdxType=\"Button\">Save</Button>\n    </div>\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n  <Button nature='secondary' size='small' mdxType=\"Button\">Cancel</Button>\n  <Button nature='secondary' size='medium' mdxType=\"Button\">Cancel</Button>\n  <Button nature='secondary' size='large' mdxType=\"Button\">Cancel</Button>\n      </div>\n\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n  <Button nature='danger' size='small' mdxType=\"Button\">Delete</Button>\n  <Button nature='danger' size='medium' mdxType=\"Button\">Delete</Button>\n  <Button nature='danger' size='large' mdxType=\"Button\">Delete</Button>\n      </div>\n\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }}>\n  <Button nature='ghost' size='small' mdxType=\"Button\">Decline</Button>\n  <Button nature='ghost' size='medium' mdxType=\"Button\">Decline</Button>\n  <Button nature='ghost' size='large' mdxType=\"Button\">Decline</Button>\n      </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h3>\n    <p>{`In disabled pseudo-state, buttons behave as following.`}</p>\n    <Playground __position={5} __code={'<Button nature=\\\"primary\\\" disabled>\\n  Save\\n</Button>\\n<Button nature=\\\"secondary\\\" disabled>\\n  Cancel\\n</Button>\\n<Button nature=\\\"danger\\\" disabled>\\n  Delete\\n</Button>\\n<Button nature=\\\"ghost\\\" size=\\\"medium\\\" disabled>\\n  Decline\\n</Button>\\n<Button nature=\\\"ghost\\\" disabled>\\n  <CopyPasswordIcon color={midGreen00} />\\n</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      CopyPasswordIcon,\n      white,\n      midGreen00,\n      dashGreen00,\n      DefaultLayout,\n      _frontmatter\n    }} className={{\n      preview: 'playground-base'\n    }} mdxType=\"Playground\">\n      <Button nature='primary' disabled mdxType=\"Button\">Save</Button>\n      <Button nature='secondary' disabled mdxType=\"Button\">Cancel</Button>\n      <Button nature='danger' disabled mdxType=\"Button\">Delete</Button>\n      <Button nature='ghost' size='medium' disabled mdxType=\"Button\">Decline</Button>\n      <Button nature='ghost' disabled mdxType=\"Button\">\n  <CopyPasswordIcon color={midGreen00} mdxType=\"CopyPasswordIcon\" />\n      </Button>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}