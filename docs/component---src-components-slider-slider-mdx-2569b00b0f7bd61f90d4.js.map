{"version":3,"sources":["webpack:///../src/components/slider/Slider.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Slider","__position","__code","__scope","Playground","Props","style","alignItems","display","flexDirection","justifyContent","height","flex","React","value","setValue","value2","setValue2","onChange","label","min","max","onChangeComplete","val","console","log","disabled","isMDXComponent"],"mappings":"2gBAQO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,iCACA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAQF,QAAQ,UAC3B,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,eADR,eAGA,gEACA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,qjBAA0jBC,SAAO,GAClmBN,QACAH,kBACAU,eACAC,UACAL,YALkmB,gBAMlmBN,IANkmB,EAOlmBH,eAPkmB,GAQjmBe,MAAO,CACRC,WAAY,SACZC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,OAAQ,IACRC,KAAM,GACLd,QAAQ,cACZ,WAAM,MACyBe,WAAe,IAAlCC,EADN,KACaC,EADb,OAE2BF,WAAe,IAApCG,EAFN,KAEcC,EAFd,KAGD,OAAO,4BACP,YAAC,IAAD,CAAQH,MAAOA,EAAOI,SAAUH,EAAUI,MAAM,SAASC,IAAK,EAAGC,IAAK,IAAKC,iBAAkB,SAAAC,GAAG,OAAIC,QAAQC,IAAR,QAAoBF,IAAQzB,QAAQ,WACxI,YAAC,IAAD,CAAQgB,MAAOE,EAAQE,SAAUD,EAAWE,MAAM,WAAWC,IAAK,EAAGC,IAAK,IAAKK,UAAQ,EAACJ,iBAAkB,SAAAC,GAAG,OAAIC,QAAQC,IAAR,QAAoBF,IAAQzB,QAAQ,e,yMAQ7JH,EAAWgC,gBAAiB","file":"component---src-components-slider-slider-mdx-2569b00b0f7bd61f90d4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mlegault/github/ui-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Slider } from './Slider.tsx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"slider\"\n    }}>{`Slider`}</h1>\n    <p>{`A slider`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Slider} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <p>{`Examples below show usage of the Slider`}</p>\n    <Playground __position={1} __code={'() => {\\n  const [value, setValue] = React.useState(50)\\n  const [value2, setValue2] = React.useState(30)\\n  return (\\n    <>\\n      <Slider\\n        value={value}\\n        onChange={setValue}\\n        label=\\\"Slider\\\"\\n        min={0}\\n        max={100}\\n        onChangeComplete={val => console.log(`done ${val}`)}\\n      />\\n      <Slider\\n        value={value2}\\n        onChange={setValue2}\\n        label=\\\"Disabled\\\"\\n        min={0}\\n        max={100}\\n        disabled\\n        onChangeComplete={val => console.log(`done ${val}`)}\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Slider,\n      DefaultLayout,\n      _frontmatter\n    }} style={{\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      height: 430,\n      flex: 1\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = React.useState(50);\n        const [value2, setValue2] = React.useState(30);\n        return <>\n        <Slider value={value} onChange={setValue} label='Slider' min={0} max={100} onChangeComplete={val => console.log(`done ${val}`)} mdxType=\"Slider\" />\n        <Slider value={value2} onChange={setValue2} label='Disabled' min={0} max={100} disabled onChangeComplete={val => console.log(`done ${val}`)} mdxType=\"Slider\" />\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}