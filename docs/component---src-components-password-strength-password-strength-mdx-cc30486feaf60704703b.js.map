{"version":3,"sources":["webpack:///../src/utility/cssUtils.ts","webpack:///../src/components/password-strength/PasswordStrength.module.scss","webpack:///../src/components/password-strength/PasswordStrength.tsx","webpack:///../src/components/password-strength/PasswordStrength.mdx"],"names":["getClassNames","result","classes","forEach","value","push","Object","entries","key","join","module","exports","classNameColorScoreMapping","0","styles","weakest","1","weak","2","acceptable","3","good","4","strong","PasswordStrength","additionalText","fullWidth","score","showAdditionalText","strengthClassName","className","root","container","passwordStrength","additionalInfo","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","__position","__code","__scope","Playground","Props","style","alignItems","display","flexDirection","justifyContent","height","flex","isMDXComponent"],"mappings":"oLAYaA,EAAgB,WAAiD,IAC5E,IAAMC,EAAmB,GADmD,mBAA7CC,EAA6C,yBAA7CA,EAA6C,gBAe5E,OAbAA,EAAQC,QAAQ,SAAAC,GACVA,IACmB,iBAAVA,EACTH,EAAOI,KAAKD,GAEZE,OAAOC,QAAQH,GAAOD,QAAQ,YAAkB,IAAhBK,EAAgB,WAE5CP,EAAOI,KAAKG,QAMfP,EAAOQ,KAAK,W,gOC1BrBC,EAAOC,QAAU,CAAC,KAAO,uCAAuC,UAAY,4CAA4C,UAAY,4CAA4C,iBAAmB,mDAAmD,QAAU,0CAA0C,KAAO,uCAAuC,WAAa,6CAA6C,KAAO,uCAAuC,OAAS,yCAAyC,eAAiB,mD,klBC0BngB,IAAMC,EAA6B,CACjCC,EAAGC,IAAOC,QACVC,EAAGF,IAAOG,KACVC,EAAGJ,IAAOK,WACVC,EAAGN,IAAOO,KACVC,EAAGR,IAAOS,QAGCC,EAAmB,SAAC,GAKJ,QAJ3BC,EAI2B,EAJ3BA,eAI2B,IAH3BC,iBAG2B,aAF3BC,aAE2B,MAFnB,EAEmB,EAD3BC,EAC2B,EAD3BA,mBAEMC,EAAoBjB,EAA2Be,GAErD,OACE,mBACEG,UAAW9B,YAAcc,IAAOiB,MAAR,OAAiBjB,IAAOY,WAAYA,EAApC,KAExB,mBACEI,UAAW9B,YAAcc,IAAOkB,WAAR,OACrBlB,IAAOY,WAAYA,EADE,KAIxB,oBACEI,UAAW9B,YACTc,IAAOmB,iBACPN,GAAS,EAAIE,EAAoB,MAGrC,oBACEC,UAAW9B,YACTc,IAAOmB,iBACPN,GAAS,EAAIE,EAAoB,MAGrC,oBACEC,UAAW9B,YACTc,IAAOmB,iBACPN,GAAS,EAAIE,EAAoB,MAGrC,oBACEC,UAAW9B,YACTc,IAAOmB,iBACPN,GAAS,EAAIE,EAAoB,MAGrC,oBACEC,UAAW9B,YACTc,IAAOmB,iBACPN,GAAS,EAAIE,EAAoB,OAItCD,GAAsBH,GACrB,oBAAMK,UAAWhB,IAAOoB,gBAAiBT,K,ghBC5E1C,IAAMU,EAAe,Q,uOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,kBADR,kBAGA,0GACwB,mBAAGC,WAAW,KAAQ,CAC1C,KAAQ,sCADY,UADxB,cAIA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIpB,EAAkBkB,QAAQ,UACrC,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,eADR,eAGA,2EACA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,mbAA4bC,SAAO,GACpeN,QACAH,kBACAU,eACAC,UACAzB,oBALoe,gBAMpec,IANoe,EAOpeH,eAPoe,GAQnee,MAAO,CACRC,WAAY,SACZC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,OAAQ,IACRC,KAAM,GACLd,QAAQ,cACb,YAAC,EAAD,CAAkBf,MAAO,EAAGe,QAAQ,qBACpC,YAAC,EAAD,CAAkBf,MAAO,EAAGC,oBAAoB,EAAMH,eAAe,eAAeiB,QAAQ,qBAC5F,YAAC,EAAD,CAAkBf,MAAO,EAAGC,oBAAoB,EAAMH,eAAe,kBAAkBiB,QAAQ,qBAC/F,YAAC,EAAD,CAAkBf,MAAO,EAAGC,oBAAoB,EAAMH,eAAe,wBAAwBiB,QAAQ,qBACrG,YAAC,EAAD,CAAkBf,MAAO,EAAGC,oBAAoB,EAAMH,eAAe,WAAWiB,QAAQ,uB,8NAM1FH,EAAWkB,gBAAiB","file":"component---src-components-password-strength-password-strength-mdx-cc30486feaf60704703b.js","sourcesContent":["interface CssClasses {\n  [cssClass: string]: boolean | undefined | null;\n}\n\n/**\n * Generates the CSS class names, separated by a space character.\n * @param classes A CSS class (`string`), or an `Object` with CSS classes as keys,\n * and expressions evaluable to `boolean` as values.\n * If the expression is evaluated to `true`, the CSS class will be added.\n *\n * Example: `getClassNames(\"class-1\", { \"class-2\": true, \"class-3\": false});`\n */\nexport const getClassNames = (...classes: (string | CssClasses)[]): string => {\n  const result: string[] = [];\n  classes.forEach(value => {\n    if (value) {\n      if (typeof value === 'string') {\n        result.push(value);\n      } else {\n        Object.entries(value).forEach(([key, value]) => {\n          if (value) {\n            result.push(key);\n          }\n        });\n      }\n    }\n  });\n  return result.join(' ');\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PasswordStrength-module--root--2eZC1\",\"fullWidth\":\"PasswordStrength-module--fullWidth--26Tfo\",\"container\":\"PasswordStrength-module--container--29Q_b\",\"passwordStrength\":\"PasswordStrength-module--passwordStrength--1ZEK2\",\"weakest\":\"PasswordStrength-module--weakest--2RBrE\",\"weak\":\"PasswordStrength-module--weak--2uwzI\",\"acceptable\":\"PasswordStrength-module--acceptable--1hkaH\",\"good\":\"PasswordStrength-module--good--zLpUg\",\"strong\":\"PasswordStrength-module--strong--1OVqm\",\"additionalInfo\":\"PasswordStrength-module--additionalInfo--1hisO\"};","import * as React from 'react';\n\nimport { getClassNames } from '@utility/cssUtils';\n\nimport styles from './PasswordStrength.module.scss';\n\nexport interface PasswordStrengthProps {\n  /**\n   * Any text you want to display under the strength indicator\n   */\n  additionalText?: string;\n  /**\n   * Make this field take 100% of the width of it's container\n   * @default false\n   */\n  fullWidth?: boolean;\n  /**\n   * Score indicating the strength of a password\n   * The scale (0 - 4) is based on the levels from the ZXCVBN algorithm\n   */\n  score?: 0 | 1 | 2 | 3 | 4;\n  /**\n   * Wether to display or not the additional info under the strength indicator\n   */\n  showAdditionalText?: boolean;\n}\n\nconst classNameColorScoreMapping = {\n  0: styles.weakest,\n  1: styles.weak,\n  2: styles.acceptable,\n  3: styles.good,\n  4: styles.strong\n};\n\nexport const PasswordStrength = ({\n  additionalText,\n  fullWidth = false,\n  score = 0,\n  showAdditionalText\n}: PasswordStrengthProps) => {\n  const strengthClassName = classNameColorScoreMapping[score];\n\n  return (\n    <div\n      className={getClassNames(styles.root, { [styles.fullWidth]: fullWidth })}\n    >\n      <div\n        className={getClassNames(styles.container, {\n          [styles.fullWidth]: fullWidth\n        })}\n      >\n        <span\n          className={getClassNames(\n            styles.passwordStrength,\n            score >= 0 ? strengthClassName : ''\n          )}\n        ></span>\n        <span\n          className={getClassNames(\n            styles.passwordStrength,\n            score >= 1 ? strengthClassName : ''\n          )}\n        ></span>\n        <span\n          className={getClassNames(\n            styles.passwordStrength,\n            score >= 2 ? strengthClassName : ''\n          )}\n        ></span>\n        <span\n          className={getClassNames(\n            styles.passwordStrength,\n            score >= 3 ? strengthClassName : ''\n          )}\n        ></span>\n        <span\n          className={getClassNames(\n            styles.passwordStrength,\n            score >= 4 ? strengthClassName : ''\n          )}\n        ></span>\n      </div>\n      {showAdditionalText && additionalText && (\n        <span className={styles.additionalInfo}>{additionalText}</span>\n      )}\n    </div>\n  );\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/alexandre/Documents/Programmation/ui-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { PasswordStrength } from './PasswordStrength.tsx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"password-input\"\n    }}>{`Password Input`}</h1>\n    <p>{`A component that indicates the strength of a password.\nThe score is based on the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/dropbox/zxcvbn\"\n      }}>{`ZXCVBN`}</a>{` algorithm`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={PasswordStrength} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <p>{`Examples below show usage of the Password Strength`}</p>\n    <Playground __position={1} __code={'<PasswordStrength score={0} />\\n<PasswordStrength\\n  score={1}\\n  showAdditionalText={true}\\n  additionalText=\\\"Keep going !\\\"\\n/>\\n<PasswordStrength\\n  score={2}\\n  showAdditionalText={true}\\n  additionalText=\\\"That\\'s better !\\\"\\n/>\\n<PasswordStrength\\n  score={3}\\n  showAdditionalText={true}\\n  additionalText=\\\"You\\'re almost there !\\\"\\n/>\\n<PasswordStrength\\n  score={4}\\n  showAdditionalText={true}\\n  additionalText=\\\"Hurray !\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      PasswordStrength,\n      DefaultLayout,\n      _frontmatter\n    }} style={{\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      height: 400,\n      flex: 1\n    }} mdxType=\"Playground\">\n  <PasswordStrength score={0} mdxType=\"PasswordStrength\" />\n  <PasswordStrength score={1} showAdditionalText={true} additionalText='Keep going !' mdxType=\"PasswordStrength\" />\n  <PasswordStrength score={2} showAdditionalText={true} additionalText=\"That's better !\" mdxType=\"PasswordStrength\" />\n  <PasswordStrength score={3} showAdditionalText={true} additionalText=\"You're almost there !\" mdxType=\"PasswordStrength\" />\n  <PasswordStrength score={4} showAdditionalText={true} additionalText='Hurray !' mdxType=\"PasswordStrength\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}