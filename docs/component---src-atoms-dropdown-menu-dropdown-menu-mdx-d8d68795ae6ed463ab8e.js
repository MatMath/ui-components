(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{gUJG:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return b})),t.d(n,"default",(function(){return w}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var o=t("mXGw"),r=t.n(o),l=t("/FXl"),p=t("TjRS"),i=t("ZFoC"),d=t("43x8"),a=t("Plsa"),c=t("Ljzl"),s=t("ao7s");t("aD51");function u(){return(u=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/atoms/dropdownMenu/DropdownMenu.mdx"}});var m={_frontmatter:b},f=p.a;function w(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(l.b)(f,u({},m,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"dropdown-menu"},"Dropdown Menu"),Object(l.b)("p",null,"The Dropdown Menu can be used to display a menu of options that can be hidden."),Object(l.b)("h2",{id:"properties"},"Properties"),Object(l.b)(i.d,{of:d.a,mdxType:"Props"}),Object(l.b)("h2",{id:"usage"},"Usage"),Object(l.b)("p",null,"The dropdown can be defined alongside a controller. To display it correctly:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"both components must be wrapped in a container with a relative or absolute position")),Object(l.b)("li",{parentName:"ul"},"the controller's ref must be passed to the Dropdown")),Object(l.b)(i.c,{__position:1,__code:'() => {\n  const [dropdownIsOpen, setDropdownIsOpen] = React.useState(false)\n  const controllerRef = React.useRef(null)\n  return (\n    <div style={{ position: \'relative\' }}>\n      <div ref={controllerRef}>\n        <Button\n          nature="primary"\n          onClick={() => setDropdownIsOpen(!dropdownIsOpen)}\n        >\n          Click Me\n        </Button>\n      </div>\n      <DropdownMenu\n        isOpen={dropdownIsOpen}\n        dockingSide="left"\n        placement="bottom"\n        controllerRef={controllerRef}\n      >\n        <DropdownElement>Hello</DropdownElement>\n        <DropdownElement>Holà</DropdownElement>\n        <DropdownElement>Salut</DropdownElement>\n        <DropdownElement>Hallo</DropdownElement>\n      </DropdownMenu>\n    </div>\n  )\n}',__scope:{props:t,DefaultLayout:p.a,Playground:i.c,Props:i.d,DropdownMenu:d.a,DropdownElement:a.a,Button:c.a,PhoneIcon:s.a},style:{display:"flex",flexDirection:"row",alignItems:"flex-start",justifyContent:"space-around",height:"200px"},mdxType:"Playground"},(function(){var e=r.a.useState(!1),n=e[0],t=e[1],o=r.a.useRef(null);return Object(l.b)("div",{style:{position:"relative"}},Object(l.b)("div",{ref:o},Object(l.b)(c.a,{nature:"primary",onClick:function(){return t(!n)},mdxType:"Button"},"Click Me")),Object(l.b)(d.a,{isOpen:n,dockingSide:"left",placement:"bottom",controllerRef:o,mdxType:"DropdownMenu"},Object(l.b)(a.a,{mdxType:"DropdownElement"},"Hello"),Object(l.b)(a.a,{mdxType:"DropdownElement"},"Holà"),Object(l.b)(a.a,{mdxType:"DropdownElement"},"Salut"),Object(l.b)(a.a,{mdxType:"DropdownElement"},"Hallo")))})),Object(l.b)("p",null,"Dropdown can be defined as:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"placed below or above their controllerRef,"),Object(l.b)("li",{parentName:"ul"},"aligned on their controller left or right")),Object(l.b)(i.c,{__position:2,__code:"() => {\n  const [dropdown1IsOpen, setDropdown1IsOpen] = React.useState(false)\n  const [dropdown2IsOpen, setDropdown2IsOpen] = React.useState(false)\n  const controller1Ref = React.useRef(null)\n  const controller2Ref = React.useRef(null)\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <div style={{ position: 'relative' }}>\n        <div ref={controller1Ref}>\n          <Button\n            nature=\"primary\"\n            onClick={() => setDropdown1IsOpen(!dropdown1IsOpen)}\n          >\n            TOP\n          </Button>\n        </div>\n        <DropdownMenu\n          isOpen={dropdown1IsOpen}\n          placement=\"top\"\n          controllerRef={controller1Ref}\n        >\n          <DropdownElement>Hello</DropdownElement>\n          <DropdownElement>Holà</DropdownElement>\n        </DropdownMenu>\n      </div>\n      <div style={{ position: 'relative' }}>\n        <div ref={controller2Ref}>\n          <Button\n            nature=\"primary\"\n            onClick={() => setDropdown2IsOpen(!dropdown2IsOpen)}\n          >\n            RIGHT\n          </Button>\n        </div>\n        <DropdownMenu\n          isOpen={dropdown2IsOpen}\n          dockingSide=\"right\"\n          controllerRef={controller2Ref}\n        >\n          <DropdownElement>Good Morning</DropdownElement>\n          <DropdownElement>Konnichiha</DropdownElement>\n          <DropdownElement>Guten Tag</DropdownElement>\n        </DropdownMenu>\n      </div>\n    </div>\n  )\n}",__scope:{props:t,DefaultLayout:p.a,Playground:i.c,Props:i.d,DropdownMenu:d.a,DropdownElement:a.a,Button:c.a,PhoneIcon:s.a},style:{display:"flex",flexDirection:"row",alignItems:"flex-start",justifyContent:"space-around",height:"200px"},mdxType:"Playground"},(function(){var e=r.a.useState(!1),n=e[0],t=e[1],o=r.a.useState(!1),p=o[0],i=o[1],s=r.a.useRef(null),u=r.a.useRef(null);return Object(l.b)("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",width:"100%",height:"100%"}},Object(l.b)("div",{style:{position:"relative"}},Object(l.b)("div",{ref:s},Object(l.b)(c.a,{nature:"primary",onClick:function(){return t(!n)},mdxType:"Button"},"TOP")),Object(l.b)(d.a,{isOpen:n,placement:"top",controllerRef:s,mdxType:"DropdownMenu"},Object(l.b)(a.a,{mdxType:"DropdownElement"},"Hello"),Object(l.b)(a.a,{mdxType:"DropdownElement"},"Holà"))),Object(l.b)("div",{style:{position:"relative"}},Object(l.b)("div",{ref:u},Object(l.b)(c.a,{nature:"primary",onClick:function(){return i(!p)},mdxType:"Button"},"RIGHT")),Object(l.b)(d.a,{isOpen:p,dockingSide:"right",controllerRef:u,mdxType:"DropdownMenu"},Object(l.b)(a.a,{mdxType:"DropdownElement"},"Good Morning"),Object(l.b)(a.a,{mdxType:"DropdownElement"},"Konnichiha"),Object(l.b)(a.a,{mdxType:"DropdownElement"},"Guten Tag"))))})),Object(l.b)("h2",{id:"position-within-a-container"},"Position within a container"),Object(l.b)("p",null,"Dropdown computes its ideal position within a container:\nif you pass ",Object(l.b)("inlineCode",{parentName:"p"},"top")," as the placement prop but there is not enough space within the container,\nthe menu position will be overwritten to ",Object(l.b)("inlineCode",{parentName:"p"},"bottom"),"."),Object(l.b)(i.c,{__position:3,__code:"() => {\n  const [dropdown1IsOpen, setDropdown1IsOpen] = React.useState(false)\n  const [dropdown2IsOpen, setDropdown2IsOpen] = React.useState(false)\n  const containerRef = React.useRef(null)\n  const button1Ref = React.useRef(null)\n  const button2Ref = React.useRef(null)\n  return (\n    <div\n      ref={containerRef}\n      style={{\n        height: '250px',\n        display: 'flex',\n        background: 'ghostwhite',\n        justifyContent: 'space-between',\n      }}\n    >\n      <div style={{ position: 'relative', height: 'fit-content' }}>\n        <div ref={button1Ref}>\n          <Button\n            nature=\"primary\"\n            onClick={() => setDropdown1IsOpen(!dropdown1IsOpen)}\n          >\n            Click Me\n          </Button>\n        </div>\n        <DropdownMenu\n          isOpen={dropdown1IsOpen}\n          dockingSide=\"left\"\n          placement=\"top\"\n          containerRef={containerRef}\n          controllerRef={button1Ref}\n        >\n          <DropdownElement>Hello</DropdownElement>\n          <DropdownElement>Holà</DropdownElement>\n          <DropdownElement>Salut</DropdownElement>\n        </DropdownMenu>\n      </div>\n      <div\n        style={{\n          position: 'relative',\n          height: 'fit-content',\n          alignSelf: 'flex-end',\n        }}\n      >\n        <div ref={button2Ref}>\n          <Button\n            nature=\"secondary\"\n            onClick={() => {\n              setDropdown2IsOpen(!dropdown2IsOpen)\n            }}\n          >\n            Click Me\n          </Button>\n        </div>\n        <DropdownMenu\n          isOpen={dropdown2IsOpen}\n          dockingSide=\"left\"\n          placement=\"bottom\"\n          containerRef={containerRef}\n          controllerRef={button2Ref}\n        >\n          <DropdownElement>Hello</DropdownElement>\n          <DropdownElement>Holà</DropdownElement>\n          <DropdownElement>Salut</DropdownElement>\n        </DropdownMenu>\n      </div>\n    </div>\n  )\n}",__scope:{props:t,DefaultLayout:p.a,Playground:i.c,Props:i.d,DropdownMenu:d.a,DropdownElement:a.a,Button:c.a,PhoneIcon:s.a},mdxType:"Playground"},(function(){var e=r.a.useState(!1),n=e[0],t=e[1],o=r.a.useState(!1),p=o[0],i=o[1],s=r.a.useRef(null),u=r.a.useRef(null),b=r.a.useRef(null);return Object(l.b)("div",{ref:s,style:{height:"250px",display:"flex",background:"ghostwhite",justifyContent:"space-between"}},Object(l.b)("div",{style:{position:"relative",height:"fit-content"}},Object(l.b)("div",{ref:u},Object(l.b)(c.a,{nature:"primary",onClick:function(){return t(!n)},mdxType:"Button"},"Click Me")),Object(l.b)(d.a,{isOpen:n,dockingSide:"left",placement:"top",containerRef:s,controllerRef:u,mdxType:"DropdownMenu"},Object(l.b)(a.a,{mdxType:"DropdownElement"},"Hello"),Object(l.b)(a.a,{mdxType:"DropdownElement"},"Holà"),Object(l.b)(a.a,{mdxType:"DropdownElement"},"Salut"))),Object(l.b)("div",{style:{position:"relative",height:"fit-content",alignSelf:"flex-end"}},Object(l.b)("div",{ref:b},Object(l.b)(c.a,{nature:"secondary",onClick:function(){i(!p)},mdxType:"Button"},"Click Me")),Object(l.b)(d.a,{isOpen:p,dockingSide:"left",placement:"bottom",containerRef:s,controllerRef:b,mdxType:"DropdownMenu"},Object(l.b)(a.a,{mdxType:"DropdownElement"},"Hello"),Object(l.b)(a.a,{mdxType:"DropdownElement"},"Holà"),Object(l.b)(a.a,{mdxType:"DropdownElement"},"Salut"))))})))}w&&w===Object(w)&&Object.isExtensible(w)&&!w.hasOwnProperty("__filemeta")&&Object.defineProperty(w,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/atoms/dropdownMenu/DropdownMenu.mdx"}}),w.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-atoms-dropdown-menu-dropdown-menu-mdx-d8d68795ae6ed463ab8e.js.map