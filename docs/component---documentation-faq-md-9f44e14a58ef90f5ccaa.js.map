{"version":3,"sources":["webpack:///../documentation/FAQ.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oeAMO,IAAMA,EAAe,Q,sMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,8BADR,8BAGA,iBAAQ,CACN,GAAM,0DADR,kBAEsB,0BAAYC,WAAW,MAAvB,QAFtB,wCAGA,4BAAW,0BAAYA,WAAW,KAAvB,QAAX,wDAAoH,mBAAGA,WAAW,KAAQ,CACtI,KAAQ,uBADwG,QAApH,sBAEwC,mBAAGA,WAAW,KAAQ,CAC1D,KAAQ,8CAD4B,6CAFxC,UAIiE,mBAAGA,WAAW,KAAQ,CACnF,KAAQ,8BADqD,gBAJjE,8FAMwH,0BAAYA,WAAW,KAAvB,QANxH,kJ,6LAWJJ,EAAWK,gBAAiB","file":"component---documentation-faq-md-9f44e14a58ef90f5ccaa.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/alexandre/Documents/Programmation/ui-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"frequently-asked-questions\"\n    }}>{`Frequently Asked Questions`}</h1>\n    <h3 {...{\n      \"id\": \"where-do-those-docs-files-appearing-in-my-pr-come-from\"\n    }}>{`Where do those `}<inlineCode parentName=\"h3\">{`docs`}</inlineCode>{` files appearing in my PR come from?`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`docs`}</inlineCode>{` folder contains the live documentation generated by `}<a parentName=\"p\" {...{\n        \"href\": \"https://docz.site/\"\n      }}>{`docz`}</a>{` and accessible at `}<a parentName=\"p\" {...{\n        \"href\": \"https://dashlane.github.io/ui-components/\"\n      }}>{`https://dashlane.github.io/ui-components/`}</a>{` using `}<a parentName=\"p\" {...{\n        \"href\": \"https://pages.github.com/\"\n      }}>{`Github Pages`}</a>{`. Since we don't have any CI for this repository yet, a post-commit hook will check if any `}<inlineCode parentName=\"p\">{`.mdx`}</inlineCode>{` file has changed, and eventually build the docz documentation and create a new commit. This way the live documentation is always up to date.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}