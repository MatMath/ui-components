{"version":3,"sources":["webpack:///../src/components/tooltip/Tooltip.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","Tooltip","__position","__code","__scope","useRef","Playground","Props","TooltipDemo","className","preview","title","type","placement","isMDXComponent"],"mappings":"qhBAWO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,cAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,uPACiG,0BAAYC,WAAW,KAAvB,SADjG,4OAC+X,0BAAYA,WAAW,KAAvB,sCAD/X,8WAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAASH,QAAQ,UAC5B,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,eADR,eAGA,gSACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,wkDAAmmDC,SAAO,GAC3oDP,QACAH,kBACAW,gBACAC,eACAC,UACAN,YACAO,iBAP2oD,gBAQ3oDd,IAR2oD,EAS3oDH,eAT2oD,GAU1oDkB,UAAW,CACZC,QAAS,mBACRZ,QAAQ,cACX,uBACI,YAAC,IAAD,CAASa,MAAM,QAAQC,KAAK,QAAQd,QAAQ,WACxC,+DAGR,uBACI,YAAC,MAAD,GAASe,UAAU,OAAOF,MAAM,6BAAhC,UAAqE,QAArE,EAA6Eb,QAAQ,UAArF,GACI,uDAGN,uBACF,YAAC,MAAD,GAASe,UAAU,SAASF,MAAM,isBAAlC,UAA2uB,SAA3uB,EAAovBC,KAAK,UAAzvB,EAAmwBd,QAAQ,UAA3wB,GACI,qEAGF,uBACF,YAAC,MAAD,GAASe,UAAU,QAAQF,MAAM,6OAAjC,UAAsR,QAAtR,EAA8RC,KAAK,UAAnS,EAA6Sd,QAAQ,UAArT,GACI,yEAIJ,iBAAQ,CACN,GAAM,qBADR,qBAGA,sBACE,kBAAIC,WAAW,MAAf,+IAAoK,0BAAYA,WAAW,MAAvB,WAApK,WACA,kBAAIA,WAAW,MAAf,+JAAoL,0BAAYA,WAAW,MAAvB,UAApL,6CAAqR,0BAAYA,WAAW,MAAvB,KAArR,eAAmV,0BAAYA,WAAW,MAAvB,QAAnV,qEAA0c,0BAAYA,WAAW,MAAvB,mBAA1c,UACA,kBAAIA,WAAW,MAAf,gDAAqE,0BAAYA,WAAW,MAAvB,aAArE,SAAqI,0BAAYA,WAAW,MAAvB,MAArI,0LACA,kBAAIA,WAAW,MAAf,4BAAiD,0BAAYA,WAAW,MAAvB,mBAAjD,4HACA,kBAAIA,WAAW,MAAf,gJAAqK,0BAAYA,WAAW,MAAvB,UAArK,8LACA,kBAAIA,WAAW,MAAf,2FAAgH,0BAAYA,WAAW,MAAvB,KAAhH,kJAEF,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,kBAAmBC,SAAO,GAC3DP,QACAH,kBACAW,gBACAC,eACAC,UACAN,YACAO,iBAP2D,gBAQ3Dd,IAR2D,EAS3DH,eAT2D,GAU1DkB,UAAW,CACZC,QAAS,mBACRZ,QAAQ,cACb,YAAC,IAAD,CAAaA,QAAQ,kB,2MAMvBH,EAAWmB,gBAAiB","file":"component---src-components-tooltip-tooltip-mdx-807ebb4dcc0b74ffcf78.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/quentin/dev/ui-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useRef } from 'react';\nimport { Playground, Props } from 'docz';\nimport { Tooltip } from './Tooltip';\nimport { TooltipDemo } from './TooltipDemo';\nimport '../../utility/playgroundStyles.css';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"tooltip\"\n    }}>{`Tooltip`}</h1>\n    <p>{`A tooltip component that gives an extra information about something when the user moves the mouse pointer over an element.\nThis tooltip component is dynamic: it adapts to the container size. It means that if you specify a `}<inlineCode parentName=\"p\">{`right`}</inlineCode>{` placement for the tooltip and that placement doesn't fit in the current container, then the tooltip placement will be changed automatically to the first possible placement. The alternative placements order is defined like following `}<inlineCode parentName=\"p\">{`['top', 'left', 'right', 'bottom']`}</inlineCode>{`. If the tooltip-ed element changes its position in the container (due to scroll or window resize for example) then the placement will be calculated again to fit the new display.\nAlso, if the text of the tooltip changes while its being displayed, then the placement will be calculated again to make sure that it still fits in the container with the new content.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Tooltip} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <p>{`Examples below show usage of the tooltip with different titles and types. You can change the size of the window (by opening the dev console for example) to see how the tooltip of the last button adapts to the new container size (placement goes from right to top).`}</p>\n    <Playground __position={1} __code={'<div>\\n  <Tooltip title=\\\"Oups!\\\" type=\\\"error\\\">\\n    <button>Tooltip me to the default (top)</button>\\n  </Tooltip>\\n</div>\\n<div>\\n  <Tooltip\\n    placement=\\\"left\\\"\\n    title=\\\"At vero eos et accusamus\\\"\\n    placement=\\\"right\\\"\\n  >\\n    <button>Tooltip me to the right</button>\\n  </Tooltip>\\n</div>\\n<div>\\n  <Tooltip\\n    placement=\\\"bottom\\\"\\n    title=\\\"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur?\\\"\\n    placement=\\\"bottom\\\"\\n    type=\\\"success\\\"\\n  >\\n    <button>Tooltip me to the bottom with success</button>\\n  </Tooltip>\\n</div>\\n<div>\\n  <Tooltip\\n    placement=\\\"right\\\"\\n    title=\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\\"\\n    placement=\\\"right\\\"\\n    type=\\\"success\\\"\\n  >\\n    <button>Tooltip me to the right with a long text</button>\\n  </Tooltip>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      useRef,\n      Playground,\n      Props,\n      Tooltip,\n      TooltipDemo,\n      DefaultLayout,\n      _frontmatter\n    }} className={{\n      preview: 'playground-base'\n    }} mdxType=\"Playground\">\n    <div>\n        <Tooltip title='Oups!' type='error' mdxType=\"Tooltip\">\n            <button>Tooltip me to the default (top)</button>\n        </Tooltip>\n    </div>\n    <div>\n        <Tooltip placement='left' title='At vero eos et accusamus' placement='right' mdxType=\"Tooltip\">\n            <button>Tooltip me to the right</button>\n        </Tooltip>\n    </div>\n      <div>\n    <Tooltip placement='bottom' title=\"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur?\" placement='bottom' type='success' mdxType=\"Tooltip\">\n        <button>Tooltip me to the bottom with success</button>\n    </Tooltip>\n      </div>\n      <div>\n    <Tooltip placement='right' title=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \" placement='right' type='success' mdxType=\"Tooltip\">\n        <button>Tooltip me to the right with a long text</button>\n    </Tooltip>\n      </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"advanced-settings\"\n    }}>{`Advanced settings`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`The Tooltip can be configured with extra options in order to customize it with the desired behaviour. This is where you can make use of the `}<inlineCode parentName=\"li\">{`options`}</inlineCode>{` props.`}</li>\n      <li parentName=\"ul\">{`The Example below shows a list of items. A tooltip is displayed once we hover the \"hover me\" button of each item. The placement of tooltip is configured to `}<inlineCode parentName=\"li\">{`bottom`}</inlineCode>{` for all items except for the item number `}<inlineCode parentName=\"li\">{`1`}</inlineCode>{` that has a `}<inlineCode parentName=\"li\">{`left`}</inlineCode>{` placement. The code associated to this example is located in the `}<inlineCode parentName=\"li\">{`TooltipDemo.tsx`}</inlineCode>{` file.`}</li>\n      <li parentName=\"ul\">{`This example shows how to configure a custom `}<inlineCode parentName=\"li\">{`container`}</inlineCode>{` (the `}<inlineCode parentName=\"li\">{`ul`}</inlineCode>{` list in our case) if you need to handle the tooltip placement calculation in a specific zone. The placement will be then calculated in the range of that container instead of Window.`}</li>\n      <li parentName=\"ul\">{`Also you can configure a `}<inlineCode parentName=\"li\">{`tooltipMaxWidth`}</inlineCode>{` to make the max-width property smaller than default (300px) in order to adapt to the tooltip size to the new container.`}</li>\n      <li parentName=\"ul\">{`You will notice as you test the behaviour below that for the fourth item the tooltip will be displayed on top instead of specified placement `}<inlineCode parentName=\"li\">{`bottom`}</inlineCode>{` since the space left doesn't allow it to be visible. And if you scroll in the list, then the space will be sufficient for it to be displayed so the placement will be set back to bottom.`}</li>\n      <li parentName=\"ul\">{`You will notice as well that once you click on the \"hover me\" button of the item number `}<inlineCode parentName=\"li\">{`1`}</inlineCode>{` the tooltip title will be updated and its placement will be automatically calculated again to fit into the container with the new long text.`}</li>\n    </ul>\n    <Playground __position={2} __code={'<TooltipDemo />'} __scope={{\n      props,\n      DefaultLayout,\n      useRef,\n      Playground,\n      Props,\n      Tooltip,\n      TooltipDemo,\n      DefaultLayout,\n      _frontmatter\n    }} className={{\n      preview: 'playground-base'\n    }} mdxType=\"Playground\">\n  <TooltipDemo mdxType=\"TooltipDemo\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}