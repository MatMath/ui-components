{"version":3,"sources":["webpack:///../src/molecules/quick-actions-menu/QuickActionsMenu.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","QuickActionsMenu","__position","__code","__scope","Playground","Props","Button","MoreIcon","DropdownElement","style","display","flexDirection","justifyContent","height","React","useState","isOpen","setIsOpen","icon","onClick","e","preventDefault","tooltipTitle","isMDXComponent"],"mappings":"0jBAWO,IAAMA,EAAe,Q,uOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,qQAGY,mBAAGC,WAAW,KAAQ,CAC9B,KAAQ,8BADA,2BAHZ,KAMA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAkBH,QAAQ,UACrC,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,+aAAkbC,QAAS,CAC5dP,QACAH,kBACAW,eACAC,UACAC,WACAC,aACAC,oBACAR,sBACCS,MAAO,CACRC,QAAS,OACTC,cAAe,MACfC,eAAgB,eAChBC,OAAQ,SACPhB,QAAQ,eACZ,WAAM,MAC2BiB,IAAMC,UAAS,GAApCC,EADN,KACcC,EADd,KAQD,OAAO,YAAC,IAAD,CAAkBC,KAAM,YAAC,IAAD,CAAUrB,QAAQ,aAAemB,OAAQA,EAAQG,QALhE,SAAAC,GACdA,EAAEC,iBACFJ,GAAWD,IAGqFM,aAAa,UAAUzB,QAAQ,oBACjI,YAAC,IAAD,CAAiBA,QAAQ,mBAAzB,iBACA,YAAC,IAAD,CAAiBA,QAAQ,mBAAzB,mB,8NAQRH,EAAW6B,gBAAiB","file":"component---src-molecules-quick-actions-menu-quick-actions-menu-mdx-c61372729967cda65db0.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/quentin/dev/ui-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Button from '../../atoms/button/Button';\nimport MoreIcon from '../../atoms/icons/MoreIcon';\nimport DropdownElement from '../../ions/dropdown/element/DropdownElement.tsx';\nimport QuickActionsMenu from './QuickActionsMenu';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"quick-actions-menu\"\n    }}>{`Quick Actions Menu`}</h1>\n    <p>{`Quick action menu is a specific components meant for users to quickly copy\na credential's information like login and password.\nIt is not meant to be used in an other context. If you're looking for customizable dropdown,\ncheck out the `}<a parentName=\"p\" {...{\n        \"href\": \"./src-atoms-button-button\"\n      }}>{`Dropdown Menu component`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={QuickActionsMenu} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [isOpen, setIsOpen] = React.useState(false)\\n  const onClick = e => {\\n    e.preventDefault()\\n    setIsOpen(!isOpen)\\n  }\\n  return (\\n    <QuickActionsMenu\\n      icon={<MoreIcon />}\\n      isOpen={isOpen}\\n      onClick={onClick}\\n      tooltipTitle=\\\"Tooltip\\\"\\n    >\\n      <DropdownElement>Copy Password</DropdownElement>\\n      <DropdownElement>Copy Login</DropdownElement>\\n    </QuickActionsMenu>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      MoreIcon,\n      DropdownElement,\n      QuickActionsMenu\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      height: '200px'\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isOpen, setIsOpen] = React.useState(false);\n\n        const onClick = e => {\n          e.preventDefault();\n          setIsOpen(!isOpen);\n        };\n\n        return <QuickActionsMenu icon={<MoreIcon mdxType=\"MoreIcon\" />} isOpen={isOpen} onClick={onClick} tooltipTitle='Tooltip' mdxType=\"QuickActionsMenu\">\n        <DropdownElement mdxType=\"DropdownElement\">Copy Password</DropdownElement>\n        <DropdownElement mdxType=\"DropdownElement\">Copy Login</DropdownElement>\n      </QuickActionsMenu>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}