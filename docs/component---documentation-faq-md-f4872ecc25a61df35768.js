(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{taex:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",function(){return r}),n.d(t,"default",function(){return p});n("1c7q"),n("abGl"),n("gZHo"),n("Fdmb"),n("Ir+3"),n("2mQt");var a=n("/FXl"),o=n("TjRS");n("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"documentation/FAQ.md"}});var c={_frontmatter:r},s=o.a;function p(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(s,i({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"frequently-asked-questions"},"Frequently Asked Questions"),Object(a.b)("h3",{id:"where-do-those-docs-files-appearing-in-my-pr-come-from"},"Where do those ",Object(a.b)("inlineCode",{parentName:"h3"},"docs")," files appearing in my PR come from?"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"docs")," folder contains the live documentation generated by ",Object(a.b)("a",i({parentName:"p"},{href:"https://docz.site/"}),"docz")," and accessible at ",Object(a.b)("a",i({parentName:"p"},{href:"https://dashlane.github.io/ui-components/"}),"https://dashlane.github.io/ui-components/")," using ",Object(a.b)("a",i({parentName:"p"},{href:"https://pages.github.com/"}),"Github Pages"),". Since we don't have any CI for this repository yet, a post-commit hook will check if any ",Object(a.b)("inlineCode",{parentName:"p"},".mdx")," file has changed, and eventually build the docz documentation and create a new commit. This way the live documentation is always up to date."))}p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"documentation/FAQ.md"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---documentation-faq-md-f4872ecc25a61df35768.js.map