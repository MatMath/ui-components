{"version":3,"sources":["webpack:///../src/components/toggle/Toggle.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Toggle","parentName","__position","__code","__scope","Playground","Props","ToggleDemo","style","display","flexDirection","justifyContent","pointerEvents","readOnly","checked","disabled","isMDXComponent"],"mappings":"ygBASO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,8DACA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAQF,QAAQ,UAC3B,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,eADR,eAGA,gDAA+B,0BAAYG,WAAW,KAAvB,UAA/B,6EACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,uHAAwHC,SAAO,GAChKP,QACAH,kBACAW,eACAC,UACAN,WACAO,gBANgK,gBAOhKb,IAPgK,EAQhKH,eARgK,GAS/JiB,MAAO,CACRC,QAAS,OACTC,cAAe,MACfC,eAAgB,eAChBC,cAAe,QACdd,QAAQ,cACb,YAAC,IAAD,CAAQe,UAAQ,EAACf,QAAQ,WACzB,YAAC,IAAD,CAAQgB,SAAO,EAACD,UAAQ,EAACf,QAAQ,WACjC,YAAC,IAAD,CAAQiB,UAAQ,EAACF,UAAQ,EAACf,QAAQ,WAClC,YAAC,IAAD,CAAQiB,UAAQ,EAACD,SAAO,EAACD,UAAQ,EAACf,QAAQ,YAExC,+DAA8C,0BAAYG,WAAW,KAAvB,UAA9C,KACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iBAAkBC,SAAO,GAC1DP,QACAH,kBACAW,eACAC,UACAN,WACAO,gBAN0D,gBAO1Db,IAP0D,EAQ1DH,eAR0D,GASzDiB,MAAO,CACRC,QAAS,OACTC,cAAe,MACfC,eAAgB,gBACfb,QAAQ,cACb,YAAC,IAAD,CAAYA,QAAQ,iB,yMAMtBH,EAAWqB,gBAAiB","file":"component---src-components-toggle-toggle-mdx-2f9d6b9cdc4caf8093ef.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/quentin/dev/ui-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Toggle } from './Toggle';\nimport { ToggleDemo } from './ToggleDemo';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"toggle\"\n    }}>{`Toggle`}</h1>\n    <p>{`An On/Off checkable toggle component.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Toggle} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <p>{`Examples below show the `}<inlineCode parentName=\"p\">{`Toggle`}</inlineCode>{` in its checked and unchecked states, both in enabled and disabled modes:`}</p>\n    <Playground __position={1} __code={'<Toggle readOnly />\\n<Toggle checked readOnly />\\n<Toggle disabled readOnly />\\n<Toggle disabled checked readOnly />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      ToggleDemo,\n      DefaultLayout,\n      _frontmatter\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      pointerEvents: 'none'\n    }} mdxType=\"Playground\">\n  <Toggle readOnly mdxType=\"Toggle\" />\n  <Toggle checked readOnly mdxType=\"Toggle\" />\n  <Toggle disabled readOnly mdxType=\"Toggle\" />\n  <Toggle disabled checked readOnly mdxType=\"Toggle\" />\n    </Playground>\n    <p>{`The example below shows an interactive `}<inlineCode parentName=\"p\">{`Toggle`}</inlineCode>{`.`}</p>\n    <Playground __position={2} __code={'<ToggleDemo />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      ToggleDemo,\n      DefaultLayout,\n      _frontmatter\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }} mdxType=\"Playground\">\n  <ToggleDemo mdxType=\"ToggleDemo\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}