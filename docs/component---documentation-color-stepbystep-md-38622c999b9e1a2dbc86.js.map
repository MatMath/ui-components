{"version":3,"sources":["webpack:///../documentation/COLOR_STEPBYSTEP.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oeAMO,IAAMA,EAAe,Q,mNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,sKACA,sBACE,kBAAIC,WAAW,MAAf,oBAAyC,mBAAGA,WAAW,MAAS,CAC5D,KAAQ,4CACP,0BAAYA,WAAW,KAAvB,2CAEP,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,uDAQL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,oCAA5B,wBAAkI,0BAAYA,WAAW,MAAvB,cAAlI,KAA+L,0BAAYA,WAAW,MAAvB,eAA/L,QAAgQ,0BAAYA,WAAW,MAAvB,gB,0MAMtQJ,EAAWK,gBAAiB","file":"component---documentation-color-stepbystep-md-38622c999b9e1a2dbc86.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/hlucas/Documents/ui-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-to-add-a-color\"\n    }}>{`How to add a color`}</h1>\n    <p>{`In order to avoid repetitive/manual work to create color stylesheets, we choose to generate them. Here's a step by step guide to add a color:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Add the color to `}<a parentName=\"li\" {...{\n          \"href\": \"../src/design-tokens/colors/colors.json\"\n        }}><inlineCode parentName=\"a\">{`src/design-tokens/colors/colors.json`}</inlineCode></a></li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    ...,\n    \"black\": \"#000000\",\n    ...\n}\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Run `}<inlineCode parentName=\"li\">{`yarn generate-colors-stylesheets`}</inlineCode>{`. This will generate `}<inlineCode parentName=\"li\">{`colors.css`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`colors.scss`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`colors.ts`}</inlineCode></li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}