{"version":3,"sources":["webpack:///../documentation/ICON_STEPBYSTEP.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oeAMO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,0LAAyK,mBAAGC,WAAW,KAAQ,CAC3L,KAAQ,4BAD6J,OAE5J,0BAAYA,WAAW,KAAvB,wBAF4J,WAAzK,kDAGA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,oBAAwC,0BAAYA,WAAW,KAAvB,OAAxC,6BACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,iBADI,iXAOvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sCAA0D,0BAAYA,WAAW,KAAvB,SAA1D,kBAA8H,0BAAYA,WAAW,KAAvB,QAA9H,gBACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,iBADI,qPAKvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,cAAkC,0BAAYA,WAAW,KAAvB,KAAlC,wBAAwG,0BAAYA,WAAW,KAAvB,OAAxG,iBAAyK,0BAAYA,WAAW,KAAvB,eAAzK,kBAAmP,0BAAYA,WAAW,KAAvB,aAAnP,KACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,iBADI,kRAKvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8BAAkD,mBAAGA,WAAW,KAAQ,CACpE,KAAQ,+CACP,0BAAYA,WAAW,KAAvB,4CAFL,2EAGA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,+SAQvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+BACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,oCAIrB,iBAAGA,WAAW,MAAd,yBAA6C,mBAAGA,WAAW,KAAQ,CAC/D,KAAQ,+CADiC,eAA7C,2CAEoE,mBAAGA,WAAW,KAAQ,CACtF,KAAQ,+CACP,0BAAYA,WAAW,KAAvB,oBAJL,cAImF,mBAAGA,WAAW,KAAQ,CACrG,KAAQ,4DADuE,iBAJnF,yBAMoD,mBAAGA,WAAW,KAAQ,CACtE,KAAQ,qCACP,0BAAYA,WAAW,KAAvB,kCARL,wCASA,0BAAYA,WAAW,MACrB,iBAAGA,WAAW,cAAd,qIAGJ,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qCAAyD,mBAAGA,WAAW,KAAQ,CAC3E,KAAQ,iCAD6C,sBAAzD,yCAGA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,gBADI,yH,yMAgB7BJ,EAAWK,gBAAiB","file":"component---documentation-icon-stepbystep-md-51fb54a043008478e3d8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mlegault/github/ui-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-to-add-an-icon\"\n    }}>{`How to add an icon`}</h1>\n    <p>{`In order to avoid repetitive/manual work to create svg icons components, we choose to generate them.They are all similar and only the content of the svg changes (`}<a parentName=\"p\" {...{\n        \"href\": \"../src/components/icons\"\n      }}>{`see `}<inlineCode parentName=\"a\">{`src/components/icons`}</inlineCode>{` folder`}</a>{`). Here's a step by step guide to add an icon:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Extract the icon `}<inlineCode parentName=\"p\">{`svg`}</inlineCode>{` and open it in your IDE.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<svg width=\"22\" height=\"20\" viewBox=\"0 0 22 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 0H22V14.9398H11.3508L5 20V14.9398H0V0ZM2 1.99197V12.9478H7V15.8555L10.6492 12.9478H20V1.99197H2ZM7 7.96788H6V5.97591H9V9.95985H7V7.96788ZM13 7.96788H12V5.97591H15V9.95985H13V7.96788Z\" fill=\"#0E353D\"/>\n</svg>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy the svg content, removing the `}<inlineCode parentName=\"p\">{`<svg>`}</inlineCode>{` container and `}<inlineCode parentName=\"p\">{`fill`}</inlineCode>{` attributes.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 0H22V14.9398H11.3508L5 20V14.9398H0V0ZM2 1.99197V12.9478H7V15.8555L10.6492 12.9478H20V1.99197H2ZM7 7.96788H6V5.97591H9V9.95985H7V7.96788ZM13 7.96788H12V5.97591H15V9.95985H13V7.96788Z\"/>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Escape all `}<inlineCode parentName=\"p\">{`\"`}</inlineCode>{` replacing them with `}<inlineCode parentName=\"p\">{`\\\\\"`}</inlineCode>{`, and replace `}<inlineCode parentName=\"p\">{`kebab-named`}</inlineCode>{` properties to `}<inlineCode parentName=\"p\">{`camelCase`}</inlineCode>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<path fillRule=\\\\\"evenodd\\\\\" clipRule=\\\\\"evenodd\\\\\" d=\\\\\"M0 0H22V14.9398H11.3508L5 20V14.9398H0V0ZM2 1.99197V12.9478H7V15.8555L10.6492 12.9478H20V1.99197H2ZM7 7.96788H6V5.97591H9V9.95985H7V7.96788ZM13 7.96788H12V5.97591H15V9.95985H13V7.96788Z\\\\\" fill=\\\\\"#0E353D\\\\\"/>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the escaped content to `}<a parentName=\"p\" {...{\n            \"href\": \"../src/design-tokens/icons/icons-defs.json\"\n          }}><inlineCode parentName=\"a\">{`src/design-tokens/icons/icons-defs.json`}</inlineCode></a>{`, or update it if already existing. Please keep the alphabetical order.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`{\n  ...,\n  \"my icon\": \"<path fillRule=\\\\\"evenodd\\\\\" clipRule=\\\\\"evenodd\\\\\" d=\\\\\"M0 0H22V14.9398H11.3508L5 20V14.9398H0V0ZM2 1.99197V12.9478H7V15.8555L10.6492 12.9478H20V1.99197H2ZM7 7.96788H6V5.97591H9V9.95985H7V7.96788ZM13 7.96788H12V5.97591H15V9.95985H13V7.96788Z\\\\\" fill=\\\\\"#0E353D\\\\\"/>\"\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the icon generator task`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`yarn generate-icon-components\n`}</code></pre>\n        <p parentName=\"li\">{`This commandline runs `}<a parentName=\"p\" {...{\n            \"href\": \"../config/generator/icons/generateIcons.js\"\n          }}>{`this script`}</a>{`, that generates all specified icons in `}<a parentName=\"p\" {...{\n            \"href\": \"../src/design-tokens/icons/icons-defs.json\"\n          }}><inlineCode parentName=\"a\">{`icons-defs.json`}</inlineCode></a>{` following `}<a parentName=\"p\" {...{\n            \"href\": \"../config/generator/icons/IconComponentTemplate.tsx.hbs\"\n          }}>{`this template`}</a>{`. It also updates the `}<a parentName=\"p\" {...{\n            \"href\": \"../src/components/icons/index.ts\"\n          }}><inlineCode parentName=\"a\">{`src/components/icons/index.ts`}</inlineCode></a>{` to export the generated components.`}</p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`Note: this process is safe: no duplicated components/exports will be generated (if files already exist they will be overridden)`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the newly created icon to the `}<a parentName=\"p\" {...{\n            \"href\": \"../src/atoms/icons/Icons.mdx\"\n          }}>{`documentation file`}</a>{`. Please keep the alphabetical order.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-md\"\n          }}>{`...\nimport { SharedIcon } from './ShareIcon';\n...\n<IconsWrapper>\n...\n<MyIcon size={30} />\n</IconsWrapper>\n`}</code></pre>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}