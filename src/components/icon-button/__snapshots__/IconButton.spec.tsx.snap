// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<IconButton> Global render should render default 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 20px;
  height: 20px;
  cursor: inherit;
  outline: none;
  border-radius: 4px;
  fill: #0E353D;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  opacity: 1;
  -webkit-transition: all 0.1s ease-in;
  transition: all 0.1s ease-in;
}

.c0:hover {
  fill: #0E353D;
}

.c0:active {
  fill: #0E353D;
}

<Component
  icon={<Unknown />}
>
  <Component
    className="iconButton small"
    nature="ghost"
    size="small"
    theme="light"
  >
    <button
      className="button ghost small light iconButton small"
    >
      <span
        className="content"
      >
        <Component>
          <Component>
            <styled.svg
              svgAnimated={false}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bdVaJa",
                      "isStatic": false,
                      "lastClassName": "c0",
                      "rules": Array [
                        "
  display: flex;
  width: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  cursor: ",
                        [Function],
                        ";
  outline: none;
  border-radius: 4px;
  fill: ",
                        [Function],
                        ";
  transform: ",
                        [Function],
                        ";
  opacity: ",
                        [Function],
                        ";
  transition: ",
                        [Function],
                        "
  &:hover {
    fill: ",
                        [Function],
                        ";
  }
  &:active {
    fill: ",
                        [Function],
                        ";
  }
",
                      ],
                    },
                    "displayName": "styled.svg",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bdVaJa",
                    "target": "svg",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                svgAnimated={false}
              >
                <svg
                  className="c0"
                  version="1.1"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M12.25 9.75V10.75H13.25V12.25H12.25V13.25H10.75V12.25H9.75V10.75H10.75V9.75H12.25Z"
                  />
                   
                  <path
                    clipRule="evenodd"
                    d="M6.5 17.5H16.5V5.50006H6.5V17.5ZM15 7.00006V16H8V7.00006H15Z"
                    fillRule="evenodd"
                  />
                   
                  <path
                    d="M3.5 5.07142H5V4H7.7857V2.5H3.5V5.07142Z"
                  />
                   
                  <path
                    d="M9.21427 2.5H13.5V5.07142H12V4H9.21427V2.5Z"
                  />
                   
                  <path
                    d="M6.5 14.5V13H5V11.9286H3.5V14.5H6.5Z"
                  />
                   
                  <path
                    d="M3.5 11.0714V5.92856H5V11.0714H3.5Z"
                  />
                </svg>
              </StyledComponent>
            </styled.svg>
          </Component>
        </Component>
      </span>
    </button>
  </Component>
</Component>
`;

exports[`<IconButton> Style properties should render large size 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 20px;
  height: 20px;
  cursor: inherit;
  outline: none;
  border-radius: 4px;
  fill: #0E353D;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  opacity: 1;
  -webkit-transition: all 0.1s ease-in;
  transition: all 0.1s ease-in;
}

.c0:hover {
  fill: #0E353D;
}

.c0:active {
  fill: #0E353D;
}

<Component
  icon={<Unknown />}
  size="large"
>
  <Component
    className="iconButton large"
    nature="ghost"
    size="large"
    theme="light"
  >
    <button
      className="button ghost large light iconButton large"
    >
      <span
        className="content"
      >
        <Component>
          <Component>
            <styled.svg
              svgAnimated={false}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bdVaJa",
                      "isStatic": false,
                      "lastClassName": "c0",
                      "rules": Array [
                        "
  display: flex;
  width: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  cursor: ",
                        [Function],
                        ";
  outline: none;
  border-radius: 4px;
  fill: ",
                        [Function],
                        ";
  transform: ",
                        [Function],
                        ";
  opacity: ",
                        [Function],
                        ";
  transition: ",
                        [Function],
                        "
  &:hover {
    fill: ",
                        [Function],
                        ";
  }
  &:active {
    fill: ",
                        [Function],
                        ";
  }
",
                      ],
                    },
                    "displayName": "styled.svg",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bdVaJa",
                    "target": "svg",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                svgAnimated={false}
              >
                <svg
                  className="c0"
                  version="1.1"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M12.25 9.75V10.75H13.25V12.25H12.25V13.25H10.75V12.25H9.75V10.75H10.75V9.75H12.25Z"
                  />
                   
                  <path
                    clipRule="evenodd"
                    d="M6.5 17.5H16.5V5.50006H6.5V17.5ZM15 7.00006V16H8V7.00006H15Z"
                    fillRule="evenodd"
                  />
                   
                  <path
                    d="M3.5 5.07142H5V4H7.7857V2.5H3.5V5.07142Z"
                  />
                   
                  <path
                    d="M9.21427 2.5H13.5V5.07142H12V4H9.21427V2.5Z"
                  />
                   
                  <path
                    d="M6.5 14.5V13H5V11.9286H3.5V14.5H6.5Z"
                  />
                   
                  <path
                    d="M3.5 11.0714V5.92856H5V11.0714H3.5Z"
                  />
                </svg>
              </StyledComponent>
            </styled.svg>
          </Component>
        </Component>
      </span>
    </button>
  </Component>
</Component>
`;

exports[`<IconButton> Style properties should render medium size 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 20px;
  height: 20px;
  cursor: inherit;
  outline: none;
  border-radius: 4px;
  fill: #0E353D;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  opacity: 1;
  -webkit-transition: all 0.1s ease-in;
  transition: all 0.1s ease-in;
}

.c0:hover {
  fill: #0E353D;
}

.c0:active {
  fill: #0E353D;
}

<Component
  icon={<Unknown />}
  size="medium"
>
  <Component
    className="iconButton medium"
    nature="ghost"
    size="medium"
    theme="light"
  >
    <button
      className="button ghost medium light iconButton medium"
    >
      <span
        className="content"
      >
        <Component>
          <Component>
            <styled.svg
              svgAnimated={false}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bdVaJa",
                      "isStatic": false,
                      "lastClassName": "c0",
                      "rules": Array [
                        "
  display: flex;
  width: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  cursor: ",
                        [Function],
                        ";
  outline: none;
  border-radius: 4px;
  fill: ",
                        [Function],
                        ";
  transform: ",
                        [Function],
                        ";
  opacity: ",
                        [Function],
                        ";
  transition: ",
                        [Function],
                        "
  &:hover {
    fill: ",
                        [Function],
                        ";
  }
  &:active {
    fill: ",
                        [Function],
                        ";
  }
",
                      ],
                    },
                    "displayName": "styled.svg",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bdVaJa",
                    "target": "svg",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                svgAnimated={false}
              >
                <svg
                  className="c0"
                  version="1.1"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M12.25 9.75V10.75H13.25V12.25H12.25V13.25H10.75V12.25H9.75V10.75H10.75V9.75H12.25Z"
                  />
                   
                  <path
                    clipRule="evenodd"
                    d="M6.5 17.5H16.5V5.50006H6.5V17.5ZM15 7.00006V16H8V7.00006H15Z"
                    fillRule="evenodd"
                  />
                   
                  <path
                    d="M3.5 5.07142H5V4H7.7857V2.5H3.5V5.07142Z"
                  />
                   
                  <path
                    d="M9.21427 2.5H13.5V5.07142H12V4H9.21427V2.5Z"
                  />
                   
                  <path
                    d="M6.5 14.5V13H5V11.9286H3.5V14.5H6.5Z"
                  />
                   
                  <path
                    d="M3.5 11.0714V5.92856H5V11.0714H3.5Z"
                  />
                </svg>
              </StyledComponent>
            </styled.svg>
          </Component>
        </Component>
      </span>
    </button>
  </Component>
</Component>
`;

exports[`<IconButton> Style properties should render small size 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 20px;
  height: 20px;
  cursor: inherit;
  outline: none;
  border-radius: 4px;
  fill: #0E353D;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  opacity: 1;
  -webkit-transition: all 0.1s ease-in;
  transition: all 0.1s ease-in;
}

.c0:hover {
  fill: #0E353D;
}

.c0:active {
  fill: #0E353D;
}

<Component
  icon={<Unknown />}
  size="small"
>
  <Component
    className="iconButton small"
    nature="ghost"
    size="small"
    theme="light"
  >
    <button
      className="button ghost small light iconButton small"
    >
      <span
        className="content"
      >
        <Component>
          <Component>
            <styled.svg
              svgAnimated={false}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bdVaJa",
                      "isStatic": false,
                      "lastClassName": "c0",
                      "rules": Array [
                        "
  display: flex;
  width: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  cursor: ",
                        [Function],
                        ";
  outline: none;
  border-radius: 4px;
  fill: ",
                        [Function],
                        ";
  transform: ",
                        [Function],
                        ";
  opacity: ",
                        [Function],
                        ";
  transition: ",
                        [Function],
                        "
  &:hover {
    fill: ",
                        [Function],
                        ";
  }
  &:active {
    fill: ",
                        [Function],
                        ";
  }
",
                      ],
                    },
                    "displayName": "styled.svg",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bdVaJa",
                    "target": "svg",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                svgAnimated={false}
              >
                <svg
                  className="c0"
                  version="1.1"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M12.25 9.75V10.75H13.25V12.25H12.25V13.25H10.75V12.25H9.75V10.75H10.75V9.75H12.25Z"
                  />
                   
                  <path
                    clipRule="evenodd"
                    d="M6.5 17.5H16.5V5.50006H6.5V17.5ZM15 7.00006V16H8V7.00006H15Z"
                    fillRule="evenodd"
                  />
                   
                  <path
                    d="M3.5 5.07142H5V4H7.7857V2.5H3.5V5.07142Z"
                  />
                   
                  <path
                    d="M9.21427 2.5H13.5V5.07142H12V4H9.21427V2.5Z"
                  />
                   
                  <path
                    d="M6.5 14.5V13H5V11.9286H3.5V14.5H6.5Z"
                  />
                   
                  <path
                    d="M3.5 11.0714V5.92856H5V11.0714H3.5Z"
                  />
                </svg>
              </StyledComponent>
            </styled.svg>
          </Component>
        </Component>
      </span>
    </button>
  </Component>
</Component>
`;
