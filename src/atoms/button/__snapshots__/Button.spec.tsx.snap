// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button> Global render should render 1`] = `
<Button
  nature="danger"
>
  <wrapWithTheme>
    <BaseButton
      customStyle={Object {}}
      theme={
        Object {
          "backgroundColor": Object {
            "active": "#4E000D",
            "hover": "#8B0018",
            "idle": "#FF002D",
          },
        }
      }
    >
      <styled.button
        customStyle={Object {}}
        theme={
          Object {
            "backgroundColor": Object {
              "active": "#4E000D",
              "hover": "#8B0018",
              "idle": "#FF002D",
            },
          }
        }
      >
        <StyledComponent
          customStyle={Object {}}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "fCQCbx",
                "rules": Array [
                  "
  ",
                  "
  color: ",
                  [Function],
                  ";
  font-size: 16px;
  line-height: 20px;
  background-color: ",
                  [Function],
                  ";
  cursor: pointer;
  border: ",
                  [Function],
                  ";
  border-radius: 4px;
  min-width: 60px;
  display: flex;
  flex-direction: column;
  position: relative;
  align-items: center;
  justify-content: center;
  outline: none;
  transition: all 0.1s;
  ",
                  [Function],
                  ";

  &:hover:not(:disabled),
  &:focus:not(:disabled) {
    border: ",
                  [Function],
                  ";
    background-color: ",
                  [Function],
                  ";
  }
  &:active:not(:disabled) {
    border: ",
                  [Function],
                  ";
    background-color: ",
                  [Function],
                  ";
  }
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    span {
      pointer-events: none;
    }
  }
",
                  "
  padding: 10px 16px;
  height: 40px;
",
                ],
              },
              "displayName": "styled.button",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          theme={
            Object {
              "backgroundColor": Object {
                "active": "#4E000D",
                "hover": "#8B0018",
                "idle": "#FF002D",
              },
            }
          }
        >
          <button
            className="sc-htpNat fCQCbx"
          >
            <Styled(styled.span)>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-ifAKCX",
                      "isStatic": true,
                      "lastClassName": "cCAYTU",
                      "rules": Array [
                        "
  font-family: inherit;
  font-weight: 600;
",
                        "
  display: flex;
  justify-content: center;
  align-items: center;
",
                      ],
                    },
                    "displayName": "Styled(styled.span)",
                    "foldedComponentIds": Array [
                      "sc-bdVaJa",
                    ],
                    "render": [Function],
                    "styledComponentId": "sc-ifAKCX",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <span
                  className="sc-bdVaJa sc-ifAKCX cCAYTU"
                >
                  Default
                </span>
              </StyledComponent>
            </Styled(styled.span)>
          </button>
        </StyledComponent>
      </styled.button>
    </BaseButton>
  </wrapWithTheme>
</Button>
`;
